//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Arasan {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DpBasic")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DpBasic : global::System.Data.DataSet {
        
        private DPBASICDataTable tableDPBASIC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DpBasic() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DpBasic(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DPBASIC"] != null)) {
                    base.Tables.Add(new DPBASICDataTable(ds.Tables["DPBASIC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DPBASICDataTable DPBASIC {
            get {
                return this.tableDPBASIC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DpBasic cln = ((DpBasic)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DPBASIC"] != null)) {
                    base.Tables.Add(new DPBASICDataTable(ds.Tables["DPBASIC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDPBASIC = ((DPBASICDataTable)(base.Tables["DPBASIC"]));
            if ((initTable == true)) {
                if ((this.tableDPBASIC != null)) {
                    this.tableDPBASIC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DpBasic";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DpBasic.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDPBASIC = new DPBASICDataTable();
            base.Tables.Add(this.tableDPBASIC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeDPBASIC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DpBasic ds = new DpBasic();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void DPBASICRowChangeEventHandler(object sender, DPBASICRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DPBASICDataTable : global::System.Data.TypedTableBase<DPBASICRow> {
            
            private global::System.Data.DataColumn columnPROFITDOC;
            
            private global::System.Data.DataColumn columnAPPROVAL;
            
            private global::System.Data.DataColumn columnAPPROVALSTATUS;
            
            private global::System.Data.DataColumn columnMAXAPPROVED;
            
            private global::System.Data.DataColumn columnCANCEL;
            
            private global::System.Data.DataColumn columnT1SOURCEID;
            
            private global::System.Data.DataColumn columnLATEMPLATEID;
            
            private global::System.Data.DataColumn columnBRANCHID;
            
            private global::System.Data.DataColumn columnLOCID;
            
            private global::System.Data.DataColumn columnADSCHEME;
            
            private global::System.Data.DataColumn columnDOCID;
            
            private global::System.Data.DataColumn columnDOCDATE;
            
            private global::System.Data.DataColumn columnREFDT;
            
            private global::System.Data.DataColumn columnPARTYID;
            
            private global::System.Data.DataColumn columnPARTYNAME;
            
            private global::System.Data.DataColumn columnCRACC;
            
            private global::System.Data.DataColumn columnADTGMCONTROL;
            
            private global::System.Data.DataColumn columnRNDOFF;
            
            private global::System.Data.DataColumn columnLOCDETAILID;
            
            private global::System.Data.DataColumn columnEXCISEAPP;
            
            private global::System.Data.DataColumn columnAPPDATE;
            
            private global::System.Data.DataColumn columnGROSS;
            
            private global::System.Data.DataColumn columnNET;
            
            private global::System.Data.DataColumn columnNARR;
            
            private global::System.Data.DataColumn columnQCFLAG;
            
            private global::System.Data.DataColumn columnVTYPE;
            
            private global::System.Data.DataColumn columnTERMSTEMPLATE;
            
            private global::System.Data.DataColumn columnUSERID;
            
            private global::System.Data.DataColumn columnDPBASICID;
            
            private global::System.Data.DataColumn columnEXCHANGERATE;
            
            private global::System.Data.DataColumn columnMAINCURRENCY;
            
            private global::System.Data.DataColumn columnETYPE;
            
            private global::System.Data.DataColumn columnRPCTRL;
            
            private global::System.Data.DataColumn columnDUEDAYS;
            
            private global::System.Data.DataColumn columnDUEDATE;
            
            private global::System.Data.DataColumn columnMID;
            
            private global::System.Data.DataColumn columnDELCH;
            
            private global::System.Data.DataColumn columnBINYN;
            
            private global::System.Data.DataColumn columnVOUCHER;
            
            private global::System.Data.DataColumn columnTEMPDESC;
            
            private global::System.Data.DataColumn columnTAXABLEAMOUNT;
            
            private global::System.Data.DataColumn columnFREIGHT;
            
            private global::System.Data.DataColumn columnQCCHECK;
            
            private global::System.Data.DataColumn columnPARTYCAT;
            
            private global::System.Data.DataColumn columnLRNO;
            
            private global::System.Data.DataColumn columnLRDT;
            
            private global::System.Data.DataColumn columnLRCH;
            
            private global::System.Data.DataColumn columnTRNSPNAME;
            
            private global::System.Data.DataColumn columnEXINVNO;
            
            private global::System.Data.DataColumn columnEXINVDT;
            
            private global::System.Data.DataColumn columnEXINVBASICID;
            
            private global::System.Data.DataColumn columnPURCHTYPE;
            
            private global::System.Data.DataColumn columnFPFLAG;
            
            private global::System.Data.DataColumn columnCSTCH;
            
            private global::System.Data.DataColumn columnPURBLSTATUS;
            
            private global::System.Data.DataColumn columnMCATEGORY;
            
            private global::System.Data.DataColumn columnRPAMOUNT;
            
            private global::System.Data.DataColumn columnMDCTRL;
            
            private global::System.Data.DataColumn columnTRANSITLOCID;
            
            private global::System.Data.DataColumn columnDECLID;
            
            private global::System.Data.DataColumn columnDECLYN;
            
            private global::System.Data.DataColumn columnDESPTHRU;
            
            private global::System.Data.DataColumn columnEXSTATUS;
            
            private global::System.Data.DataColumn columnPURCHASEYN;
            
            private global::System.Data.DataColumn columnENTBY;
            
            private global::System.Data.DataColumn columnCSTVATCH;
            
            private global::System.Data.DataColumn columnTRUCKNO;
            
            private global::System.Data.DataColumn columnPKNFDCH;
            
            private global::System.Data.DataColumn columnSPLDISCF;
            
            private global::System.Data.DataColumn columnROUNDM;
            
            private global::System.Data.DataColumn columnOTHERCH;
            
            private global::System.Data.DataColumn columnPARTYBILL;
            
            private global::System.Data.DataColumn columnOTHERDISC;
            
            private global::System.Data.DataColumn columnREFNO;
            
            private global::System.Data.DataColumn columnFINYR;
            
            private global::System.Data.DataColumn columnAMTINWORDS;
            
            private global::System.Data.DataColumn columnENTAT;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnMOBILE;
            
            private global::System.Data.DataColumn columnSTATE;
            
            private global::System.Data.DataColumn columnGSTNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DPBASICDataTable() {
                this.TableName = "DPBASIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal DPBASICDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected DPBASICDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PROFITDOCColumn {
                get {
                    return this.columnPROFITDOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn APPROVALColumn {
                get {
                    return this.columnAPPROVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn APPROVALSTATUSColumn {
                get {
                    return this.columnAPPROVALSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MAXAPPROVEDColumn {
                get {
                    return this.columnMAXAPPROVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CANCELColumn {
                get {
                    return this.columnCANCEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn T1SOURCEIDColumn {
                get {
                    return this.columnT1SOURCEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LATEMPLATEIDColumn {
                get {
                    return this.columnLATEMPLATEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BRANCHIDColumn {
                get {
                    return this.columnBRANCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOCIDColumn {
                get {
                    return this.columnLOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADSCHEMEColumn {
                get {
                    return this.columnADSCHEME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DOCIDColumn {
                get {
                    return this.columnDOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DOCDATEColumn {
                get {
                    return this.columnDOCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REFDTColumn {
                get {
                    return this.columnREFDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYIDColumn {
                get {
                    return this.columnPARTYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYNAMEColumn {
                get {
                    return this.columnPARTYNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CRACCColumn {
                get {
                    return this.columnCRACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADTGMCONTROLColumn {
                get {
                    return this.columnADTGMCONTROL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RNDOFFColumn {
                get {
                    return this.columnRNDOFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOCDETAILIDColumn {
                get {
                    return this.columnLOCDETAILID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXCISEAPPColumn {
                get {
                    return this.columnEXCISEAPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn APPDATEColumn {
                get {
                    return this.columnAPPDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GROSSColumn {
                get {
                    return this.columnGROSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NETColumn {
                get {
                    return this.columnNET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NARRColumn {
                get {
                    return this.columnNARR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn QCFLAGColumn {
                get {
                    return this.columnQCFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VTYPEColumn {
                get {
                    return this.columnVTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TERMSTEMPLATEColumn {
                get {
                    return this.columnTERMSTEMPLATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DPBASICIDColumn {
                get {
                    return this.columnDPBASICID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXCHANGERATEColumn {
                get {
                    return this.columnEXCHANGERATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MAINCURRENCYColumn {
                get {
                    return this.columnMAINCURRENCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ETYPEColumn {
                get {
                    return this.columnETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RPCTRLColumn {
                get {
                    return this.columnRPCTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DUEDAYSColumn {
                get {
                    return this.columnDUEDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DUEDATEColumn {
                get {
                    return this.columnDUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MIDColumn {
                get {
                    return this.columnMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DELCHColumn {
                get {
                    return this.columnDELCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BINYNColumn {
                get {
                    return this.columnBINYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VOUCHERColumn {
                get {
                    return this.columnVOUCHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TEMPDESCColumn {
                get {
                    return this.columnTEMPDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TAXABLEAMOUNTColumn {
                get {
                    return this.columnTAXABLEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FREIGHTColumn {
                get {
                    return this.columnFREIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn QCCHECKColumn {
                get {
                    return this.columnQCCHECK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYCATColumn {
                get {
                    return this.columnPARTYCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LRNOColumn {
                get {
                    return this.columnLRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LRDTColumn {
                get {
                    return this.columnLRDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LRCHColumn {
                get {
                    return this.columnLRCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRNSPNAMEColumn {
                get {
                    return this.columnTRNSPNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVNOColumn {
                get {
                    return this.columnEXINVNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVDTColumn {
                get {
                    return this.columnEXINVDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVBASICIDColumn {
                get {
                    return this.columnEXINVBASICID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PURCHTYPEColumn {
                get {
                    return this.columnPURCHTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FPFLAGColumn {
                get {
                    return this.columnFPFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CSTCHColumn {
                get {
                    return this.columnCSTCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PURBLSTATUSColumn {
                get {
                    return this.columnPURBLSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MCATEGORYColumn {
                get {
                    return this.columnMCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RPAMOUNTColumn {
                get {
                    return this.columnRPAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MDCTRLColumn {
                get {
                    return this.columnMDCTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSITLOCIDColumn {
                get {
                    return this.columnTRANSITLOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DECLIDColumn {
                get {
                    return this.columnDECLID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DECLYNColumn {
                get {
                    return this.columnDECLYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DESPTHRUColumn {
                get {
                    return this.columnDESPTHRU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXSTATUSColumn {
                get {
                    return this.columnEXSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PURCHASEYNColumn {
                get {
                    return this.columnPURCHASEYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ENTBYColumn {
                get {
                    return this.columnENTBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CSTVATCHColumn {
                get {
                    return this.columnCSTVATCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRUCKNOColumn {
                get {
                    return this.columnTRUCKNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PKNFDCHColumn {
                get {
                    return this.columnPKNFDCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPLDISCFColumn {
                get {
                    return this.columnSPLDISCF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ROUNDMColumn {
                get {
                    return this.columnROUNDM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OTHERCHColumn {
                get {
                    return this.columnOTHERCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYBILLColumn {
                get {
                    return this.columnPARTYBILL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OTHERDISCColumn {
                get {
                    return this.columnOTHERDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REFNOColumn {
                get {
                    return this.columnREFNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FINYRColumn {
                get {
                    return this.columnFINYR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTINWORDSColumn {
                get {
                    return this.columnAMTINWORDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ENTATColumn {
                get {
                    return this.columnENTAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MOBILEColumn {
                get {
                    return this.columnMOBILE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GSTNOColumn {
                get {
                    return this.columnGSTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DPBASICRow this[int index] {
                get {
                    return ((DPBASICRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DPBASICRowChangeEventHandler DPBASICRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DPBASICRowChangeEventHandler DPBASICRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DPBASICRowChangeEventHandler DPBASICRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event DPBASICRowChangeEventHandler DPBASICRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddDPBASICRow(DPBASICRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DPBASICRow AddDPBASICRow(
                        string PROFITDOC, 
                        decimal APPROVAL, 
                        string APPROVALSTATUS, 
                        short MAXAPPROVED, 
                        string CANCEL, 
                        decimal T1SOURCEID, 
                        decimal LATEMPLATEID, 
                        decimal BRANCHID, 
                        decimal LOCID, 
                        decimal ADSCHEME, 
                        string DOCID, 
                        System.DateTime DOCDATE, 
                        System.DateTime REFDT, 
                        decimal PARTYID, 
                        string PARTYNAME, 
                        decimal CRACC, 
                        string ADTGMCONTROL, 
                        long RNDOFF, 
                        long LOCDETAILID, 
                        string EXCISEAPP, 
                        System.DateTime APPDATE, 
                        decimal GROSS, 
                        decimal NET, 
                        string NARR, 
                        int QCFLAG, 
                        string VTYPE, 
                        decimal TERMSTEMPLATE, 
                        string USERID, 
                        decimal DPBASICID, 
                        decimal EXCHANGERATE, 
                        decimal MAINCURRENCY, 
                        string ETYPE, 
                        string RPCTRL, 
                        short DUEDAYS, 
                        System.DateTime DUEDATE, 
                        decimal MID, 
                        double DELCH, 
                        string BINYN, 
                        string VOUCHER, 
                        string TEMPDESC, 
                        decimal TAXABLEAMOUNT, 
                        double FREIGHT, 
                        string QCCHECK, 
                        string PARTYCAT, 
                        string LRNO, 
                        System.DateTime LRDT, 
                        decimal LRCH, 
                        string TRNSPNAME, 
                        string EXINVNO, 
                        System.DateTime EXINVDT, 
                        decimal EXINVBASICID, 
                        string PURCHTYPE, 
                        int FPFLAG, 
                        decimal CSTCH, 
                        long PURBLSTATUS, 
                        string MCATEGORY, 
                        decimal RPAMOUNT, 
                        string MDCTRL, 
                        string TRANSITLOCID, 
                        decimal DECLID, 
                        string DECLYN, 
                        string DESPTHRU, 
                        short EXSTATUS, 
                        string PURCHASEYN, 
                        string ENTBY, 
                        decimal CSTVATCH, 
                        string TRUCKNO, 
                        double PKNFDCH, 
                        double SPLDISCF, 
                        double ROUNDM, 
                        float OTHERCH, 
                        string PARTYBILL, 
                        double OTHERDISC, 
                        decimal REFNO, 
                        string FINYR, 
                        string AMTINWORDS, 
                        string ENTAT, 
                        string IS_ACTIVE, 
                        string STATUS, 
                        string ADDRESS, 
                        string MOBILE, 
                        string STATE, 
                        string GSTNO) {
                DPBASICRow rowDPBASICRow = ((DPBASICRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROFITDOC,
                        APPROVAL,
                        APPROVALSTATUS,
                        MAXAPPROVED,
                        CANCEL,
                        T1SOURCEID,
                        LATEMPLATEID,
                        BRANCHID,
                        LOCID,
                        ADSCHEME,
                        DOCID,
                        DOCDATE,
                        REFDT,
                        PARTYID,
                        PARTYNAME,
                        CRACC,
                        ADTGMCONTROL,
                        RNDOFF,
                        LOCDETAILID,
                        EXCISEAPP,
                        APPDATE,
                        GROSS,
                        NET,
                        NARR,
                        QCFLAG,
                        VTYPE,
                        TERMSTEMPLATE,
                        USERID,
                        DPBASICID,
                        EXCHANGERATE,
                        MAINCURRENCY,
                        ETYPE,
                        RPCTRL,
                        DUEDAYS,
                        DUEDATE,
                        MID,
                        DELCH,
                        BINYN,
                        VOUCHER,
                        TEMPDESC,
                        TAXABLEAMOUNT,
                        FREIGHT,
                        QCCHECK,
                        PARTYCAT,
                        LRNO,
                        LRDT,
                        LRCH,
                        TRNSPNAME,
                        EXINVNO,
                        EXINVDT,
                        EXINVBASICID,
                        PURCHTYPE,
                        FPFLAG,
                        CSTCH,
                        PURBLSTATUS,
                        MCATEGORY,
                        RPAMOUNT,
                        MDCTRL,
                        TRANSITLOCID,
                        DECLID,
                        DECLYN,
                        DESPTHRU,
                        EXSTATUS,
                        PURCHASEYN,
                        ENTBY,
                        CSTVATCH,
                        TRUCKNO,
                        PKNFDCH,
                        SPLDISCF,
                        ROUNDM,
                        OTHERCH,
                        PARTYBILL,
                        OTHERDISC,
                        REFNO,
                        FINYR,
                        AMTINWORDS,
                        ENTAT,
                        IS_ACTIVE,
                        STATUS,
                        ADDRESS,
                        MOBILE,
                        STATE,
                        GSTNO};
                rowDPBASICRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDPBASICRow);
                return rowDPBASICRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DPBASICDataTable cln = ((DPBASICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DPBASICDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnPROFITDOC = base.Columns["PROFITDOC"];
                this.columnAPPROVAL = base.Columns["APPROVAL"];
                this.columnAPPROVALSTATUS = base.Columns["APPROVALSTATUS"];
                this.columnMAXAPPROVED = base.Columns["MAXAPPROVED"];
                this.columnCANCEL = base.Columns["CANCEL"];
                this.columnT1SOURCEID = base.Columns["T1SOURCEID"];
                this.columnLATEMPLATEID = base.Columns["LATEMPLATEID"];
                this.columnBRANCHID = base.Columns["BRANCHID"];
                this.columnLOCID = base.Columns["LOCID"];
                this.columnADSCHEME = base.Columns["ADSCHEME"];
                this.columnDOCID = base.Columns["DOCID"];
                this.columnDOCDATE = base.Columns["DOCDATE"];
                this.columnREFDT = base.Columns["REFDT"];
                this.columnPARTYID = base.Columns["PARTYID"];
                this.columnPARTYNAME = base.Columns["PARTYNAME"];
                this.columnCRACC = base.Columns["CRACC"];
                this.columnADTGMCONTROL = base.Columns["ADTGMCONTROL"];
                this.columnRNDOFF = base.Columns["RNDOFF"];
                this.columnLOCDETAILID = base.Columns["LOCDETAILID"];
                this.columnEXCISEAPP = base.Columns["EXCISEAPP"];
                this.columnAPPDATE = base.Columns["APPDATE"];
                this.columnGROSS = base.Columns["GROSS"];
                this.columnNET = base.Columns["NET"];
                this.columnNARR = base.Columns["NARR"];
                this.columnQCFLAG = base.Columns["QCFLAG"];
                this.columnVTYPE = base.Columns["VTYPE"];
                this.columnTERMSTEMPLATE = base.Columns["TERMSTEMPLATE"];
                this.columnUSERID = base.Columns["USERID"];
                this.columnDPBASICID = base.Columns["DPBASICID"];
                this.columnEXCHANGERATE = base.Columns["EXCHANGERATE"];
                this.columnMAINCURRENCY = base.Columns["MAINCURRENCY"];
                this.columnETYPE = base.Columns["ETYPE"];
                this.columnRPCTRL = base.Columns["RPCTRL"];
                this.columnDUEDAYS = base.Columns["DUEDAYS"];
                this.columnDUEDATE = base.Columns["DUEDATE"];
                this.columnMID = base.Columns["MID"];
                this.columnDELCH = base.Columns["DELCH"];
                this.columnBINYN = base.Columns["BINYN"];
                this.columnVOUCHER = base.Columns["VOUCHER"];
                this.columnTEMPDESC = base.Columns["TEMPDESC"];
                this.columnTAXABLEAMOUNT = base.Columns["TAXABLEAMOUNT"];
                this.columnFREIGHT = base.Columns["FREIGHT"];
                this.columnQCCHECK = base.Columns["QCCHECK"];
                this.columnPARTYCAT = base.Columns["PARTYCAT"];
                this.columnLRNO = base.Columns["LRNO"];
                this.columnLRDT = base.Columns["LRDT"];
                this.columnLRCH = base.Columns["LRCH"];
                this.columnTRNSPNAME = base.Columns["TRNSPNAME"];
                this.columnEXINVNO = base.Columns["EXINVNO"];
                this.columnEXINVDT = base.Columns["EXINVDT"];
                this.columnEXINVBASICID = base.Columns["EXINVBASICID"];
                this.columnPURCHTYPE = base.Columns["PURCHTYPE"];
                this.columnFPFLAG = base.Columns["FPFLAG"];
                this.columnCSTCH = base.Columns["CSTCH"];
                this.columnPURBLSTATUS = base.Columns["PURBLSTATUS"];
                this.columnMCATEGORY = base.Columns["MCATEGORY"];
                this.columnRPAMOUNT = base.Columns["RPAMOUNT"];
                this.columnMDCTRL = base.Columns["MDCTRL"];
                this.columnTRANSITLOCID = base.Columns["TRANSITLOCID"];
                this.columnDECLID = base.Columns["DECLID"];
                this.columnDECLYN = base.Columns["DECLYN"];
                this.columnDESPTHRU = base.Columns["DESPTHRU"];
                this.columnEXSTATUS = base.Columns["EXSTATUS"];
                this.columnPURCHASEYN = base.Columns["PURCHASEYN"];
                this.columnENTBY = base.Columns["ENTBY"];
                this.columnCSTVATCH = base.Columns["CSTVATCH"];
                this.columnTRUCKNO = base.Columns["TRUCKNO"];
                this.columnPKNFDCH = base.Columns["PKNFDCH"];
                this.columnSPLDISCF = base.Columns["SPLDISCF"];
                this.columnROUNDM = base.Columns["ROUNDM"];
                this.columnOTHERCH = base.Columns["OTHERCH"];
                this.columnPARTYBILL = base.Columns["PARTYBILL"];
                this.columnOTHERDISC = base.Columns["OTHERDISC"];
                this.columnREFNO = base.Columns["REFNO"];
                this.columnFINYR = base.Columns["FINYR"];
                this.columnAMTINWORDS = base.Columns["AMTINWORDS"];
                this.columnENTAT = base.Columns["ENTAT"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnMOBILE = base.Columns["MOBILE"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnGSTNO = base.Columns["GSTNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnPROFITDOC = new global::System.Data.DataColumn("PROFITDOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFITDOC);
                this.columnAPPROVAL = new global::System.Data.DataColumn("APPROVAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVAL);
                this.columnAPPROVALSTATUS = new global::System.Data.DataColumn("APPROVALSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVALSTATUS);
                this.columnMAXAPPROVED = new global::System.Data.DataColumn("MAXAPPROVED", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXAPPROVED);
                this.columnCANCEL = new global::System.Data.DataColumn("CANCEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCEL);
                this.columnT1SOURCEID = new global::System.Data.DataColumn("T1SOURCEID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT1SOURCEID);
                this.columnLATEMPLATEID = new global::System.Data.DataColumn("LATEMPLATEID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATEMPLATEID);
                this.columnBRANCHID = new global::System.Data.DataColumn("BRANCHID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCHID);
                this.columnLOCID = new global::System.Data.DataColumn("LOCID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCID);
                this.columnADSCHEME = new global::System.Data.DataColumn("ADSCHEME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADSCHEME);
                this.columnDOCID = new global::System.Data.DataColumn("DOCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCID);
                this.columnDOCDATE = new global::System.Data.DataColumn("DOCDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCDATE);
                this.columnREFDT = new global::System.Data.DataColumn("REFDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFDT);
                this.columnPARTYID = new global::System.Data.DataColumn("PARTYID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYID);
                this.columnPARTYNAME = new global::System.Data.DataColumn("PARTYNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYNAME);
                this.columnCRACC = new global::System.Data.DataColumn("CRACC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRACC);
                this.columnADTGMCONTROL = new global::System.Data.DataColumn("ADTGMCONTROL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADTGMCONTROL);
                this.columnRNDOFF = new global::System.Data.DataColumn("RNDOFF", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNDOFF);
                this.columnLOCDETAILID = new global::System.Data.DataColumn("LOCDETAILID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCDETAILID);
                this.columnEXCISEAPP = new global::System.Data.DataColumn("EXCISEAPP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCISEAPP);
                this.columnAPPDATE = new global::System.Data.DataColumn("APPDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPDATE);
                this.columnGROSS = new global::System.Data.DataColumn("GROSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSS);
                this.columnNET = new global::System.Data.DataColumn("NET", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNET);
                this.columnNARR = new global::System.Data.DataColumn("NARR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNARR);
                this.columnQCFLAG = new global::System.Data.DataColumn("QCFLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCFLAG);
                this.columnVTYPE = new global::System.Data.DataColumn("VTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVTYPE);
                this.columnTERMSTEMPLATE = new global::System.Data.DataColumn("TERMSTEMPLATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMSTEMPLATE);
                this.columnUSERID = new global::System.Data.DataColumn("USERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnDPBASICID = new global::System.Data.DataColumn("DPBASICID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPBASICID);
                this.columnEXCHANGERATE = new global::System.Data.DataColumn("EXCHANGERATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCHANGERATE);
                this.columnMAINCURRENCY = new global::System.Data.DataColumn("MAINCURRENCY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAINCURRENCY);
                this.columnETYPE = new global::System.Data.DataColumn("ETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETYPE);
                this.columnRPCTRL = new global::System.Data.DataColumn("RPCTRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPCTRL);
                this.columnDUEDAYS = new global::System.Data.DataColumn("DUEDAYS", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEDAYS);
                this.columnDUEDATE = new global::System.Data.DataColumn("DUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEDATE);
                this.columnMID = new global::System.Data.DataColumn("MID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMID);
                this.columnDELCH = new global::System.Data.DataColumn("DELCH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDELCH);
                this.columnBINYN = new global::System.Data.DataColumn("BINYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBINYN);
                this.columnVOUCHER = new global::System.Data.DataColumn("VOUCHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOUCHER);
                this.columnTEMPDESC = new global::System.Data.DataColumn("TEMPDESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPDESC);
                this.columnTAXABLEAMOUNT = new global::System.Data.DataColumn("TAXABLEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXABLEAMOUNT);
                this.columnFREIGHT = new global::System.Data.DataColumn("FREIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFREIGHT);
                this.columnQCCHECK = new global::System.Data.DataColumn("QCCHECK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCCHECK);
                this.columnPARTYCAT = new global::System.Data.DataColumn("PARTYCAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYCAT);
                this.columnLRNO = new global::System.Data.DataColumn("LRNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRNO);
                this.columnLRDT = new global::System.Data.DataColumn("LRDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRDT);
                this.columnLRCH = new global::System.Data.DataColumn("LRCH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRCH);
                this.columnTRNSPNAME = new global::System.Data.DataColumn("TRNSPNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRNSPNAME);
                this.columnEXINVNO = new global::System.Data.DataColumn("EXINVNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVNO);
                this.columnEXINVDT = new global::System.Data.DataColumn("EXINVDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVDT);
                this.columnEXINVBASICID = new global::System.Data.DataColumn("EXINVBASICID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVBASICID);
                this.columnPURCHTYPE = new global::System.Data.DataColumn("PURCHTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHTYPE);
                this.columnFPFLAG = new global::System.Data.DataColumn("FPFLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFPFLAG);
                this.columnCSTCH = new global::System.Data.DataColumn("CSTCH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTCH);
                this.columnPURBLSTATUS = new global::System.Data.DataColumn("PURBLSTATUS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURBLSTATUS);
                this.columnMCATEGORY = new global::System.Data.DataColumn("MCATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMCATEGORY);
                this.columnRPAMOUNT = new global::System.Data.DataColumn("RPAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPAMOUNT);
                this.columnMDCTRL = new global::System.Data.DataColumn("MDCTRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDCTRL);
                this.columnTRANSITLOCID = new global::System.Data.DataColumn("TRANSITLOCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSITLOCID);
                this.columnDECLID = new global::System.Data.DataColumn("DECLID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDECLID);
                this.columnDECLYN = new global::System.Data.DataColumn("DECLYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDECLYN);
                this.columnDESPTHRU = new global::System.Data.DataColumn("DESPTHRU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESPTHRU);
                this.columnEXSTATUS = new global::System.Data.DataColumn("EXSTATUS", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXSTATUS);
                this.columnPURCHASEYN = new global::System.Data.DataColumn("PURCHASEYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPURCHASEYN);
                this.columnENTBY = new global::System.Data.DataColumn("ENTBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTBY);
                this.columnCSTVATCH = new global::System.Data.DataColumn("CSTVATCH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTVATCH);
                this.columnTRUCKNO = new global::System.Data.DataColumn("TRUCKNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRUCKNO);
                this.columnPKNFDCH = new global::System.Data.DataColumn("PKNFDCH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPKNFDCH);
                this.columnSPLDISCF = new global::System.Data.DataColumn("SPLDISCF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPLDISCF);
                this.columnROUNDM = new global::System.Data.DataColumn("ROUNDM", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUNDM);
                this.columnOTHERCH = new global::System.Data.DataColumn("OTHERCH", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERCH);
                this.columnPARTYBILL = new global::System.Data.DataColumn("PARTYBILL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYBILL);
                this.columnOTHERDISC = new global::System.Data.DataColumn("OTHERDISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERDISC);
                this.columnREFNO = new global::System.Data.DataColumn("REFNO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFNO);
                this.columnFINYR = new global::System.Data.DataColumn("FINYR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINYR);
                this.columnAMTINWORDS = new global::System.Data.DataColumn("AMTINWORDS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTINWORDS);
                this.columnENTAT = new global::System.Data.DataColumn("ENTAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTAT);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnMOBILE = new global::System.Data.DataColumn("MOBILE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOBILE);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnGSTNO = new global::System.Data.DataColumn("GSTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSTNO);
                this.columnPROFITDOC.MaxLength = 1;
                this.columnAPPROVALSTATUS.MaxLength = 1;
                this.columnCANCEL.MaxLength = 1;
                this.columnDOCID.MaxLength = 10;
                this.columnPARTYNAME.MaxLength = 50;
                this.columnADTGMCONTROL.MaxLength = 1;
                this.columnEXCISEAPP.MaxLength = 1;
                this.columnNARR.MaxLength = 100;
                this.columnVTYPE.MaxLength = 1;
                this.columnUSERID.MaxLength = 40;
                this.columnETYPE.MaxLength = 3;
                this.columnRPCTRL.MaxLength = 1;
                this.columnBINYN.MaxLength = 3;
                this.columnVOUCHER.MaxLength = 10;
                this.columnTEMPDESC.MaxLength = 35;
                this.columnQCCHECK.MaxLength = 3;
                this.columnPARTYCAT.MaxLength = 30;
                this.columnLRNO.MaxLength = 20;
                this.columnTRNSPNAME.MaxLength = 50;
                this.columnEXINVNO.MaxLength = 10;
                this.columnPURCHTYPE.MaxLength = 30;
                this.columnMCATEGORY.MaxLength = 1;
                this.columnMDCTRL.MaxLength = 1;
                this.columnTRANSITLOCID.MaxLength = 25;
                this.columnDECLYN.MaxLength = 3;
                this.columnDESPTHRU.MaxLength = 50;
                this.columnPURCHASEYN.MaxLength = 3;
                this.columnENTBY.MaxLength = 10;
                this.columnTRUCKNO.MaxLength = 28;
                this.columnPARTYBILL.MaxLength = 80;
                this.columnFINYR.MaxLength = 3;
                this.columnAMTINWORDS.MaxLength = 150;
                this.columnENTAT.MaxLength = 25;
                this.columnIS_ACTIVE.MaxLength = 20;
                this.columnSTATUS.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DPBASICRow NewDPBASICRow() {
                return ((DPBASICRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DPBASICRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DPBASICRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DPBASICRowChanged != null)) {
                    this.DPBASICRowChanged(this, new DPBASICRowChangeEvent(((DPBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DPBASICRowChanging != null)) {
                    this.DPBASICRowChanging(this, new DPBASICRowChangeEvent(((DPBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DPBASICRowDeleted != null)) {
                    this.DPBASICRowDeleted(this, new DPBASICRowChangeEvent(((DPBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DPBASICRowDeleting != null)) {
                    this.DPBASICRowDeleting(this, new DPBASICRowChangeEvent(((DPBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveDPBASICRow(DPBASICRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DpBasic ds = new DpBasic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DPBASICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DPBASICRow : global::System.Data.DataRow {
            
            private DPBASICDataTable tableDPBASIC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal DPBASICRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDPBASIC = ((DPBASICDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PROFITDOC {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.PROFITDOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFITDOC\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PROFITDOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal APPROVAL {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.APPROVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPROVAL\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.APPROVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string APPROVALSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.APPROVALSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPROVALSTATUS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.APPROVALSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short MAXAPPROVED {
                get {
                    try {
                        return ((short)(this[this.tableDPBASIC.MAXAPPROVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXAPPROVED\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.MAXAPPROVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CANCEL {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.CANCELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCEL\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.CANCELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal T1SOURCEID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.T1SOURCEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'T1SOURCEID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.T1SOURCEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LATEMPLATEID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.LATEMPLATEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LATEMPLATEID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.LATEMPLATEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BRANCHID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.BRANCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANCHID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.BRANCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LOCID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.LOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.LOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ADSCHEME {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.ADSCHEMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADSCHEME\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ADSCHEMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DOCID {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.DOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DOCDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPBASIC.DOCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCDATE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DOCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime REFDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPBASIC.REFDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFDT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.REFDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PARTYID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.PARTYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PARTYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PARTYNAME {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.PARTYNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYNAME\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PARTYNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CRACC {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.CRACCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CRACC\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.CRACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ADTGMCONTROL {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.ADTGMCONTROLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADTGMCONTROL\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ADTGMCONTROLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long RNDOFF {
                get {
                    try {
                        return ((long)(this[this.tableDPBASIC.RNDOFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNDOFF\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.RNDOFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long LOCDETAILID {
                get {
                    try {
                        return ((long)(this[this.tableDPBASIC.LOCDETAILIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCDETAILID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.LOCDETAILIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EXCISEAPP {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.EXCISEAPPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCISEAPP\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.EXCISEAPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime APPDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPBASIC.APPDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPDATE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.APPDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GROSS {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.GROSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROSS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.GROSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NET {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.NETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NET\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.NETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NARR {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.NARRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NARR\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.NARRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int QCFLAG {
                get {
                    try {
                        return ((int)(this[this.tableDPBASIC.QCFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QCFLAG\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.QCFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.VTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VTYPE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.VTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TERMSTEMPLATE {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.TERMSTEMPLATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TERMSTEMPLATE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.TERMSTEMPLATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string USERID {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.USERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USERID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.USERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal DPBASICID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.DPBASICIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPBASICID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DPBASICIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXCHANGERATE {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.EXCHANGERATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCHANGERATE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.EXCHANGERATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MAINCURRENCY {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.MAINCURRENCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAINCURRENCY\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.MAINCURRENCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ETYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.ETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETYPE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RPCTRL {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.RPCTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPCTRL\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.RPCTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short DUEDAYS {
                get {
                    try {
                        return ((short)(this[this.tableDPBASIC.DUEDAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEDAYS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DUEDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPBASIC.DUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEDATE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.MIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.MIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double DELCH {
                get {
                    try {
                        return ((double)(this[this.tableDPBASIC.DELCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DELCH\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DELCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BINYN {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.BINYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BINYN\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.BINYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VOUCHER {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.VOUCHERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VOUCHER\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.VOUCHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TEMPDESC {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.TEMPDESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEMPDESC\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.TEMPDESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TAXABLEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.TAXABLEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAXABLEAMOUNT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.TAXABLEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FREIGHT {
                get {
                    try {
                        return ((double)(this[this.tableDPBASIC.FREIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FREIGHT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.FREIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string QCCHECK {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.QCCHECKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QCCHECK\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.QCCHECKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PARTYCAT {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.PARTYCATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYCAT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PARTYCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LRNO {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.LRNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LRNO\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.LRNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LRDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPBASIC.LRDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LRDT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.LRDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LRCH {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.LRCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LRCH\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.LRCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRNSPNAME {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.TRNSPNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRNSPNAME\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.TRNSPNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EXINVNO {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.EXINVNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXINVNO\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.EXINVNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EXINVDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDPBASIC.EXINVDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXINVDT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.EXINVDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXINVBASICID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.EXINVBASICIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXINVBASICID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.EXINVBASICIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PURCHTYPE {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.PURCHTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURCHTYPE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PURCHTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int FPFLAG {
                get {
                    try {
                        return ((int)(this[this.tableDPBASIC.FPFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FPFLAG\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.FPFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CSTCH {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.CSTCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTCH\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.CSTCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long PURBLSTATUS {
                get {
                    try {
                        return ((long)(this[this.tableDPBASIC.PURBLSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURBLSTATUS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PURBLSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MCATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.MCATEGORYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MCATEGORY\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.MCATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal RPAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.RPAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPAMOUNT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.RPAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MDCTRL {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.MDCTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDCTRL\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.MDCTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRANSITLOCID {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.TRANSITLOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSITLOCID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.TRANSITLOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal DECLID {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.DECLIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DECLID\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DECLIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DECLYN {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.DECLYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DECLYN\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DECLYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DESPTHRU {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.DESPTHRUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESPTHRU\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.DESPTHRUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short EXSTATUS {
                get {
                    try {
                        return ((short)(this[this.tableDPBASIC.EXSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXSTATUS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.EXSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PURCHASEYN {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.PURCHASEYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PURCHASEYN\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PURCHASEYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ENTBY {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.ENTBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENTBY\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ENTBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CSTVATCH {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.CSTVATCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTVATCH\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.CSTVATCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRUCKNO {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.TRUCKNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRUCKNO\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.TRUCKNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double PKNFDCH {
                get {
                    try {
                        return ((double)(this[this.tableDPBASIC.PKNFDCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PKNFDCH\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PKNFDCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double SPLDISCF {
                get {
                    try {
                        return ((double)(this[this.tableDPBASIC.SPLDISCFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPLDISCF\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.SPLDISCFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ROUNDM {
                get {
                    try {
                        return ((double)(this[this.tableDPBASIC.ROUNDMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUNDM\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ROUNDMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float OTHERCH {
                get {
                    try {
                        return ((float)(this[this.tableDPBASIC.OTHERCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHERCH\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.OTHERCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PARTYBILL {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.PARTYBILLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYBILL\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.PARTYBILLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double OTHERDISC {
                get {
                    try {
                        return ((double)(this[this.tableDPBASIC.OTHERDISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHERDISC\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.OTHERDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal REFNO {
                get {
                    try {
                        return ((decimal)(this[this.tableDPBASIC.REFNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFNO\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.REFNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FINYR {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.FINYRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FINYR\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.FINYRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AMTINWORDS {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.AMTINWORDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMTINWORDS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.AMTINWORDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ENTAT {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.ENTATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ENTAT\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ENTATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IS_ACTIVE {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.IS_ACTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_ACTIVE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MOBILE {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.MOBILEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOBILE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.MOBILEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string STATE {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATE\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string GSTNO {
                get {
                    try {
                        return ((string)(this[this.tableDPBASIC.GSTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSTNO\' in table \'DPBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDPBASIC.GSTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPROFITDOCNull() {
                return this.IsNull(this.tableDPBASIC.PROFITDOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPROFITDOCNull() {
                this[this.tableDPBASIC.PROFITDOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAPPROVALNull() {
                return this.IsNull(this.tableDPBASIC.APPROVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAPPROVALNull() {
                this[this.tableDPBASIC.APPROVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAPPROVALSTATUSNull() {
                return this.IsNull(this.tableDPBASIC.APPROVALSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAPPROVALSTATUSNull() {
                this[this.tableDPBASIC.APPROVALSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMAXAPPROVEDNull() {
                return this.IsNull(this.tableDPBASIC.MAXAPPROVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMAXAPPROVEDNull() {
                this[this.tableDPBASIC.MAXAPPROVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCANCELNull() {
                return this.IsNull(this.tableDPBASIC.CANCELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCANCELNull() {
                this[this.tableDPBASIC.CANCELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsT1SOURCEIDNull() {
                return this.IsNull(this.tableDPBASIC.T1SOURCEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetT1SOURCEIDNull() {
                this[this.tableDPBASIC.T1SOURCEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLATEMPLATEIDNull() {
                return this.IsNull(this.tableDPBASIC.LATEMPLATEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLATEMPLATEIDNull() {
                this[this.tableDPBASIC.LATEMPLATEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBRANCHIDNull() {
                return this.IsNull(this.tableDPBASIC.BRANCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBRANCHIDNull() {
                this[this.tableDPBASIC.BRANCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLOCIDNull() {
                return this.IsNull(this.tableDPBASIC.LOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLOCIDNull() {
                this[this.tableDPBASIC.LOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADSCHEMENull() {
                return this.IsNull(this.tableDPBASIC.ADSCHEMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADSCHEMENull() {
                this[this.tableDPBASIC.ADSCHEMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDOCIDNull() {
                return this.IsNull(this.tableDPBASIC.DOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDOCIDNull() {
                this[this.tableDPBASIC.DOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDOCDATENull() {
                return this.IsNull(this.tableDPBASIC.DOCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDOCDATENull() {
                this[this.tableDPBASIC.DOCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREFDTNull() {
                return this.IsNull(this.tableDPBASIC.REFDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREFDTNull() {
                this[this.tableDPBASIC.REFDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYIDNull() {
                return this.IsNull(this.tableDPBASIC.PARTYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYIDNull() {
                this[this.tableDPBASIC.PARTYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYNAMENull() {
                return this.IsNull(this.tableDPBASIC.PARTYNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYNAMENull() {
                this[this.tableDPBASIC.PARTYNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCRACCNull() {
                return this.IsNull(this.tableDPBASIC.CRACCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCRACCNull() {
                this[this.tableDPBASIC.CRACCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADTGMCONTROLNull() {
                return this.IsNull(this.tableDPBASIC.ADTGMCONTROLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADTGMCONTROLNull() {
                this[this.tableDPBASIC.ADTGMCONTROLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRNDOFFNull() {
                return this.IsNull(this.tableDPBASIC.RNDOFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRNDOFFNull() {
                this[this.tableDPBASIC.RNDOFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLOCDETAILIDNull() {
                return this.IsNull(this.tableDPBASIC.LOCDETAILIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLOCDETAILIDNull() {
                this[this.tableDPBASIC.LOCDETAILIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXCISEAPPNull() {
                return this.IsNull(this.tableDPBASIC.EXCISEAPPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXCISEAPPNull() {
                this[this.tableDPBASIC.EXCISEAPPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAPPDATENull() {
                return this.IsNull(this.tableDPBASIC.APPDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAPPDATENull() {
                this[this.tableDPBASIC.APPDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGROSSNull() {
                return this.IsNull(this.tableDPBASIC.GROSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGROSSNull() {
                this[this.tableDPBASIC.GROSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNETNull() {
                return this.IsNull(this.tableDPBASIC.NETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNETNull() {
                this[this.tableDPBASIC.NETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNARRNull() {
                return this.IsNull(this.tableDPBASIC.NARRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNARRNull() {
                this[this.tableDPBASIC.NARRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsQCFLAGNull() {
                return this.IsNull(this.tableDPBASIC.QCFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetQCFLAGNull() {
                this[this.tableDPBASIC.QCFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVTYPENull() {
                return this.IsNull(this.tableDPBASIC.VTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVTYPENull() {
                this[this.tableDPBASIC.VTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTERMSTEMPLATENull() {
                return this.IsNull(this.tableDPBASIC.TERMSTEMPLATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTERMSTEMPLATENull() {
                this[this.tableDPBASIC.TERMSTEMPLATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUSERIDNull() {
                return this.IsNull(this.tableDPBASIC.USERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUSERIDNull() {
                this[this.tableDPBASIC.USERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDPBASICIDNull() {
                return this.IsNull(this.tableDPBASIC.DPBASICIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDPBASICIDNull() {
                this[this.tableDPBASIC.DPBASICIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXCHANGERATENull() {
                return this.IsNull(this.tableDPBASIC.EXCHANGERATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXCHANGERATENull() {
                this[this.tableDPBASIC.EXCHANGERATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMAINCURRENCYNull() {
                return this.IsNull(this.tableDPBASIC.MAINCURRENCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMAINCURRENCYNull() {
                this[this.tableDPBASIC.MAINCURRENCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsETYPENull() {
                return this.IsNull(this.tableDPBASIC.ETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetETYPENull() {
                this[this.tableDPBASIC.ETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRPCTRLNull() {
                return this.IsNull(this.tableDPBASIC.RPCTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRPCTRLNull() {
                this[this.tableDPBASIC.RPCTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDUEDAYSNull() {
                return this.IsNull(this.tableDPBASIC.DUEDAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDUEDAYSNull() {
                this[this.tableDPBASIC.DUEDAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDUEDATENull() {
                return this.IsNull(this.tableDPBASIC.DUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDUEDATENull() {
                this[this.tableDPBASIC.DUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMIDNull() {
                return this.IsNull(this.tableDPBASIC.MIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMIDNull() {
                this[this.tableDPBASIC.MIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDELCHNull() {
                return this.IsNull(this.tableDPBASIC.DELCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDELCHNull() {
                this[this.tableDPBASIC.DELCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBINYNNull() {
                return this.IsNull(this.tableDPBASIC.BINYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBINYNNull() {
                this[this.tableDPBASIC.BINYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVOUCHERNull() {
                return this.IsNull(this.tableDPBASIC.VOUCHERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVOUCHERNull() {
                this[this.tableDPBASIC.VOUCHERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTEMPDESCNull() {
                return this.IsNull(this.tableDPBASIC.TEMPDESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTEMPDESCNull() {
                this[this.tableDPBASIC.TEMPDESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTAXABLEAMOUNTNull() {
                return this.IsNull(this.tableDPBASIC.TAXABLEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTAXABLEAMOUNTNull() {
                this[this.tableDPBASIC.TAXABLEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFREIGHTNull() {
                return this.IsNull(this.tableDPBASIC.FREIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFREIGHTNull() {
                this[this.tableDPBASIC.FREIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsQCCHECKNull() {
                return this.IsNull(this.tableDPBASIC.QCCHECKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetQCCHECKNull() {
                this[this.tableDPBASIC.QCCHECKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYCATNull() {
                return this.IsNull(this.tableDPBASIC.PARTYCATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYCATNull() {
                this[this.tableDPBASIC.PARTYCATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLRNONull() {
                return this.IsNull(this.tableDPBASIC.LRNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLRNONull() {
                this[this.tableDPBASIC.LRNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLRDTNull() {
                return this.IsNull(this.tableDPBASIC.LRDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLRDTNull() {
                this[this.tableDPBASIC.LRDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLRCHNull() {
                return this.IsNull(this.tableDPBASIC.LRCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLRCHNull() {
                this[this.tableDPBASIC.LRCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRNSPNAMENull() {
                return this.IsNull(this.tableDPBASIC.TRNSPNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRNSPNAMENull() {
                this[this.tableDPBASIC.TRNSPNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXINVNONull() {
                return this.IsNull(this.tableDPBASIC.EXINVNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXINVNONull() {
                this[this.tableDPBASIC.EXINVNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXINVDTNull() {
                return this.IsNull(this.tableDPBASIC.EXINVDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXINVDTNull() {
                this[this.tableDPBASIC.EXINVDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXINVBASICIDNull() {
                return this.IsNull(this.tableDPBASIC.EXINVBASICIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXINVBASICIDNull() {
                this[this.tableDPBASIC.EXINVBASICIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPURCHTYPENull() {
                return this.IsNull(this.tableDPBASIC.PURCHTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPURCHTYPENull() {
                this[this.tableDPBASIC.PURCHTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFPFLAGNull() {
                return this.IsNull(this.tableDPBASIC.FPFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFPFLAGNull() {
                this[this.tableDPBASIC.FPFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCSTCHNull() {
                return this.IsNull(this.tableDPBASIC.CSTCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCSTCHNull() {
                this[this.tableDPBASIC.CSTCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPURBLSTATUSNull() {
                return this.IsNull(this.tableDPBASIC.PURBLSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPURBLSTATUSNull() {
                this[this.tableDPBASIC.PURBLSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMCATEGORYNull() {
                return this.IsNull(this.tableDPBASIC.MCATEGORYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMCATEGORYNull() {
                this[this.tableDPBASIC.MCATEGORYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRPAMOUNTNull() {
                return this.IsNull(this.tableDPBASIC.RPAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRPAMOUNTNull() {
                this[this.tableDPBASIC.RPAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMDCTRLNull() {
                return this.IsNull(this.tableDPBASIC.MDCTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMDCTRLNull() {
                this[this.tableDPBASIC.MDCTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSITLOCIDNull() {
                return this.IsNull(this.tableDPBASIC.TRANSITLOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSITLOCIDNull() {
                this[this.tableDPBASIC.TRANSITLOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDECLIDNull() {
                return this.IsNull(this.tableDPBASIC.DECLIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDECLIDNull() {
                this[this.tableDPBASIC.DECLIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDECLYNNull() {
                return this.IsNull(this.tableDPBASIC.DECLYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDECLYNNull() {
                this[this.tableDPBASIC.DECLYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDESPTHRUNull() {
                return this.IsNull(this.tableDPBASIC.DESPTHRUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDESPTHRUNull() {
                this[this.tableDPBASIC.DESPTHRUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXSTATUSNull() {
                return this.IsNull(this.tableDPBASIC.EXSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXSTATUSNull() {
                this[this.tableDPBASIC.EXSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPURCHASEYNNull() {
                return this.IsNull(this.tableDPBASIC.PURCHASEYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPURCHASEYNNull() {
                this[this.tableDPBASIC.PURCHASEYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsENTBYNull() {
                return this.IsNull(this.tableDPBASIC.ENTBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetENTBYNull() {
                this[this.tableDPBASIC.ENTBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCSTVATCHNull() {
                return this.IsNull(this.tableDPBASIC.CSTVATCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCSTVATCHNull() {
                this[this.tableDPBASIC.CSTVATCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRUCKNONull() {
                return this.IsNull(this.tableDPBASIC.TRUCKNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRUCKNONull() {
                this[this.tableDPBASIC.TRUCKNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPKNFDCHNull() {
                return this.IsNull(this.tableDPBASIC.PKNFDCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPKNFDCHNull() {
                this[this.tableDPBASIC.PKNFDCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPLDISCFNull() {
                return this.IsNull(this.tableDPBASIC.SPLDISCFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPLDISCFNull() {
                this[this.tableDPBASIC.SPLDISCFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsROUNDMNull() {
                return this.IsNull(this.tableDPBASIC.ROUNDMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetROUNDMNull() {
                this[this.tableDPBASIC.ROUNDMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOTHERCHNull() {
                return this.IsNull(this.tableDPBASIC.OTHERCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOTHERCHNull() {
                this[this.tableDPBASIC.OTHERCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYBILLNull() {
                return this.IsNull(this.tableDPBASIC.PARTYBILLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYBILLNull() {
                this[this.tableDPBASIC.PARTYBILLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOTHERDISCNull() {
                return this.IsNull(this.tableDPBASIC.OTHERDISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOTHERDISCNull() {
                this[this.tableDPBASIC.OTHERDISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREFNONull() {
                return this.IsNull(this.tableDPBASIC.REFNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREFNONull() {
                this[this.tableDPBASIC.REFNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFINYRNull() {
                return this.IsNull(this.tableDPBASIC.FINYRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFINYRNull() {
                this[this.tableDPBASIC.FINYRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMTINWORDSNull() {
                return this.IsNull(this.tableDPBASIC.AMTINWORDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMTINWORDSNull() {
                this[this.tableDPBASIC.AMTINWORDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsENTATNull() {
                return this.IsNull(this.tableDPBASIC.ENTATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetENTATNull() {
                this[this.tableDPBASIC.ENTATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIS_ACTIVENull() {
                return this.IsNull(this.tableDPBASIC.IS_ACTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIS_ACTIVENull() {
                this[this.tableDPBASIC.IS_ACTIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableDPBASIC.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSTATUSNull() {
                this[this.tableDPBASIC.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableDPBASIC.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADDRESSNull() {
                this[this.tableDPBASIC.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMOBILENull() {
                return this.IsNull(this.tableDPBASIC.MOBILEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMOBILENull() {
                this[this.tableDPBASIC.MOBILEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSTATENull() {
                return this.IsNull(this.tableDPBASIC.STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSTATENull() {
                this[this.tableDPBASIC.STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGSTNONull() {
                return this.IsNull(this.tableDPBASIC.GSTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGSTNONull() {
                this[this.tableDPBASIC.GSTNOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class DPBASICRowChangeEvent : global::System.EventArgs {
            
            private DPBASICRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DPBASICRowChangeEvent(DPBASICRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public DPBASICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Arasan.DpBasicTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DPBASICTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DPBASICTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DPBASIC";
            tableMapping.ColumnMappings.Add("PROFITDOC", "PROFITDOC");
            tableMapping.ColumnMappings.Add("APPROVAL", "APPROVAL");
            tableMapping.ColumnMappings.Add("APPROVALSTATUS", "APPROVALSTATUS");
            tableMapping.ColumnMappings.Add("MAXAPPROVED", "MAXAPPROVED");
            tableMapping.ColumnMappings.Add("CANCEL", "CANCEL");
            tableMapping.ColumnMappings.Add("T1SOURCEID", "T1SOURCEID");
            tableMapping.ColumnMappings.Add("LATEMPLATEID", "LATEMPLATEID");
            tableMapping.ColumnMappings.Add("BRANCHID", "BRANCHID");
            tableMapping.ColumnMappings.Add("LOCID", "LOCID");
            tableMapping.ColumnMappings.Add("ADSCHEME", "ADSCHEME");
            tableMapping.ColumnMappings.Add("DOCID", "DOCID");
            tableMapping.ColumnMappings.Add("DOCDATE", "DOCDATE");
            tableMapping.ColumnMappings.Add("REFDT", "REFDT");
            tableMapping.ColumnMappings.Add("PARTYID", "PARTYID");
            tableMapping.ColumnMappings.Add("PARTYNAME", "PARTYNAME");
            tableMapping.ColumnMappings.Add("CRACC", "CRACC");
            tableMapping.ColumnMappings.Add("ADTGMCONTROL", "ADTGMCONTROL");
            tableMapping.ColumnMappings.Add("RNDOFF", "RNDOFF");
            tableMapping.ColumnMappings.Add("LOCDETAILID", "LOCDETAILID");
            tableMapping.ColumnMappings.Add("EXCISEAPP", "EXCISEAPP");
            tableMapping.ColumnMappings.Add("APPDATE", "APPDATE");
            tableMapping.ColumnMappings.Add("GROSS", "GROSS");
            tableMapping.ColumnMappings.Add("NET", "NET");
            tableMapping.ColumnMappings.Add("NARR", "NARR");
            tableMapping.ColumnMappings.Add("QCFLAG", "QCFLAG");
            tableMapping.ColumnMappings.Add("VTYPE", "VTYPE");
            tableMapping.ColumnMappings.Add("TERMSTEMPLATE", "TERMSTEMPLATE");
            tableMapping.ColumnMappings.Add("USERID", "USERID");
            tableMapping.ColumnMappings.Add("DPBASICID", "DPBASICID");
            tableMapping.ColumnMappings.Add("EXCHANGERATE", "EXCHANGERATE");
            tableMapping.ColumnMappings.Add("MAINCURRENCY", "MAINCURRENCY");
            tableMapping.ColumnMappings.Add("ETYPE", "ETYPE");
            tableMapping.ColumnMappings.Add("RPCTRL", "RPCTRL");
            tableMapping.ColumnMappings.Add("DUEDAYS", "DUEDAYS");
            tableMapping.ColumnMappings.Add("DUEDATE", "DUEDATE");
            tableMapping.ColumnMappings.Add("MID", "MID");
            tableMapping.ColumnMappings.Add("DELCH", "DELCH");
            tableMapping.ColumnMappings.Add("BINYN", "BINYN");
            tableMapping.ColumnMappings.Add("VOUCHER", "VOUCHER");
            tableMapping.ColumnMappings.Add("TEMPDESC", "TEMPDESC");
            tableMapping.ColumnMappings.Add("TAXABLEAMOUNT", "TAXABLEAMOUNT");
            tableMapping.ColumnMappings.Add("FREIGHT", "FREIGHT");
            tableMapping.ColumnMappings.Add("QCCHECK", "QCCHECK");
            tableMapping.ColumnMappings.Add("PARTYCAT", "PARTYCAT");
            tableMapping.ColumnMappings.Add("LRNO", "LRNO");
            tableMapping.ColumnMappings.Add("LRDT", "LRDT");
            tableMapping.ColumnMappings.Add("LRCH", "LRCH");
            tableMapping.ColumnMappings.Add("TRNSPNAME", "TRNSPNAME");
            tableMapping.ColumnMappings.Add("EXINVNO", "EXINVNO");
            tableMapping.ColumnMappings.Add("EXINVDT", "EXINVDT");
            tableMapping.ColumnMappings.Add("EXINVBASICID", "EXINVBASICID");
            tableMapping.ColumnMappings.Add("PURCHTYPE", "PURCHTYPE");
            tableMapping.ColumnMappings.Add("FPFLAG", "FPFLAG");
            tableMapping.ColumnMappings.Add("CSTCH", "CSTCH");
            tableMapping.ColumnMappings.Add("PURBLSTATUS", "PURBLSTATUS");
            tableMapping.ColumnMappings.Add("MCATEGORY", "MCATEGORY");
            tableMapping.ColumnMappings.Add("RPAMOUNT", "RPAMOUNT");
            tableMapping.ColumnMappings.Add("MDCTRL", "MDCTRL");
            tableMapping.ColumnMappings.Add("TRANSITLOCID", "TRANSITLOCID");
            tableMapping.ColumnMappings.Add("DECLID", "DECLID");
            tableMapping.ColumnMappings.Add("DECLYN", "DECLYN");
            tableMapping.ColumnMappings.Add("DESPTHRU", "DESPTHRU");
            tableMapping.ColumnMappings.Add("EXSTATUS", "EXSTATUS");
            tableMapping.ColumnMappings.Add("PURCHASEYN", "PURCHASEYN");
            tableMapping.ColumnMappings.Add("ENTBY", "ENTBY");
            tableMapping.ColumnMappings.Add("CSTVATCH", "CSTVATCH");
            tableMapping.ColumnMappings.Add("TRUCKNO", "TRUCKNO");
            tableMapping.ColumnMappings.Add("PKNFDCH", "PKNFDCH");
            tableMapping.ColumnMappings.Add("SPLDISCF", "SPLDISCF");
            tableMapping.ColumnMappings.Add("ROUNDM", "ROUNDM");
            tableMapping.ColumnMappings.Add("OTHERCH", "OTHERCH");
            tableMapping.ColumnMappings.Add("PARTYBILL", "PARTYBILL");
            tableMapping.ColumnMappings.Add("OTHERDISC", "OTHERDISC");
            tableMapping.ColumnMappings.Add("REFNO", "REFNO");
            tableMapping.ColumnMappings.Add("FINYR", "FINYR");
            tableMapping.ColumnMappings.Add("AMTINWORDS", "AMTINWORDS");
            tableMapping.ColumnMappings.Add("ENTAT", "ENTAT");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("STATUS", "STATUS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"TAAIERP\".\"DPBASIC\" (\"PROFITDOC\", \"APPROVAL\", \"APPROVALSTATUS\", \"MAXA" +
                "PPROVED\", \"CANCEL\", \"T1SOURCEID\", \"LATEMPLATEID\", \"BRANCHID\", \"LOCID\", \"ADSCHEME" +
                "\", \"DOCID\", \"DOCDATE\", \"REFDT\", \"PARTYID\", \"PARTYNAME\", \"CRACC\", \"ADTGMCONTROL\"," +
                " \"RNDOFF\", \"LOCDETAILID\", \"EXCISEAPP\", \"APPDATE\", \"GROSS\", \"NET\", \"NARR\", \"QCFLA" +
                "G\", \"VTYPE\", \"TERMSTEMPLATE\", \"USERID\", \"DPBASICID\", \"EXCHANGERATE\", \"MAINCURREN" +
                "CY\", \"ETYPE\", \"RPCTRL\", \"DUEDAYS\", \"DUEDATE\", \"MID\", \"DELCH\", \"BINYN\", \"VOUCHER\"" +
                ", \"TEMPDESC\", \"TAXABLEAMOUNT\", \"FREIGHT\", \"QCCHECK\", \"PARTYCAT\", \"LRNO\", \"LRDT\"," +
                " \"LRCH\", \"TRNSPNAME\", \"EXINVNO\", \"EXINVDT\", \"EXINVBASICID\", \"PURCHTYPE\", \"FPFLAG" +
                "\", \"CSTCH\", \"PURBLSTATUS\", \"MCATEGORY\", \"RPAMOUNT\", \"MDCTRL\", \"TRANSITLOCID\", \"D" +
                "ECLID\", \"DECLYN\", \"DESPTHRU\", \"EXSTATUS\", \"PURCHASEYN\", \"ENTBY\", \"CSTVATCH\", \"TR" +
                "UCKNO\", \"PKNFDCH\", \"SPLDISCF\", \"ROUNDM\", \"OTHERCH\", \"PARTYBILL\", \"OTHERDISC\", \"R" +
                "EFNO\", \"FINYR\", \"AMTINWORDS\", \"ENTAT\", \"IS_ACTIVE\", \"STATUS\") VALUES (:PROFITDOC" +
                ", :APPROVAL, :APPROVALSTATUS, :MAXAPPROVED, :CANCEL, :T1SOURCEID, :LATEMPLATEID," +
                " :BRANCHID, :LOCID, :ADSCHEME, :DOCID, :DOCDATE, :REFDT, :PARTYID, :PARTYNAME, :" +
                "CRACC, :ADTGMCONTROL, :RNDOFF, :LOCDETAILID, :EXCISEAPP, :APPDATE, :GROSS, :NET," +
                " :NARR, :QCFLAG, :VTYPE, :TERMSTEMPLATE, :USERID, :DPBASICID, :EXCHANGERATE, :MA" +
                "INCURRENCY, :ETYPE, :RPCTRL, :DUEDAYS, :DUEDATE, :MID, :DELCH, :BINYN, :VOUCHER," +
                " :TEMPDESC, :TAXABLEAMOUNT, :FREIGHT, :QCCHECK, :PARTYCAT, :LRNO, :LRDT, :LRCH, " +
                ":TRNSPNAME, :EXINVNO, :EXINVDT, :EXINVBASICID, :PURCHTYPE, :FPFLAG, :CSTCH, :PUR" +
                "BLSTATUS, :MCATEGORY, :RPAMOUNT, :MDCTRL, :TRANSITLOCID, :DECLID, :DECLYN, :DESP" +
                "THRU, :EXSTATUS, :PURCHASEYN, :ENTBY, :CSTVATCH, :TRUCKNO, :PKNFDCH, :SPLDISCF, " +
                ":ROUNDM, :OTHERCH, :PARTYBILL, :OTHERDISC, :REFNO, :FINYR, :AMTINWORDS, :ENTAT, " +
                ":IS_ACTIVE, :STATUS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROFITDOC";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPROVAL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CANCEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "T1SOURCEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BRANCHID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADSCHEME";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRACC";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRACC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADTGMCONTROL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RNDOFF";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOCDETAILID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISEAPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEAPP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "APPDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GROSS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NET";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NARR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "NARR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "QCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QCFLAG";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "VTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TERMSTEMPLATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TERMSTEMPLATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "USERID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 40;
            param.IsNullable = true;
            param.SourceColumn = "USERID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DPBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DPBASICID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCHANGERATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCHANGERATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ETYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "ETYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RPCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "RPCTRL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DUEDAYS";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DUEDAYS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DELCH";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DELCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BINYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "VOUCHER";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "VOUCHER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TEMPDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "TEMPDESC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TAXABLEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TAXABLEAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FREIGHT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "QCCHECK";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "QCCHECK";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYCAT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "PARTYCAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LRNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LRNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LRDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LRDT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LRCH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LRCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRNSPNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TRNSPNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXINVNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PURCHTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "PURCHTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FPFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FPFLAG";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CSTCH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSTCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PURBLSTATUS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PURBLSTATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MCATEGORY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MCATEGORY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RPAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RPAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MDCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "MDCTRL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSITLOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DECLID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DECLID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DECLYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "DECLYN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DESPTHRU";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "DESPTHRU";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXSTATUS";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PURCHASEYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "PURCHASEYN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENTBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ENTBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CSTVATCH";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSTVATCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRUCKNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 28;
            param.IsNullable = true;
            param.SourceColumn = "TRUCKNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PKNFDCH";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PKNFDCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SPLDISCF";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPLDISCF";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ROUNDM";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROUNDM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OTHERCH";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHERCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYBILL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 80;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBILL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OTHERDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHERDISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFNO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FINYR";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "FINYR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMTINWORDS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTINWORDS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ENTAT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "ENTAT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IS_ACTIVE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "IS_ACTIVE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STATUS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "STATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = "DATA SOURCE=192.168.1.52:1521/orcl;TNS_ADMIN=C:\\Users\\rames\\Oracle\\network\\admin;" +
                "PERSIST SECURITY INFO=True;USER ID=TAAIERP";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PROFITDOC, APPROVAL, APPROVALSTATUS, MAXAPPROVED, CANCEL, T1SOURCEID, LATEMPLATEID, BRANCHID, LOCID, ADSCHEME, DOCID, DOCDATE, REFDT, PARTYID, PARTYNAME, CRACC, ADTGMCONTROL, RNDOFF, LOCDETAILID, EXCISEAPP, APPDATE, GROSS, NET, NARR, QCFLAG, VTYPE, TERMSTEMPLATE, USERID, DPBASICID, EXCHANGERATE, MAINCURRENCY, ETYPE, RPCTRL, DUEDAYS, DUEDATE, MID, DELCH, BINYN, VOUCHER, TEMPDESC, TAXABLEAMOUNT, FREIGHT, QCCHECK, PARTYCAT, LRNO, LRDT, LRCH, TRNSPNAME, EXINVNO, EXINVDT, EXINVBASICID, PURCHTYPE, FPFLAG, CSTCH, PURBLSTATUS, MCATEGORY, RPAMOUNT, MDCTRL, TRANSITLOCID, DECLID, DECLYN, DESPTHRU, EXSTATUS, PURCHASEYN, ENTBY, CSTVATCH, TRUCKNO, PKNFDCH, SPLDISCF, ROUNDM, OTHERCH, PARTYBILL, OTHERDISC, REFNO, FINYR, AMTINWORDS, ENTAT, IS_ACTIVE, STATUS FROM TAAIERP.DPBASIC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DpBasic.DPBASICDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DpBasic.DPBASICDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DpBasic.DPBASICDataTable dataTable = new DpBasic.DPBASICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DpBasic.DPBASICDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DpBasic dataSet) {
            return this.Adapter.Update(dataSet, "DPBASIC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string PROFITDOC, 
                    global::System.Nullable<decimal> APPROVAL, 
                    string APPROVALSTATUS, 
                    global::System.Nullable<short> MAXAPPROVED, 
                    string CANCEL, 
                    global::System.Nullable<decimal> T1SOURCEID, 
                    global::System.Nullable<decimal> LATEMPLATEID, 
                    global::System.Nullable<decimal> BRANCHID, 
                    global::System.Nullable<decimal> LOCID, 
                    global::System.Nullable<decimal> ADSCHEME, 
                    string DOCID, 
                    global::System.Nullable<global::System.DateTime> DOCDATE, 
                    global::System.Nullable<global::System.DateTime> REFDT, 
                    global::System.Nullable<decimal> PARTYID, 
                    string PARTYNAME, 
                    global::System.Nullable<decimal> CRACC, 
                    string ADTGMCONTROL, 
                    global::System.Nullable<long> RNDOFF, 
                    global::System.Nullable<long> LOCDETAILID, 
                    string EXCISEAPP, 
                    global::System.Nullable<global::System.DateTime> APPDATE, 
                    global::System.Nullable<decimal> GROSS, 
                    global::System.Nullable<decimal> NET, 
                    string NARR, 
                    global::System.Nullable<int> QCFLAG, 
                    string VTYPE, 
                    global::System.Nullable<decimal> TERMSTEMPLATE, 
                    string USERID, 
                    global::System.Nullable<decimal> DPBASICID, 
                    global::System.Nullable<decimal> EXCHANGERATE, 
                    global::System.Nullable<decimal> MAINCURRENCY, 
                    string ETYPE, 
                    string RPCTRL, 
                    global::System.Nullable<short> DUEDAYS, 
                    global::System.Nullable<global::System.DateTime> DUEDATE, 
                    global::System.Nullable<decimal> MID, 
                    global::System.Nullable<double> DELCH, 
                    string BINYN, 
                    string VOUCHER, 
                    string TEMPDESC, 
                    global::System.Nullable<decimal> TAXABLEAMOUNT, 
                    global::System.Nullable<double> FREIGHT, 
                    string QCCHECK, 
                    string PARTYCAT, 
                    string LRNO, 
                    global::System.Nullable<global::System.DateTime> LRDT, 
                    global::System.Nullable<decimal> LRCH, 
                    string TRNSPNAME, 
                    string EXINVNO, 
                    global::System.Nullable<global::System.DateTime> EXINVDT, 
                    global::System.Nullable<decimal> EXINVBASICID, 
                    string PURCHTYPE, 
                    global::System.Nullable<int> FPFLAG, 
                    global::System.Nullable<decimal> CSTCH, 
                    global::System.Nullable<long> PURBLSTATUS, 
                    string MCATEGORY, 
                    global::System.Nullable<decimal> RPAMOUNT, 
                    string MDCTRL, 
                    string TRANSITLOCID, 
                    global::System.Nullable<decimal> DECLID, 
                    string DECLYN, 
                    string DESPTHRU, 
                    global::System.Nullable<short> EXSTATUS, 
                    string PURCHASEYN, 
                    string ENTBY, 
                    global::System.Nullable<decimal> CSTVATCH, 
                    string TRUCKNO, 
                    global::System.Nullable<double> PKNFDCH, 
                    global::System.Nullable<double> SPLDISCF, 
                    global::System.Nullable<double> ROUNDM, 
                    global::System.Nullable<float> OTHERCH, 
                    string PARTYBILL, 
                    global::System.Nullable<double> OTHERDISC, 
                    global::System.Nullable<decimal> REFNO, 
                    string FINYR, 
                    string AMTINWORDS, 
                    string ENTAT, 
                    string IS_ACTIVE, 
                    string STATUS) {
            if ((PROFITDOC == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PROFITDOC));
            }
            if ((APPROVAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(APPROVAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((APPROVALSTATUS == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(APPROVALSTATUS));
            }
            if ((MAXAPPROVED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(MAXAPPROVED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((CANCEL == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CANCEL));
            }
            if ((T1SOURCEID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(T1SOURCEID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((LATEMPLATEID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(LATEMPLATEID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BRANCHID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(BRANCHID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LOCID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(LOCID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ADSCHEME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ADSCHEME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DOCID == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DOCID));
            }
            if ((DOCDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(DOCDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((REFDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(REFDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((PARTYID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(PARTYID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((PARTYNAME == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PARTYNAME));
            }
            if ((CRACC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(CRACC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ADTGMCONTROL == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ADTGMCONTROL));
            }
            if ((RNDOFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((long)(RNDOFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((LOCDETAILID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((long)(LOCDETAILID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((EXCISEAPP == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(EXCISEAPP));
            }
            if ((APPDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(APPDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((GROSS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(GROSS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(NET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NARR == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(NARR));
            }
            if ((QCFLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(QCFLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((VTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(VTYPE));
            }
            if ((TERMSTEMPLATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(TERMSTEMPLATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((USERID == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(USERID));
            }
            if ((DPBASICID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(DPBASICID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((EXCHANGERATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(EXCHANGERATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((MAINCURRENCY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(MAINCURRENCY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ETYPE == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(ETYPE));
            }
            if ((RPCTRL == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(RPCTRL));
            }
            if ((DUEDAYS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((short)(DUEDAYS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((DUEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(DUEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((MID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(MID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((DELCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(DELCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((BINYN == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(BINYN));
            }
            if ((VOUCHER == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(VOUCHER));
            }
            if ((TEMPDESC == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(TEMPDESC));
            }
            if ((TAXABLEAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(TAXABLEAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((FREIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(FREIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((QCCHECK == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(QCCHECK));
            }
            if ((PARTYCAT == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(PARTYCAT));
            }
            if ((LRNO == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(LRNO));
            }
            if ((LRDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(LRDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((LRCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(LRCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((TRNSPNAME == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(TRNSPNAME));
            }
            if ((EXINVNO == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(EXINVNO));
            }
            if ((EXINVDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(EXINVDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((EXINVBASICID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(EXINVBASICID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((PURCHTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(PURCHTYPE));
            }
            if ((FPFLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(FPFLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((CSTCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(CSTCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((PURBLSTATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((long)(PURBLSTATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((MCATEGORY == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(MCATEGORY));
            }
            if ((RPAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(RPAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((MDCTRL == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(MDCTRL));
            }
            if ((TRANSITLOCID == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(TRANSITLOCID));
            }
            if ((DECLID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(DECLID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((DECLYN == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(DECLYN));
            }
            if ((DESPTHRU == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(DESPTHRU));
            }
            if ((EXSTATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((short)(EXSTATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((PURCHASEYN == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(PURCHASEYN));
            }
            if ((ENTBY == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(ENTBY));
            }
            if ((CSTVATCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(CSTVATCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((TRUCKNO == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(TRUCKNO));
            }
            if ((PKNFDCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((double)(PKNFDCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((SPLDISCF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((double)(SPLDISCF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((ROUNDM.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((double)(ROUNDM.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((OTHERCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((float)(OTHERCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((PARTYBILL == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(PARTYBILL));
            }
            if ((OTHERDISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((double)(OTHERDISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((REFNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((decimal)(REFNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((FINYR == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(FINYR));
            }
            if ((AMTINWORDS == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(AMTINWORDS));
            }
            if ((ENTAT == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(ENTAT));
            }
            if ((IS_ACTIVE == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(IS_ACTIVE));
            }
            if ((STATUS == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(STATUS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DPBASICTableAdapter _dPBASICTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DPBASICTableAdapter DPBASICTableAdapter {
            get {
                return this._dPBASICTableAdapter;
            }
            set {
                this._dPBASICTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dPBASICTableAdapter != null) 
                            && (this._dPBASICTableAdapter.Connection != null))) {
                    return this._dPBASICTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dPBASICTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DpBasic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dPBASICTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DPBASIC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dPBASICTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DpBasic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dPBASICTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DPBASIC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dPBASICTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DpBasic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dPBASICTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DPBASIC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dPBASICTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DpBasic dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dPBASICTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dPBASICTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dPBASICTableAdapter != null)) {
                    revertConnections.Add(this._dPBASICTableAdapter, this._dPBASICTableAdapter.Connection);
                    this._dPBASICTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._dPBASICTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._dPBASICTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dPBASICTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dPBASICTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dPBASICTableAdapter != null)) {
                    this._dPBASICTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._dPBASICTableAdapter]));
                    this._dPBASICTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591