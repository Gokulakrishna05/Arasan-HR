//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Arasan {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExinvDetail")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExinvDetail : global::System.Data.DataSet {
        
        private EXINVDETAILDataTable tableEXINVDETAIL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ExinvDetail() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected ExinvDetail(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EXINVDETAIL"] != null)) {
                    base.Tables.Add(new EXINVDETAILDataTable(ds.Tables["EXINVDETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXINVDETAILDataTable EXINVDETAIL {
            get {
                return this.tableEXINVDETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ExinvDetail cln = ((ExinvDetail)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EXINVDETAIL"] != null)) {
                    base.Tables.Add(new EXINVDETAILDataTable(ds.Tables["EXINVDETAIL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEXINVDETAIL = ((EXINVDETAILDataTable)(base.Tables["EXINVDETAIL"]));
            if ((initTable == true)) {
                if ((this.tableEXINVDETAIL != null)) {
                    this.tableEXINVDETAIL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ExinvDetail";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExinvDetail.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEXINVDETAIL = new EXINVDETAILDataTable();
            base.Tables.Add(this.tableEXINVDETAIL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeEXINVDETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExinvDetail ds = new ExinvDetail();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void EXINVDETAILRowChangeEventHandler(object sender, EXINVDETAILRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXINVDETAILDataTable : global::System.Data.TypedTableBase<EXINVDETAILRow> {
            
            private global::System.Data.DataColumn columnEXINVDETAILID;
            
            private global::System.Data.DataColumn columnEXINVBASICID;
            
            private global::System.Data.DataColumn columnEXINVDETAILROW;
            
            private global::System.Data.DataColumn columnJOBNO;
            
            private global::System.Data.DataColumn columnITEMID;
            
            private global::System.Data.DataColumn columnMATSUPP;
            
            private global::System.Data.DataColumn columnUNIT;
            
            private global::System.Data.DataColumn columnORDQTY;
            
            private global::System.Data.DataColumn columnOLDEIQTY;
            
            private global::System.Data.DataColumn columnEXCISEQTY;
            
            private global::System.Data.DataColumn columnPRIUNIT;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnRATE;
            
            private global::System.Data.DataColumn columnAMOUNT;
            
            private global::System.Data.DataColumn columnBASERATE;
            
            private global::System.Data.DataColumn columnBASEAMOUNT;
            
            private global::System.Data.DataColumn columnCOSTRATE;
            
            private global::System.Data.DataColumn columnRETURNEDQTY;
            
            private global::System.Data.DataColumn columnJODETAILID;
            
            private global::System.Data.DataColumn columnEXCISETYPE;
            
            private global::System.Data.DataColumn columnTARIFFID;
            
            private global::System.Data.DataColumn columnBEDPER;
            
            private global::System.Data.DataColumn columnBEDAMT;
            
            private global::System.Data.DataColumn columnCESSPER;
            
            private global::System.Data.DataColumn columnCESSAMT;
            
            private global::System.Data.DataColumn columnSHECESSPER;
            
            private global::System.Data.DataColumn columnSHECESSAMT;
            
            private global::System.Data.DataColumn columnAEDPER;
            
            private global::System.Data.DataColumn columnAEDAMT;
            
            private global::System.Data.DataColumn columnSEDPER;
            
            private global::System.Data.DataColumn columnSEDAMT;
            
            private global::System.Data.DataColumn columnBCDPER;
            
            private global::System.Data.DataColumn columnBCDAMT;
            
            private global::System.Data.DataColumn columnTOTAMT;
            
            private global::System.Data.DataColumn columnTOTEXAMT;
            
            private global::System.Data.DataColumn columnSL;
            
            private global::System.Data.DataColumn columnLOTYN;
            
            private global::System.Data.DataColumn columnSERIALYN;
            
            private global::System.Data.DataColumn columnPENDQTY;
            
            private global::System.Data.DataColumn columnJOSCHEDULEID;
            
            private global::System.Data.DataColumn columnSUBQTY;
            
            private global::System.Data.DataColumn columnBINID;
            
            private global::System.Data.DataColumn columnCRATE;
            
            private global::System.Data.DataColumn columnCAMOUNT;
            
            private global::System.Data.DataColumn columnORDTYPE;
            
            private global::System.Data.DataColumn columnTOSUBGRID;
            
            private global::System.Data.DataColumn columnITEMSPEC;
            
            private global::System.Data.DataColumn columnACCESAMOUNT;
            
            private global::System.Data.DataColumn columnFREIGHT;
            
            private global::System.Data.DataColumn columnQDISC;
            
            private global::System.Data.DataColumn columnIDISC;
            
            private global::System.Data.DataColumn columnCDISC;
            
            private global::System.Data.DataColumn columnTDISC;
            
            private global::System.Data.DataColumn columnADISC;
            
            private global::System.Data.DataColumn columnSDISC;
            
            private global::System.Data.DataColumn columnFRECH;
            
            private global::System.Data.DataColumn columnDISCOUNT;
            
            private global::System.Data.DataColumn columnSRATE;
            
            private global::System.Data.DataColumn columnSPORL;
            
            private global::System.Data.DataColumn columnLLAMOUNT;
            
            private global::System.Data.DataColumn columnPORLAMOUNT;
            
            private global::System.Data.DataColumn columnSDNO;
            
            private global::System.Data.DataColumn columnASDQTY;
            
            private global::System.Data.DataColumn columnDRUMDESC;
            
            private global::System.Data.DataColumn columnITEMTYPE;
            
            private global::System.Data.DataColumn columnCOMMTYPE;
            
            private global::System.Data.DataColumn columnCOMMVALUE;
            
            private global::System.Data.DataColumn columnCOMMAMOUNT;
            
            private global::System.Data.DataColumn columnSCHDATE;
            
            private global::System.Data.DataColumn columnSUBDCTRL;
            
            private global::System.Data.DataColumn columnSGSTP;
            
            private global::System.Data.DataColumn columnCGSTP;
            
            private global::System.Data.DataColumn columnIGSTP;
            
            private global::System.Data.DataColumn columnSGST;
            
            private global::System.Data.DataColumn columnCGST;
            
            private global::System.Data.DataColumn columnIGST;
            
            private global::System.Data.DataColumn columnTCSCTRL;
            
            private global::System.Data.DataColumn columnUNITC;
            
            private global::System.Data.DataColumn columnHSN;
            
            private global::System.Data.DataColumn columnTCSAMT;
            
            private global::System.Data.DataColumn columnTCSAMTR;
            
            private global::System.Data.DataColumn columnSTKCTRL;
            
            private global::System.Data.DataColumn columnSPLRATE;
            
            private global::System.Data.DataColumn columnRCODE;
            
            private global::System.Data.DataColumn columnFRQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILDataTable() {
                this.TableName = "EXINVDETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EXINVDETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected EXINVDETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVDETAILIDColumn {
                get {
                    return this.columnEXINVDETAILID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVBASICIDColumn {
                get {
                    return this.columnEXINVBASICID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVDETAILROWColumn {
                get {
                    return this.columnEXINVDETAILROW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JOBNOColumn {
                get {
                    return this.columnJOBNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ITEMIDColumn {
                get {
                    return this.columnITEMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MATSUPPColumn {
                get {
                    return this.columnMATSUPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UNITColumn {
                get {
                    return this.columnUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ORDQTYColumn {
                get {
                    return this.columnORDQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OLDEIQTYColumn {
                get {
                    return this.columnOLDEIQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXCISEQTYColumn {
                get {
                    return this.columnEXCISEQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRIUNITColumn {
                get {
                    return this.columnPRIUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATEColumn {
                get {
                    return this.columnRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMOUNTColumn {
                get {
                    return this.columnAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BASERATEColumn {
                get {
                    return this.columnBASERATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BASEAMOUNTColumn {
                get {
                    return this.columnBASEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COSTRATEColumn {
                get {
                    return this.columnCOSTRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RETURNEDQTYColumn {
                get {
                    return this.columnRETURNEDQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JODETAILIDColumn {
                get {
                    return this.columnJODETAILID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXCISETYPEColumn {
                get {
                    return this.columnEXCISETYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TARIFFIDColumn {
                get {
                    return this.columnTARIFFID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BEDPERColumn {
                get {
                    return this.columnBEDPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BEDAMTColumn {
                get {
                    return this.columnBEDAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CESSPERColumn {
                get {
                    return this.columnCESSPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CESSAMTColumn {
                get {
                    return this.columnCESSAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SHECESSPERColumn {
                get {
                    return this.columnSHECESSPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SHECESSAMTColumn {
                get {
                    return this.columnSHECESSAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AEDPERColumn {
                get {
                    return this.columnAEDPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AEDAMTColumn {
                get {
                    return this.columnAEDAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SEDPERColumn {
                get {
                    return this.columnSEDPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SEDAMTColumn {
                get {
                    return this.columnSEDAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BCDPERColumn {
                get {
                    return this.columnBCDPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BCDAMTColumn {
                get {
                    return this.columnBCDAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TOTAMTColumn {
                get {
                    return this.columnTOTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TOTEXAMTColumn {
                get {
                    return this.columnTOTEXAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOTYNColumn {
                get {
                    return this.columnLOTYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SERIALYNColumn {
                get {
                    return this.columnSERIALYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PENDQTYColumn {
                get {
                    return this.columnPENDQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JOSCHEDULEIDColumn {
                get {
                    return this.columnJOSCHEDULEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SUBQTYColumn {
                get {
                    return this.columnSUBQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BINIDColumn {
                get {
                    return this.columnBINID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CRATEColumn {
                get {
                    return this.columnCRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CAMOUNTColumn {
                get {
                    return this.columnCAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ORDTYPEColumn {
                get {
                    return this.columnORDTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TOSUBGRIDColumn {
                get {
                    return this.columnTOSUBGRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ITEMSPECColumn {
                get {
                    return this.columnITEMSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ACCESAMOUNTColumn {
                get {
                    return this.columnACCESAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FREIGHTColumn {
                get {
                    return this.columnFREIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn QDISCColumn {
                get {
                    return this.columnQDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IDISCColumn {
                get {
                    return this.columnIDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CDISCColumn {
                get {
                    return this.columnCDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TDISCColumn {
                get {
                    return this.columnTDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADISCColumn {
                get {
                    return this.columnADISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SDISCColumn {
                get {
                    return this.columnSDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FRECHColumn {
                get {
                    return this.columnFRECH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DISCOUNTColumn {
                get {
                    return this.columnDISCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SRATEColumn {
                get {
                    return this.columnSRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPORLColumn {
                get {
                    return this.columnSPORL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LLAMOUNTColumn {
                get {
                    return this.columnLLAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PORLAMOUNTColumn {
                get {
                    return this.columnPORLAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SDNOColumn {
                get {
                    return this.columnSDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ASDQTYColumn {
                get {
                    return this.columnASDQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DRUMDESCColumn {
                get {
                    return this.columnDRUMDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ITEMTYPEColumn {
                get {
                    return this.columnITEMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMMTYPEColumn {
                get {
                    return this.columnCOMMTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMMVALUEColumn {
                get {
                    return this.columnCOMMVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMMAMOUNTColumn {
                get {
                    return this.columnCOMMAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SCHDATEColumn {
                get {
                    return this.columnSCHDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SUBDCTRLColumn {
                get {
                    return this.columnSUBDCTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SGSTPColumn {
                get {
                    return this.columnSGSTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CGSTPColumn {
                get {
                    return this.columnCGSTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IGSTPColumn {
                get {
                    return this.columnIGSTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SGSTColumn {
                get {
                    return this.columnSGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CGSTColumn {
                get {
                    return this.columnCGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IGSTColumn {
                get {
                    return this.columnIGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TCSCTRLColumn {
                get {
                    return this.columnTCSCTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UNITCColumn {
                get {
                    return this.columnUNITC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HSNColumn {
                get {
                    return this.columnHSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TCSAMTColumn {
                get {
                    return this.columnTCSAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TCSAMTRColumn {
                get {
                    return this.columnTCSAMTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn STKCTRLColumn {
                get {
                    return this.columnSTKCTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPLRATEColumn {
                get {
                    return this.columnSPLRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RCODEColumn {
                get {
                    return this.columnRCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FRQColumn {
                get {
                    return this.columnFRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILRow this[int index] {
                get {
                    return ((EXINVDETAILRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVDETAILRowChangeEventHandler EXINVDETAILRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVDETAILRowChangeEventHandler EXINVDETAILRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVDETAILRowChangeEventHandler EXINVDETAILRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVDETAILRowChangeEventHandler EXINVDETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddEXINVDETAILRow(EXINVDETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILRow AddEXINVDETAILRow(
                        decimal EXINVDETAILID, 
                        decimal EXINVBASICID, 
                        decimal EXINVDETAILROW, 
                        string JOBNO, 
                        decimal ITEMID, 
                        string MATSUPP, 
                        decimal UNIT, 
                        decimal ORDQTY, 
                        decimal OLDEIQTY, 
                        decimal EXCISEQTY, 
                        string PRIUNIT, 
                        decimal QTY, 
                        decimal RATE, 
                        decimal AMOUNT, 
                        decimal BASERATE, 
                        decimal BASEAMOUNT, 
                        decimal COSTRATE, 
                        decimal RETURNEDQTY, 
                        decimal JODETAILID, 
                        string EXCISETYPE, 
                        decimal TARIFFID, 
                        float BEDPER, 
                        decimal BEDAMT, 
                        float CESSPER, 
                        decimal CESSAMT, 
                        float SHECESSPER, 
                        decimal SHECESSAMT, 
                        float AEDPER, 
                        decimal AEDAMT, 
                        float SEDPER, 
                        decimal SEDAMT, 
                        float BCDPER, 
                        decimal BCDAMT, 
                        decimal TOTAMT, 
                        decimal TOTEXAMT, 
                        short SL, 
                        string LOTYN, 
                        string SERIALYN, 
                        decimal PENDQTY, 
                        decimal JOSCHEDULEID, 
                        decimal SUBQTY, 
                        decimal BINID, 
                        decimal CRATE, 
                        decimal CAMOUNT, 
                        string ORDTYPE, 
                        long TOSUBGRID, 
                        string ITEMSPEC, 
                        decimal ACCESAMOUNT, 
                        double FREIGHT, 
                        double QDISC, 
                        double IDISC, 
                        double CDISC, 
                        double TDISC, 
                        double ADISC, 
                        double SDISC, 
                        double FRECH, 
                        double DISCOUNT, 
                        decimal SRATE, 
                        decimal SPORL, 
                        decimal LLAMOUNT, 
                        decimal PORLAMOUNT, 
                        int SDNO, 
                        decimal ASDQTY, 
                        string DRUMDESC, 
                        string ITEMTYPE, 
                        string COMMTYPE, 
                        decimal COMMVALUE, 
                        decimal COMMAMOUNT, 
                        System.DateTime SCHDATE, 
                        string SUBDCTRL, 
                        float SGSTP, 
                        float CGSTP, 
                        float IGSTP, 
                        double SGST, 
                        double CGST, 
                        double IGST, 
                        double TCSCTRL, 
                        string UNITC, 
                        long HSN, 
                        double TCSAMT, 
                        double TCSAMTR, 
                        string STKCTRL, 
                        string SPLRATE, 
                        string RCODE, 
                        double FRQ) {
                EXINVDETAILRow rowEXINVDETAILRow = ((EXINVDETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EXINVDETAILID,
                        EXINVBASICID,
                        EXINVDETAILROW,
                        JOBNO,
                        ITEMID,
                        MATSUPP,
                        UNIT,
                        ORDQTY,
                        OLDEIQTY,
                        EXCISEQTY,
                        PRIUNIT,
                        QTY,
                        RATE,
                        AMOUNT,
                        BASERATE,
                        BASEAMOUNT,
                        COSTRATE,
                        RETURNEDQTY,
                        JODETAILID,
                        EXCISETYPE,
                        TARIFFID,
                        BEDPER,
                        BEDAMT,
                        CESSPER,
                        CESSAMT,
                        SHECESSPER,
                        SHECESSAMT,
                        AEDPER,
                        AEDAMT,
                        SEDPER,
                        SEDAMT,
                        BCDPER,
                        BCDAMT,
                        TOTAMT,
                        TOTEXAMT,
                        SL,
                        LOTYN,
                        SERIALYN,
                        PENDQTY,
                        JOSCHEDULEID,
                        SUBQTY,
                        BINID,
                        CRATE,
                        CAMOUNT,
                        ORDTYPE,
                        TOSUBGRID,
                        ITEMSPEC,
                        ACCESAMOUNT,
                        FREIGHT,
                        QDISC,
                        IDISC,
                        CDISC,
                        TDISC,
                        ADISC,
                        SDISC,
                        FRECH,
                        DISCOUNT,
                        SRATE,
                        SPORL,
                        LLAMOUNT,
                        PORLAMOUNT,
                        SDNO,
                        ASDQTY,
                        DRUMDESC,
                        ITEMTYPE,
                        COMMTYPE,
                        COMMVALUE,
                        COMMAMOUNT,
                        SCHDATE,
                        SUBDCTRL,
                        SGSTP,
                        CGSTP,
                        IGSTP,
                        SGST,
                        CGST,
                        IGST,
                        TCSCTRL,
                        UNITC,
                        HSN,
                        TCSAMT,
                        TCSAMTR,
                        STKCTRL,
                        SPLRATE,
                        RCODE,
                        FRQ};
                rowEXINVDETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXINVDETAILRow);
                return rowEXINVDETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILRow FindByEXINVDETAILID(decimal EXINVDETAILID) {
                return ((EXINVDETAILRow)(this.Rows.Find(new object[] {
                            EXINVDETAILID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EXINVDETAILDataTable cln = ((EXINVDETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXINVDETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnEXINVDETAILID = base.Columns["EXINVDETAILID"];
                this.columnEXINVBASICID = base.Columns["EXINVBASICID"];
                this.columnEXINVDETAILROW = base.Columns["EXINVDETAILROW"];
                this.columnJOBNO = base.Columns["JOBNO"];
                this.columnITEMID = base.Columns["ITEMID"];
                this.columnMATSUPP = base.Columns["MATSUPP"];
                this.columnUNIT = base.Columns["UNIT"];
                this.columnORDQTY = base.Columns["ORDQTY"];
                this.columnOLDEIQTY = base.Columns["OLDEIQTY"];
                this.columnEXCISEQTY = base.Columns["EXCISEQTY"];
                this.columnPRIUNIT = base.Columns["PRIUNIT"];
                this.columnQTY = base.Columns["QTY"];
                this.columnRATE = base.Columns["RATE"];
                this.columnAMOUNT = base.Columns["AMOUNT"];
                this.columnBASERATE = base.Columns["BASERATE"];
                this.columnBASEAMOUNT = base.Columns["BASEAMOUNT"];
                this.columnCOSTRATE = base.Columns["COSTRATE"];
                this.columnRETURNEDQTY = base.Columns["RETURNEDQTY"];
                this.columnJODETAILID = base.Columns["JODETAILID"];
                this.columnEXCISETYPE = base.Columns["EXCISETYPE"];
                this.columnTARIFFID = base.Columns["TARIFFID"];
                this.columnBEDPER = base.Columns["BEDPER"];
                this.columnBEDAMT = base.Columns["BEDAMT"];
                this.columnCESSPER = base.Columns["CESSPER"];
                this.columnCESSAMT = base.Columns["CESSAMT"];
                this.columnSHECESSPER = base.Columns["SHECESSPER"];
                this.columnSHECESSAMT = base.Columns["SHECESSAMT"];
                this.columnAEDPER = base.Columns["AEDPER"];
                this.columnAEDAMT = base.Columns["AEDAMT"];
                this.columnSEDPER = base.Columns["SEDPER"];
                this.columnSEDAMT = base.Columns["SEDAMT"];
                this.columnBCDPER = base.Columns["BCDPER"];
                this.columnBCDAMT = base.Columns["BCDAMT"];
                this.columnTOTAMT = base.Columns["TOTAMT"];
                this.columnTOTEXAMT = base.Columns["TOTEXAMT"];
                this.columnSL = base.Columns["SL"];
                this.columnLOTYN = base.Columns["LOTYN"];
                this.columnSERIALYN = base.Columns["SERIALYN"];
                this.columnPENDQTY = base.Columns["PENDQTY"];
                this.columnJOSCHEDULEID = base.Columns["JOSCHEDULEID"];
                this.columnSUBQTY = base.Columns["SUBQTY"];
                this.columnBINID = base.Columns["BINID"];
                this.columnCRATE = base.Columns["CRATE"];
                this.columnCAMOUNT = base.Columns["CAMOUNT"];
                this.columnORDTYPE = base.Columns["ORDTYPE"];
                this.columnTOSUBGRID = base.Columns["TOSUBGRID"];
                this.columnITEMSPEC = base.Columns["ITEMSPEC"];
                this.columnACCESAMOUNT = base.Columns["ACCESAMOUNT"];
                this.columnFREIGHT = base.Columns["FREIGHT"];
                this.columnQDISC = base.Columns["QDISC"];
                this.columnIDISC = base.Columns["IDISC"];
                this.columnCDISC = base.Columns["CDISC"];
                this.columnTDISC = base.Columns["TDISC"];
                this.columnADISC = base.Columns["ADISC"];
                this.columnSDISC = base.Columns["SDISC"];
                this.columnFRECH = base.Columns["FRECH"];
                this.columnDISCOUNT = base.Columns["DISCOUNT"];
                this.columnSRATE = base.Columns["SRATE"];
                this.columnSPORL = base.Columns["SPORL"];
                this.columnLLAMOUNT = base.Columns["LLAMOUNT"];
                this.columnPORLAMOUNT = base.Columns["PORLAMOUNT"];
                this.columnSDNO = base.Columns["SDNO"];
                this.columnASDQTY = base.Columns["ASDQTY"];
                this.columnDRUMDESC = base.Columns["DRUMDESC"];
                this.columnITEMTYPE = base.Columns["ITEMTYPE"];
                this.columnCOMMTYPE = base.Columns["COMMTYPE"];
                this.columnCOMMVALUE = base.Columns["COMMVALUE"];
                this.columnCOMMAMOUNT = base.Columns["COMMAMOUNT"];
                this.columnSCHDATE = base.Columns["SCHDATE"];
                this.columnSUBDCTRL = base.Columns["SUBDCTRL"];
                this.columnSGSTP = base.Columns["SGSTP"];
                this.columnCGSTP = base.Columns["CGSTP"];
                this.columnIGSTP = base.Columns["IGSTP"];
                this.columnSGST = base.Columns["SGST"];
                this.columnCGST = base.Columns["CGST"];
                this.columnIGST = base.Columns["IGST"];
                this.columnTCSCTRL = base.Columns["TCSCTRL"];
                this.columnUNITC = base.Columns["UNITC"];
                this.columnHSN = base.Columns["HSN"];
                this.columnTCSAMT = base.Columns["TCSAMT"];
                this.columnTCSAMTR = base.Columns["TCSAMTR"];
                this.columnSTKCTRL = base.Columns["STKCTRL"];
                this.columnSPLRATE = base.Columns["SPLRATE"];
                this.columnRCODE = base.Columns["RCODE"];
                this.columnFRQ = base.Columns["FRQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnEXINVDETAILID = new global::System.Data.DataColumn("EXINVDETAILID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVDETAILID);
                this.columnEXINVBASICID = new global::System.Data.DataColumn("EXINVBASICID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVBASICID);
                this.columnEXINVDETAILROW = new global::System.Data.DataColumn("EXINVDETAILROW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVDETAILROW);
                this.columnJOBNO = new global::System.Data.DataColumn("JOBNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBNO);
                this.columnITEMID = new global::System.Data.DataColumn("ITEMID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMID);
                this.columnMATSUPP = new global::System.Data.DataColumn("MATSUPP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMATSUPP);
                this.columnUNIT = new global::System.Data.DataColumn("UNIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT);
                this.columnORDQTY = new global::System.Data.DataColumn("ORDQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDQTY);
                this.columnOLDEIQTY = new global::System.Data.DataColumn("OLDEIQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDEIQTY);
                this.columnEXCISEQTY = new global::System.Data.DataColumn("EXCISEQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCISEQTY);
                this.columnPRIUNIT = new global::System.Data.DataColumn("PRIUNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIUNIT);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnRATE = new global::System.Data.DataColumn("RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE);
                this.columnAMOUNT = new global::System.Data.DataColumn("AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT);
                this.columnBASERATE = new global::System.Data.DataColumn("BASERATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASERATE);
                this.columnBASEAMOUNT = new global::System.Data.DataColumn("BASEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASEAMOUNT);
                this.columnCOSTRATE = new global::System.Data.DataColumn("COSTRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOSTRATE);
                this.columnRETURNEDQTY = new global::System.Data.DataColumn("RETURNEDQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURNEDQTY);
                this.columnJODETAILID = new global::System.Data.DataColumn("JODETAILID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJODETAILID);
                this.columnEXCISETYPE = new global::System.Data.DataColumn("EXCISETYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCISETYPE);
                this.columnTARIFFID = new global::System.Data.DataColumn("TARIFFID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARIFFID);
                this.columnBEDPER = new global::System.Data.DataColumn("BEDPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEDPER);
                this.columnBEDAMT = new global::System.Data.DataColumn("BEDAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEDAMT);
                this.columnCESSPER = new global::System.Data.DataColumn("CESSPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCESSPER);
                this.columnCESSAMT = new global::System.Data.DataColumn("CESSAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCESSAMT);
                this.columnSHECESSPER = new global::System.Data.DataColumn("SHECESSPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHECESSPER);
                this.columnSHECESSAMT = new global::System.Data.DataColumn("SHECESSAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHECESSAMT);
                this.columnAEDPER = new global::System.Data.DataColumn("AEDPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAEDPER);
                this.columnAEDAMT = new global::System.Data.DataColumn("AEDAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAEDAMT);
                this.columnSEDPER = new global::System.Data.DataColumn("SEDPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEDPER);
                this.columnSEDAMT = new global::System.Data.DataColumn("SEDAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEDAMT);
                this.columnBCDPER = new global::System.Data.DataColumn("BCDPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCDPER);
                this.columnBCDAMT = new global::System.Data.DataColumn("BCDAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCDAMT);
                this.columnTOTAMT = new global::System.Data.DataColumn("TOTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAMT);
                this.columnTOTEXAMT = new global::System.Data.DataColumn("TOTEXAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTEXAMT);
                this.columnSL = new global::System.Data.DataColumn("SL", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnLOTYN = new global::System.Data.DataColumn("LOTYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOTYN);
                this.columnSERIALYN = new global::System.Data.DataColumn("SERIALYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIALYN);
                this.columnPENDQTY = new global::System.Data.DataColumn("PENDQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPENDQTY);
                this.columnJOSCHEDULEID = new global::System.Data.DataColumn("JOSCHEDULEID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOSCHEDULEID);
                this.columnSUBQTY = new global::System.Data.DataColumn("SUBQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBQTY);
                this.columnBINID = new global::System.Data.DataColumn("BINID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBINID);
                this.columnCRATE = new global::System.Data.DataColumn("CRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRATE);
                this.columnCAMOUNT = new global::System.Data.DataColumn("CAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMOUNT);
                this.columnORDTYPE = new global::System.Data.DataColumn("ORDTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDTYPE);
                this.columnTOSUBGRID = new global::System.Data.DataColumn("TOSUBGRID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOSUBGRID);
                this.columnITEMSPEC = new global::System.Data.DataColumn("ITEMSPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMSPEC);
                this.columnACCESAMOUNT = new global::System.Data.DataColumn("ACCESAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCESAMOUNT);
                this.columnFREIGHT = new global::System.Data.DataColumn("FREIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFREIGHT);
                this.columnQDISC = new global::System.Data.DataColumn("QDISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQDISC);
                this.columnIDISC = new global::System.Data.DataColumn("IDISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDISC);
                this.columnCDISC = new global::System.Data.DataColumn("CDISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDISC);
                this.columnTDISC = new global::System.Data.DataColumn("TDISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDISC);
                this.columnADISC = new global::System.Data.DataColumn("ADISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADISC);
                this.columnSDISC = new global::System.Data.DataColumn("SDISC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSDISC);
                this.columnFRECH = new global::System.Data.DataColumn("FRECH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFRECH);
                this.columnDISCOUNT = new global::System.Data.DataColumn("DISCOUNT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCOUNT);
                this.columnSRATE = new global::System.Data.DataColumn("SRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRATE);
                this.columnSPORL = new global::System.Data.DataColumn("SPORL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPORL);
                this.columnLLAMOUNT = new global::System.Data.DataColumn("LLAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLAMOUNT);
                this.columnPORLAMOUNT = new global::System.Data.DataColumn("PORLAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORLAMOUNT);
                this.columnSDNO = new global::System.Data.DataColumn("SDNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSDNO);
                this.columnASDQTY = new global::System.Data.DataColumn("ASDQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASDQTY);
                this.columnDRUMDESC = new global::System.Data.DataColumn("DRUMDESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRUMDESC);
                this.columnITEMTYPE = new global::System.Data.DataColumn("ITEMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMTYPE);
                this.columnCOMMTYPE = new global::System.Data.DataColumn("COMMTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMTYPE);
                this.columnCOMMVALUE = new global::System.Data.DataColumn("COMMVALUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMVALUE);
                this.columnCOMMAMOUNT = new global::System.Data.DataColumn("COMMAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMAMOUNT);
                this.columnSCHDATE = new global::System.Data.DataColumn("SCHDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHDATE);
                this.columnSUBDCTRL = new global::System.Data.DataColumn("SUBDCTRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBDCTRL);
                this.columnSGSTP = new global::System.Data.DataColumn("SGSTP", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGSTP);
                this.columnCGSTP = new global::System.Data.DataColumn("CGSTP", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGSTP);
                this.columnIGSTP = new global::System.Data.DataColumn("IGSTP", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIGSTP);
                this.columnSGST = new global::System.Data.DataColumn("SGST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGST);
                this.columnCGST = new global::System.Data.DataColumn("CGST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGST);
                this.columnIGST = new global::System.Data.DataColumn("IGST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIGST);
                this.columnTCSCTRL = new global::System.Data.DataColumn("TCSCTRL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCSCTRL);
                this.columnUNITC = new global::System.Data.DataColumn("UNITC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNITC);
                this.columnHSN = new global::System.Data.DataColumn("HSN", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSN);
                this.columnTCSAMT = new global::System.Data.DataColumn("TCSAMT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCSAMT);
                this.columnTCSAMTR = new global::System.Data.DataColumn("TCSAMTR", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCSAMTR);
                this.columnSTKCTRL = new global::System.Data.DataColumn("STKCTRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTKCTRL);
                this.columnSPLRATE = new global::System.Data.DataColumn("SPLRATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPLRATE);
                this.columnRCODE = new global::System.Data.DataColumn("RCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCODE);
                this.columnFRQ = new global::System.Data.DataColumn("FRQ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFRQ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEXINVDETAILID}, true));
                this.columnEXINVDETAILID.AllowDBNull = false;
                this.columnEXINVDETAILID.Unique = true;
                this.columnJOBNO.MaxLength = 50;
                this.columnMATSUPP.MaxLength = 10;
                this.columnPRIUNIT.MaxLength = 10;
                this.columnEXCISETYPE.MaxLength = 10;
                this.columnLOTYN.MaxLength = 3;
                this.columnSERIALYN.MaxLength = 3;
                this.columnORDTYPE.MaxLength = 10;
                this.columnITEMSPEC.MaxLength = 100;
                this.columnDRUMDESC.MaxLength = 200;
                this.columnITEMTYPE.MaxLength = 50;
                this.columnCOMMTYPE.MaxLength = 20;
                this.columnSUBDCTRL.MaxLength = 1;
                this.columnUNITC.MaxLength = 5;
                this.columnSTKCTRL.MaxLength = 1;
                this.columnSPLRATE.MaxLength = 3;
                this.columnRCODE.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILRow NewEXINVDETAILRow() {
                return ((EXINVDETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXINVDETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EXINVDETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXINVDETAILRowChanged != null)) {
                    this.EXINVDETAILRowChanged(this, new EXINVDETAILRowChangeEvent(((EXINVDETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXINVDETAILRowChanging != null)) {
                    this.EXINVDETAILRowChanging(this, new EXINVDETAILRowChangeEvent(((EXINVDETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXINVDETAILRowDeleted != null)) {
                    this.EXINVDETAILRowDeleted(this, new EXINVDETAILRowChangeEvent(((EXINVDETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXINVDETAILRowDeleting != null)) {
                    this.EXINVDETAILRowDeleting(this, new EXINVDETAILRowChangeEvent(((EXINVDETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveEXINVDETAILRow(EXINVDETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExinvDetail ds = new ExinvDetail();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXINVDETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EXINVDETAILRow : global::System.Data.DataRow {
            
            private EXINVDETAILDataTable tableEXINVDETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EXINVDETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXINVDETAIL = ((EXINVDETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXINVDETAILID {
                get {
                    return ((decimal)(this[this.tableEXINVDETAIL.EXINVDETAILIDColumn]));
                }
                set {
                    this[this.tableEXINVDETAIL.EXINVDETAILIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXINVBASICID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.EXINVBASICIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXINVBASICID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.EXINVBASICIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXINVDETAILROW {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.EXINVDETAILROWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXINVDETAILROW\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.EXINVDETAILROWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string JOBNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.JOBNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOBNO\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.JOBNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ITEMID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.ITEMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ITEMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MATSUPP {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.MATSUPPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MATSUPP\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.MATSUPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal UNIT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.UNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ORDQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.ORDQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ORDQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OLDEIQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.OLDEIQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OLDEIQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.OLDEIQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXCISEQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.EXCISEQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCISEQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.EXCISEQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PRIUNIT {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.PRIUNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIUNIT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.PRIUNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal QTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal RATE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.RATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BASERATE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.BASERATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BASERATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BASERATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BASEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.BASEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BASEAMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BASEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COSTRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.COSTRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COSTRATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.COSTRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal RETURNEDQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.RETURNEDQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RETURNEDQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.RETURNEDQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JODETAILID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.JODETAILIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JODETAILID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.JODETAILIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EXCISETYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.EXCISETYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXCISETYPE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.EXCISETYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TARIFFID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.TARIFFIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TARIFFID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TARIFFIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float BEDPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.BEDPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEDPER\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BEDPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BEDAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.BEDAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEDAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BEDAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float CESSPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.CESSPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CESSPER\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CESSPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CESSAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.CESSAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CESSAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CESSAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float SHECESSPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.SHECESSPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHECESSPER\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SHECESSPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SHECESSAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.SHECESSAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHECESSAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SHECESSAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float AEDPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.AEDPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AEDPER\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.AEDPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AEDAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.AEDAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AEDAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.AEDAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float SEDPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.SEDPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEDPER\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SEDPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SEDAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.SEDAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEDAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SEDAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float BCDPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.BCDPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BCDPER\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BCDPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BCDAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.BCDAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BCDAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BCDAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TOTAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.TOTAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TOTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TOTEXAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.TOTEXAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTEXAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TOTEXAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short SL {
                get {
                    try {
                        return ((short)(this[this.tableEXINVDETAIL.SLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SL\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LOTYN {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.LOTYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOTYN\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.LOTYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SERIALYN {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.SERIALYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERIALYN\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SERIALYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PENDQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.PENDQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PENDQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.PENDQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JOSCHEDULEID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.JOSCHEDULEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JOSCHEDULEID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.JOSCHEDULEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SUBQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.SUBQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SUBQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BINID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.BINIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BINID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.BINIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.CRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CRATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.CAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ORDTYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.ORDTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDTYPE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ORDTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long TOSUBGRID {
                get {
                    try {
                        return ((long)(this[this.tableEXINVDETAIL.TOSUBGRIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOSUBGRID\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TOSUBGRIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ITEMSPEC {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.ITEMSPECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMSPEC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ITEMSPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ACCESAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.ACCESAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCESAMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ACCESAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FREIGHT {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.FREIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FREIGHT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.FREIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double QDISC {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.QDISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QDISC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.QDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double IDISC {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.IDISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDISC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.IDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CDISC {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.CDISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CDISC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TDISC {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.TDISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDISC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ADISC {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.ADISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADISC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ADISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double SDISC {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.SDISCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SDISC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FRECH {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.FRECHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FRECH\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.FRECHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double DISCOUNT {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.DISCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISCOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.DISCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.SRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SRATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SPORL {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.SPORLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPORL\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SPORLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LLAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.LLAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LLAMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.LLAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PORLAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.PORLAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PORLAMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.PORLAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SDNO {
                get {
                    try {
                        return ((int)(this[this.tableEXINVDETAIL.SDNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SDNO\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ASDQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.ASDQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASDQTY\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ASDQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DRUMDESC {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.DRUMDESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRUMDESC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.DRUMDESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ITEMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.ITEMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMTYPE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.ITEMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string COMMTYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.COMMTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMTYPE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.COMMTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COMMVALUE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.COMMVALUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMVALUE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.COMMVALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COMMAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVDETAIL.COMMAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMAMOUNT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.COMMAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SCHDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEXINVDETAIL.SCHDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHDATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SCHDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SUBDCTRL {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.SUBDCTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBDCTRL\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SUBDCTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float SGSTP {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.SGSTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SGSTP\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SGSTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float CGSTP {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.CGSTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGSTP\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CGSTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float IGSTP {
                get {
                    try {
                        return ((float)(this[this.tableEXINVDETAIL.IGSTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IGSTP\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.IGSTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double SGST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.SGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SGST\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CGST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.CGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGST\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.CGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double IGST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.IGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IGST\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.IGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TCSCTRL {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.TCSCTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCSCTRL\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TCSCTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UNITC {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.UNITCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNITC\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.UNITCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long HSN {
                get {
                    try {
                        return ((long)(this[this.tableEXINVDETAIL.HSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HSN\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.HSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TCSAMT {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.TCSAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCSAMT\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TCSAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TCSAMTR {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.TCSAMTRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCSAMTR\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.TCSAMTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string STKCTRL {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.STKCTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STKCTRL\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.STKCTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SPLRATE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.SPLRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPLRATE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.SPLRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RCODE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVDETAIL.RCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RCODE\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.RCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FRQ {
                get {
                    try {
                        return ((double)(this[this.tableEXINVDETAIL.FRQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FRQ\' in table \'EXINVDETAIL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVDETAIL.FRQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXINVBASICIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.EXINVBASICIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXINVBASICIDNull() {
                this[this.tableEXINVDETAIL.EXINVBASICIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXINVDETAILROWNull() {
                return this.IsNull(this.tableEXINVDETAIL.EXINVDETAILROWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXINVDETAILROWNull() {
                this[this.tableEXINVDETAIL.EXINVDETAILROWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJOBNONull() {
                return this.IsNull(this.tableEXINVDETAIL.JOBNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJOBNONull() {
                this[this.tableEXINVDETAIL.JOBNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsITEMIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.ITEMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetITEMIDNull() {
                this[this.tableEXINVDETAIL.ITEMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMATSUPPNull() {
                return this.IsNull(this.tableEXINVDETAIL.MATSUPPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMATSUPPNull() {
                this[this.tableEXINVDETAIL.MATSUPPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUNITNull() {
                return this.IsNull(this.tableEXINVDETAIL.UNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUNITNull() {
                this[this.tableEXINVDETAIL.UNITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsORDQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.ORDQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetORDQTYNull() {
                this[this.tableEXINVDETAIL.ORDQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOLDEIQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.OLDEIQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOLDEIQTYNull() {
                this[this.tableEXINVDETAIL.OLDEIQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXCISEQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.EXCISEQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXCISEQTYNull() {
                this[this.tableEXINVDETAIL.EXCISEQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPRIUNITNull() {
                return this.IsNull(this.tableEXINVDETAIL.PRIUNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPRIUNITNull() {
                this[this.tableEXINVDETAIL.PRIUNITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetQTYNull() {
                this[this.tableEXINVDETAIL.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRATENull() {
                return this.IsNull(this.tableEXINVDETAIL.RATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRATENull() {
                this[this.tableEXINVDETAIL.RATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMOUNTNull() {
                this[this.tableEXINVDETAIL.AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBASERATENull() {
                return this.IsNull(this.tableEXINVDETAIL.BASERATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBASERATENull() {
                this[this.tableEXINVDETAIL.BASERATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBASEAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.BASEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBASEAMOUNTNull() {
                this[this.tableEXINVDETAIL.BASEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOSTRATENull() {
                return this.IsNull(this.tableEXINVDETAIL.COSTRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOSTRATENull() {
                this[this.tableEXINVDETAIL.COSTRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRETURNEDQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.RETURNEDQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRETURNEDQTYNull() {
                this[this.tableEXINVDETAIL.RETURNEDQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJODETAILIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.JODETAILIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJODETAILIDNull() {
                this[this.tableEXINVDETAIL.JODETAILIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXCISETYPENull() {
                return this.IsNull(this.tableEXINVDETAIL.EXCISETYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXCISETYPENull() {
                this[this.tableEXINVDETAIL.EXCISETYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTARIFFIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.TARIFFIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTARIFFIDNull() {
                this[this.tableEXINVDETAIL.TARIFFIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBEDPERNull() {
                return this.IsNull(this.tableEXINVDETAIL.BEDPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBEDPERNull() {
                this[this.tableEXINVDETAIL.BEDPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBEDAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.BEDAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBEDAMTNull() {
                this[this.tableEXINVDETAIL.BEDAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCESSPERNull() {
                return this.IsNull(this.tableEXINVDETAIL.CESSPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCESSPERNull() {
                this[this.tableEXINVDETAIL.CESSPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCESSAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.CESSAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCESSAMTNull() {
                this[this.tableEXINVDETAIL.CESSAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSHECESSPERNull() {
                return this.IsNull(this.tableEXINVDETAIL.SHECESSPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSHECESSPERNull() {
                this[this.tableEXINVDETAIL.SHECESSPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSHECESSAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.SHECESSAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSHECESSAMTNull() {
                this[this.tableEXINVDETAIL.SHECESSAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAEDPERNull() {
                return this.IsNull(this.tableEXINVDETAIL.AEDPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAEDPERNull() {
                this[this.tableEXINVDETAIL.AEDPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAEDAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.AEDAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAEDAMTNull() {
                this[this.tableEXINVDETAIL.AEDAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSEDPERNull() {
                return this.IsNull(this.tableEXINVDETAIL.SEDPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSEDPERNull() {
                this[this.tableEXINVDETAIL.SEDPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSEDAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.SEDAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSEDAMTNull() {
                this[this.tableEXINVDETAIL.SEDAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBCDPERNull() {
                return this.IsNull(this.tableEXINVDETAIL.BCDPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBCDPERNull() {
                this[this.tableEXINVDETAIL.BCDPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBCDAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.BCDAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBCDAMTNull() {
                this[this.tableEXINVDETAIL.BCDAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTOTAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.TOTAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTOTAMTNull() {
                this[this.tableEXINVDETAIL.TOTAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTOTEXAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.TOTEXAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTOTEXAMTNull() {
                this[this.tableEXINVDETAIL.TOTEXAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSLNull() {
                return this.IsNull(this.tableEXINVDETAIL.SLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSLNull() {
                this[this.tableEXINVDETAIL.SLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLOTYNNull() {
                return this.IsNull(this.tableEXINVDETAIL.LOTYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLOTYNNull() {
                this[this.tableEXINVDETAIL.LOTYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSERIALYNNull() {
                return this.IsNull(this.tableEXINVDETAIL.SERIALYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSERIALYNNull() {
                this[this.tableEXINVDETAIL.SERIALYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPENDQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.PENDQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPENDQTYNull() {
                this[this.tableEXINVDETAIL.PENDQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJOSCHEDULEIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.JOSCHEDULEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJOSCHEDULEIDNull() {
                this[this.tableEXINVDETAIL.JOSCHEDULEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSUBQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.SUBQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSUBQTYNull() {
                this[this.tableEXINVDETAIL.SUBQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBINIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.BINIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBINIDNull() {
                this[this.tableEXINVDETAIL.BINIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCRATENull() {
                return this.IsNull(this.tableEXINVDETAIL.CRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCRATENull() {
                this[this.tableEXINVDETAIL.CRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.CAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCAMOUNTNull() {
                this[this.tableEXINVDETAIL.CAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsORDTYPENull() {
                return this.IsNull(this.tableEXINVDETAIL.ORDTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetORDTYPENull() {
                this[this.tableEXINVDETAIL.ORDTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTOSUBGRIDNull() {
                return this.IsNull(this.tableEXINVDETAIL.TOSUBGRIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTOSUBGRIDNull() {
                this[this.tableEXINVDETAIL.TOSUBGRIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsITEMSPECNull() {
                return this.IsNull(this.tableEXINVDETAIL.ITEMSPECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetITEMSPECNull() {
                this[this.tableEXINVDETAIL.ITEMSPECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsACCESAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.ACCESAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetACCESAMOUNTNull() {
                this[this.tableEXINVDETAIL.ACCESAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFREIGHTNull() {
                return this.IsNull(this.tableEXINVDETAIL.FREIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFREIGHTNull() {
                this[this.tableEXINVDETAIL.FREIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsQDISCNull() {
                return this.IsNull(this.tableEXINVDETAIL.QDISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetQDISCNull() {
                this[this.tableEXINVDETAIL.QDISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIDISCNull() {
                return this.IsNull(this.tableEXINVDETAIL.IDISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIDISCNull() {
                this[this.tableEXINVDETAIL.IDISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCDISCNull() {
                return this.IsNull(this.tableEXINVDETAIL.CDISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCDISCNull() {
                this[this.tableEXINVDETAIL.CDISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTDISCNull() {
                return this.IsNull(this.tableEXINVDETAIL.TDISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTDISCNull() {
                this[this.tableEXINVDETAIL.TDISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADISCNull() {
                return this.IsNull(this.tableEXINVDETAIL.ADISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADISCNull() {
                this[this.tableEXINVDETAIL.ADISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSDISCNull() {
                return this.IsNull(this.tableEXINVDETAIL.SDISCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSDISCNull() {
                this[this.tableEXINVDETAIL.SDISCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFRECHNull() {
                return this.IsNull(this.tableEXINVDETAIL.FRECHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFRECHNull() {
                this[this.tableEXINVDETAIL.FRECHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDISCOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.DISCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDISCOUNTNull() {
                this[this.tableEXINVDETAIL.DISCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSRATENull() {
                return this.IsNull(this.tableEXINVDETAIL.SRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSRATENull() {
                this[this.tableEXINVDETAIL.SRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPORLNull() {
                return this.IsNull(this.tableEXINVDETAIL.SPORLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPORLNull() {
                this[this.tableEXINVDETAIL.SPORLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLLAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.LLAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLLAMOUNTNull() {
                this[this.tableEXINVDETAIL.LLAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPORLAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.PORLAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPORLAMOUNTNull() {
                this[this.tableEXINVDETAIL.PORLAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSDNONull() {
                return this.IsNull(this.tableEXINVDETAIL.SDNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSDNONull() {
                this[this.tableEXINVDETAIL.SDNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsASDQTYNull() {
                return this.IsNull(this.tableEXINVDETAIL.ASDQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetASDQTYNull() {
                this[this.tableEXINVDETAIL.ASDQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDRUMDESCNull() {
                return this.IsNull(this.tableEXINVDETAIL.DRUMDESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDRUMDESCNull() {
                this[this.tableEXINVDETAIL.DRUMDESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsITEMTYPENull() {
                return this.IsNull(this.tableEXINVDETAIL.ITEMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetITEMTYPENull() {
                this[this.tableEXINVDETAIL.ITEMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOMMTYPENull() {
                return this.IsNull(this.tableEXINVDETAIL.COMMTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOMMTYPENull() {
                this[this.tableEXINVDETAIL.COMMTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOMMVALUENull() {
                return this.IsNull(this.tableEXINVDETAIL.COMMVALUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOMMVALUENull() {
                this[this.tableEXINVDETAIL.COMMVALUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOMMAMOUNTNull() {
                return this.IsNull(this.tableEXINVDETAIL.COMMAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOMMAMOUNTNull() {
                this[this.tableEXINVDETAIL.COMMAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSCHDATENull() {
                return this.IsNull(this.tableEXINVDETAIL.SCHDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSCHDATENull() {
                this[this.tableEXINVDETAIL.SCHDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSUBDCTRLNull() {
                return this.IsNull(this.tableEXINVDETAIL.SUBDCTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSUBDCTRLNull() {
                this[this.tableEXINVDETAIL.SUBDCTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSGSTPNull() {
                return this.IsNull(this.tableEXINVDETAIL.SGSTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSGSTPNull() {
                this[this.tableEXINVDETAIL.SGSTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCGSTPNull() {
                return this.IsNull(this.tableEXINVDETAIL.CGSTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCGSTPNull() {
                this[this.tableEXINVDETAIL.CGSTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIGSTPNull() {
                return this.IsNull(this.tableEXINVDETAIL.IGSTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIGSTPNull() {
                this[this.tableEXINVDETAIL.IGSTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSGSTNull() {
                return this.IsNull(this.tableEXINVDETAIL.SGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSGSTNull() {
                this[this.tableEXINVDETAIL.SGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCGSTNull() {
                return this.IsNull(this.tableEXINVDETAIL.CGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCGSTNull() {
                this[this.tableEXINVDETAIL.CGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIGSTNull() {
                return this.IsNull(this.tableEXINVDETAIL.IGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIGSTNull() {
                this[this.tableEXINVDETAIL.IGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTCSCTRLNull() {
                return this.IsNull(this.tableEXINVDETAIL.TCSCTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTCSCTRLNull() {
                this[this.tableEXINVDETAIL.TCSCTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUNITCNull() {
                return this.IsNull(this.tableEXINVDETAIL.UNITCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUNITCNull() {
                this[this.tableEXINVDETAIL.UNITCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHSNNull() {
                return this.IsNull(this.tableEXINVDETAIL.HSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHSNNull() {
                this[this.tableEXINVDETAIL.HSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTCSAMTNull() {
                return this.IsNull(this.tableEXINVDETAIL.TCSAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTCSAMTNull() {
                this[this.tableEXINVDETAIL.TCSAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTCSAMTRNull() {
                return this.IsNull(this.tableEXINVDETAIL.TCSAMTRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTCSAMTRNull() {
                this[this.tableEXINVDETAIL.TCSAMTRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSTKCTRLNull() {
                return this.IsNull(this.tableEXINVDETAIL.STKCTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSTKCTRLNull() {
                this[this.tableEXINVDETAIL.STKCTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSPLRATENull() {
                return this.IsNull(this.tableEXINVDETAIL.SPLRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSPLRATENull() {
                this[this.tableEXINVDETAIL.SPLRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRCODENull() {
                return this.IsNull(this.tableEXINVDETAIL.RCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRCODENull() {
                this[this.tableEXINVDETAIL.RCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFRQNull() {
                return this.IsNull(this.tableEXINVDETAIL.FRQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFRQNull() {
                this[this.tableEXINVDETAIL.FRQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class EXINVDETAILRowChangeEvent : global::System.EventArgs {
            
            private EXINVDETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILRowChangeEvent(EXINVDETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVDETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Arasan.ExinvDetailTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXINVDETAILTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public EXINVDETAILTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXINVDETAIL";
            tableMapping.ColumnMappings.Add("EXINVDETAILID", "EXINVDETAILID");
            tableMapping.ColumnMappings.Add("EXINVBASICID", "EXINVBASICID");
            tableMapping.ColumnMappings.Add("EXINVDETAILROW", "EXINVDETAILROW");
            tableMapping.ColumnMappings.Add("JOBNO", "JOBNO");
            tableMapping.ColumnMappings.Add("ITEMID", "ITEMID");
            tableMapping.ColumnMappings.Add("MATSUPP", "MATSUPP");
            tableMapping.ColumnMappings.Add("UNIT", "UNIT");
            tableMapping.ColumnMappings.Add("ORDQTY", "ORDQTY");
            tableMapping.ColumnMappings.Add("OLDEIQTY", "OLDEIQTY");
            tableMapping.ColumnMappings.Add("EXCISEQTY", "EXCISEQTY");
            tableMapping.ColumnMappings.Add("PRIUNIT", "PRIUNIT");
            tableMapping.ColumnMappings.Add("QTY", "QTY");
            tableMapping.ColumnMappings.Add("RATE", "RATE");
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT");
            tableMapping.ColumnMappings.Add("BASERATE", "BASERATE");
            tableMapping.ColumnMappings.Add("BASEAMOUNT", "BASEAMOUNT");
            tableMapping.ColumnMappings.Add("COSTRATE", "COSTRATE");
            tableMapping.ColumnMappings.Add("RETURNEDQTY", "RETURNEDQTY");
            tableMapping.ColumnMappings.Add("JODETAILID", "JODETAILID");
            tableMapping.ColumnMappings.Add("EXCISETYPE", "EXCISETYPE");
            tableMapping.ColumnMappings.Add("TARIFFID", "TARIFFID");
            tableMapping.ColumnMappings.Add("BEDPER", "BEDPER");
            tableMapping.ColumnMappings.Add("BEDAMT", "BEDAMT");
            tableMapping.ColumnMappings.Add("CESSPER", "CESSPER");
            tableMapping.ColumnMappings.Add("CESSAMT", "CESSAMT");
            tableMapping.ColumnMappings.Add("SHECESSPER", "SHECESSPER");
            tableMapping.ColumnMappings.Add("SHECESSAMT", "SHECESSAMT");
            tableMapping.ColumnMappings.Add("AEDPER", "AEDPER");
            tableMapping.ColumnMappings.Add("AEDAMT", "AEDAMT");
            tableMapping.ColumnMappings.Add("SEDPER", "SEDPER");
            tableMapping.ColumnMappings.Add("SEDAMT", "SEDAMT");
            tableMapping.ColumnMappings.Add("BCDPER", "BCDPER");
            tableMapping.ColumnMappings.Add("BCDAMT", "BCDAMT");
            tableMapping.ColumnMappings.Add("TOTAMT", "TOTAMT");
            tableMapping.ColumnMappings.Add("TOTEXAMT", "TOTEXAMT");
            tableMapping.ColumnMappings.Add("SL", "SL");
            tableMapping.ColumnMappings.Add("LOTYN", "LOTYN");
            tableMapping.ColumnMappings.Add("SERIALYN", "SERIALYN");
            tableMapping.ColumnMappings.Add("PENDQTY", "PENDQTY");
            tableMapping.ColumnMappings.Add("JOSCHEDULEID", "JOSCHEDULEID");
            tableMapping.ColumnMappings.Add("SUBQTY", "SUBQTY");
            tableMapping.ColumnMappings.Add("BINID", "BINID");
            tableMapping.ColumnMappings.Add("CRATE", "CRATE");
            tableMapping.ColumnMappings.Add("CAMOUNT", "CAMOUNT");
            tableMapping.ColumnMappings.Add("ORDTYPE", "ORDTYPE");
            tableMapping.ColumnMappings.Add("TOSUBGRID", "TOSUBGRID");
            tableMapping.ColumnMappings.Add("ITEMSPEC", "ITEMSPEC");
            tableMapping.ColumnMappings.Add("ACCESAMOUNT", "ACCESAMOUNT");
            tableMapping.ColumnMappings.Add("FREIGHT", "FREIGHT");
            tableMapping.ColumnMappings.Add("QDISC", "QDISC");
            tableMapping.ColumnMappings.Add("IDISC", "IDISC");
            tableMapping.ColumnMappings.Add("CDISC", "CDISC");
            tableMapping.ColumnMappings.Add("TDISC", "TDISC");
            tableMapping.ColumnMappings.Add("ADISC", "ADISC");
            tableMapping.ColumnMappings.Add("SDISC", "SDISC");
            tableMapping.ColumnMappings.Add("FRECH", "FRECH");
            tableMapping.ColumnMappings.Add("DISCOUNT", "DISCOUNT");
            tableMapping.ColumnMappings.Add("SRATE", "SRATE");
            tableMapping.ColumnMappings.Add("SPORL", "SPORL");
            tableMapping.ColumnMappings.Add("LLAMOUNT", "LLAMOUNT");
            tableMapping.ColumnMappings.Add("PORLAMOUNT", "PORLAMOUNT");
            tableMapping.ColumnMappings.Add("SDNO", "SDNO");
            tableMapping.ColumnMappings.Add("ASDQTY", "ASDQTY");
            tableMapping.ColumnMappings.Add("DRUMDESC", "DRUMDESC");
            tableMapping.ColumnMappings.Add("ITEMTYPE", "ITEMTYPE");
            tableMapping.ColumnMappings.Add("COMMTYPE", "COMMTYPE");
            tableMapping.ColumnMappings.Add("COMMVALUE", "COMMVALUE");
            tableMapping.ColumnMappings.Add("COMMAMOUNT", "COMMAMOUNT");
            tableMapping.ColumnMappings.Add("SCHDATE", "SCHDATE");
            tableMapping.ColumnMappings.Add("SUBDCTRL", "SUBDCTRL");
            tableMapping.ColumnMappings.Add("SGSTP", "SGSTP");
            tableMapping.ColumnMappings.Add("CGSTP", "CGSTP");
            tableMapping.ColumnMappings.Add("IGSTP", "IGSTP");
            tableMapping.ColumnMappings.Add("SGST", "SGST");
            tableMapping.ColumnMappings.Add("CGST", "CGST");
            tableMapping.ColumnMappings.Add("IGST", "IGST");
            tableMapping.ColumnMappings.Add("TCSCTRL", "TCSCTRL");
            tableMapping.ColumnMappings.Add("UNITC", "UNITC");
            tableMapping.ColumnMappings.Add("HSN", "HSN");
            tableMapping.ColumnMappings.Add("TCSAMT", "TCSAMT");
            tableMapping.ColumnMappings.Add("TCSAMTR", "TCSAMTR");
            tableMapping.ColumnMappings.Add("STKCTRL", "STKCTRL");
            tableMapping.ColumnMappings.Add("SPLRATE", "SPLRATE");
            tableMapping.ColumnMappings.Add("RCODE", "RCODE");
            tableMapping.ColumnMappings.Add("FRQ", "FRQ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"TAAIERP\".\"EXINVDETAIL\" WHERE ((\"EXINVDETAILID\" = :Original_EXINVDETA" +
                "ILID) AND ((:IsNull_EXINVBASICID = 1 AND \"EXINVBASICID\" IS NULL) OR (\"EXINVBASIC" +
                "ID\" = :Original_EXINVBASICID)) AND ((:IsNull_EXINVDETAILROW = 1 AND \"EXINVDETAIL" +
                "ROW\" IS NULL) OR (\"EXINVDETAILROW\" = :Original_EXINVDETAILROW)) AND ((:IsNull_JO" +
                "BNO = 1 AND \"JOBNO\" IS NULL) OR (\"JOBNO\" = :Original_JOBNO)) AND ((:IsNull_ITEMI" +
                "D = 1 AND \"ITEMID\" IS NULL) OR (\"ITEMID\" = :Original_ITEMID)) AND ((:IsNull_MATS" +
                "UPP = 1 AND \"MATSUPP\" IS NULL) OR (\"MATSUPP\" = :Original_MATSUPP)) AND ((:IsNull" +
                "_UNIT = 1 AND \"UNIT\" IS NULL) OR (\"UNIT\" = :Original_UNIT)) AND ((:IsNull_ORDQTY" +
                " = 1 AND \"ORDQTY\" IS NULL) OR (\"ORDQTY\" = :Original_ORDQTY)) AND ((:IsNull_OLDEI" +
                "QTY = 1 AND \"OLDEIQTY\" IS NULL) OR (\"OLDEIQTY\" = :Original_OLDEIQTY)) AND ((:IsN" +
                "ull_EXCISEQTY = 1 AND \"EXCISEQTY\" IS NULL) OR (\"EXCISEQTY\" = :Original_EXCISEQTY" +
                ")) AND ((:IsNull_PRIUNIT = 1 AND \"PRIUNIT\" IS NULL) OR (\"PRIUNIT\" = :Original_PR" +
                "IUNIT)) AND ((:IsNull_QTY = 1 AND \"QTY\" IS NULL) OR (\"QTY\" = :Original_QTY)) AND" +
                " ((:IsNull_RATE = 1 AND \"RATE\" IS NULL) OR (\"RATE\" = :Original_RATE)) AND ((:IsN" +
                "ull_AMOUNT = 1 AND \"AMOUNT\" IS NULL) OR (\"AMOUNT\" = :Original_AMOUNT)) AND ((:Is" +
                "Null_BASERATE = 1 AND \"BASERATE\" IS NULL) OR (\"BASERATE\" = :Original_BASERATE)) " +
                "AND ((:IsNull_BASEAMOUNT = 1 AND \"BASEAMOUNT\" IS NULL) OR (\"BASEAMOUNT\" = :Origi" +
                "nal_BASEAMOUNT)) AND ((:IsNull_COSTRATE = 1 AND \"COSTRATE\" IS NULL) OR (\"COSTRAT" +
                "E\" = :Original_COSTRATE)) AND ((:IsNull_RETURNEDQTY = 1 AND \"RETURNEDQTY\" IS NUL" +
                "L) OR (\"RETURNEDQTY\" = :Original_RETURNEDQTY)) AND ((:IsNull_JODETAILID = 1 AND " +
                "\"JODETAILID\" IS NULL) OR (\"JODETAILID\" = :Original_JODETAILID)) AND ((:IsNull_EX" +
                "CISETYPE = 1 AND \"EXCISETYPE\" IS NULL) OR (\"EXCISETYPE\" = :Original_EXCISETYPE))" +
                " AND ((:IsNull_TARIFFID = 1 AND \"TARIFFID\" IS NULL) OR (\"TARIFFID\" = :Original_T" +
                "ARIFFID)) AND ((:IsNull_BEDPER = 1 AND \"BEDPER\" IS NULL) OR (\"BEDPER\" = :Origina" +
                "l_BEDPER)) AND ((:IsNull_BEDAMT = 1 AND \"BEDAMT\" IS NULL) OR (\"BEDAMT\" = :Origin" +
                "al_BEDAMT)) AND ((:IsNull_CESSPER = 1 AND \"CESSPER\" IS NULL) OR (\"CESSPER\" = :Or" +
                "iginal_CESSPER)) AND ((:IsNull_CESSAMT = 1 AND \"CESSAMT\" IS NULL) OR (\"CESSAMT\" " +
                "= :Original_CESSAMT)) AND ((:IsNull_SHECESSPER = 1 AND \"SHECESSPER\" IS NULL) OR " +
                "(\"SHECESSPER\" = :Original_SHECESSPER)) AND ((:IsNull_SHECESSAMT = 1 AND \"SHECESS" +
                "AMT\" IS NULL) OR (\"SHECESSAMT\" = :Original_SHECESSAMT)) AND ((:IsNull_AEDPER = 1" +
                " AND \"AEDPER\" IS NULL) OR (\"AEDPER\" = :Original_AEDPER)) AND ((:IsNull_AEDAMT = " +
                "1 AND \"AEDAMT\" IS NULL) OR (\"AEDAMT\" = :Original_AEDAMT)) AND ((:IsNull_SEDPER =" +
                " 1 AND \"SEDPER\" IS NULL) OR (\"SEDPER\" = :Original_SEDPER)) AND ((:IsNull_SEDAMT " +
                "= 1 AND \"SEDAMT\" IS NULL) OR (\"SEDAMT\" = :Original_SEDAMT)) AND ((:IsNull_BCDPER" +
                " = 1 AND \"BCDPER\" IS NULL) OR (\"BCDPER\" = :Original_BCDPER)) AND ((:IsNull_BCDAM" +
                "T = 1 AND \"BCDAMT\" IS NULL) OR (\"BCDAMT\" = :Original_BCDAMT)) AND ((:IsNull_TOTA" +
                "MT = 1 AND \"TOTAMT\" IS NULL) OR (\"TOTAMT\" = :Original_TOTAMT)) AND ((:IsNull_TOT" +
                "EXAMT = 1 AND \"TOTEXAMT\" IS NULL) OR (\"TOTEXAMT\" = :Original_TOTEXAMT)) AND ((:I" +
                "sNull_SL = 1 AND \"SL\" IS NULL) OR (\"SL\" = :Original_SL)) AND ((:IsNull_LOTYN = 1" +
                " AND \"LOTYN\" IS NULL) OR (\"LOTYN\" = :Original_LOTYN)) AND ((:IsNull_SERIALYN = 1" +
                " AND \"SERIALYN\" IS NULL) OR (\"SERIALYN\" = :Original_SERIALYN)) AND ((:IsNull_PEN" +
                "DQTY = 1 AND \"PENDQTY\" IS NULL) OR (\"PENDQTY\" = :Original_PENDQTY)) AND ((:IsNul" +
                "l_JOSCHEDULEID = 1 AND \"JOSCHEDULEID\" IS NULL) OR (\"JOSCHEDULEID\" = :Original_JO" +
                "SCHEDULEID)) AND ((:IsNull_SUBQTY = 1 AND \"SUBQTY\" IS NULL) OR (\"SUBQTY\" = :Orig" +
                "inal_SUBQTY)) AND ((:IsNull_BINID = 1 AND \"BINID\" IS NULL) OR (\"BINID\" = :Origin" +
                "al_BINID)) AND ((:IsNull_CRATE = 1 AND \"CRATE\" IS NULL) OR (\"CRATE\" = :Original_" +
                "CRATE)) AND ((:IsNull_CAMOUNT = 1 AND \"CAMOUNT\" IS NULL) OR (\"CAMOUNT\" = :Origin" +
                "al_CAMOUNT)) AND ((:IsNull_ORDTYPE = 1 AND \"ORDTYPE\" IS NULL) OR (\"ORDTYPE\" = :O" +
                "riginal_ORDTYPE)) AND ((:IsNull_TOSUBGRID = 1 AND \"TOSUBGRID\" IS NULL) OR (\"TOSU" +
                "BGRID\" = :Original_TOSUBGRID)) AND ((:IsNull_ITEMSPEC = 1 AND \"ITEMSPEC\" IS NULL" +
                ") OR (\"ITEMSPEC\" = :Original_ITEMSPEC)) AND ((:IsNull_ACCESAMOUNT = 1 AND \"ACCES" +
                "AMOUNT\" IS NULL) OR (\"ACCESAMOUNT\" = :Original_ACCESAMOUNT)) AND ((:IsNull_FREIG" +
                "HT = 1 AND \"FREIGHT\" IS NULL) OR (\"FREIGHT\" = :Original_FREIGHT)) AND ((:IsNull_" +
                "QDISC = 1 AND \"QDISC\" IS NULL) OR (\"QDISC\" = :Original_QDISC)) AND ((:IsNull_IDI" +
                "SC = 1 AND \"IDISC\" IS NULL) OR (\"IDISC\" = :Original_IDISC)) AND ((:IsNull_CDISC " +
                "= 1 AND \"CDISC\" IS NULL) OR (\"CDISC\" = :Original_CDISC)) AND ((:IsNull_TDISC = 1" +
                " AND \"TDISC\" IS NULL) OR (\"TDISC\" = :Original_TDISC)) AND ((:IsNull_ADISC = 1 AN" +
                "D \"ADISC\" IS NULL) OR (\"ADISC\" = :Original_ADISC)) AND ((:IsNull_SDISC = 1 AND \"" +
                "SDISC\" IS NULL) OR (\"SDISC\" = :Original_SDISC)) AND ((:IsNull_FRECH = 1 AND \"FRE" +
                "CH\" IS NULL) OR (\"FRECH\" = :Original_FRECH)) AND ((:IsNull_DISCOUNT = 1 AND \"DIS" +
                "COUNT\" IS NULL) OR (\"DISCOUNT\" = :Original_DISCOUNT)) AND ((:IsNull_SRATE = 1 AN" +
                "D \"SRATE\" IS NULL) OR (\"SRATE\" = :Original_SRATE)) AND ((:IsNull_SPORL = 1 AND \"" +
                "SPORL\" IS NULL) OR (\"SPORL\" = :Original_SPORL)) AND ((:IsNull_LLAMOUNT = 1 AND \"" +
                "LLAMOUNT\" IS NULL) OR (\"LLAMOUNT\" = :Original_LLAMOUNT)) AND ((:IsNull_PORLAMOUN" +
                "T = 1 AND \"PORLAMOUNT\" IS NULL) OR (\"PORLAMOUNT\" = :Original_PORLAMOUNT)) AND ((" +
                ":IsNull_SDNO = 1 AND \"SDNO\" IS NULL) OR (\"SDNO\" = :Original_SDNO)) AND ((:IsNull" +
                "_ASDQTY = 1 AND \"ASDQTY\" IS NULL) OR (\"ASDQTY\" = :Original_ASDQTY)) AND ((:IsNul" +
                "l_DRUMDESC = 1 AND \"DRUMDESC\" IS NULL) OR (\"DRUMDESC\" = :Original_DRUMDESC)) AND" +
                " ((:IsNull_ITEMTYPE = 1 AND \"ITEMTYPE\" IS NULL) OR (\"ITEMTYPE\" = :Original_ITEMT" +
                "YPE)) AND ((:IsNull_COMMTYPE = 1 AND \"COMMTYPE\" IS NULL) OR (\"COMMTYPE\" = :Origi" +
                "nal_COMMTYPE)) AND ((:IsNull_COMMVALUE = 1 AND \"COMMVALUE\" IS NULL) OR (\"COMMVAL" +
                "UE\" = :Original_COMMVALUE)) AND ((:IsNull_COMMAMOUNT = 1 AND \"COMMAMOUNT\" IS NUL" +
                "L) OR (\"COMMAMOUNT\" = :Original_COMMAMOUNT)) AND ((:IsNull_SCHDATE = 1 AND \"SCHD" +
                "ATE\" IS NULL) OR (\"SCHDATE\" = :Original_SCHDATE)) AND ((:IsNull_SUBDCTRL = 1 AND" +
                " \"SUBDCTRL\" IS NULL) OR (\"SUBDCTRL\" = :Original_SUBDCTRL)) AND ((:IsNull_SGSTP =" +
                " 1 AND \"SGSTP\" IS NULL) OR (\"SGSTP\" = :Original_SGSTP)) AND ((:IsNull_CGSTP = 1 " +
                "AND \"CGSTP\" IS NULL) OR (\"CGSTP\" = :Original_CGSTP)) AND ((:IsNull_IGSTP = 1 AND" +
                " \"IGSTP\" IS NULL) OR (\"IGSTP\" = :Original_IGSTP)) AND ((:IsNull_SGST = 1 AND \"SG" +
                "ST\" IS NULL) OR (\"SGST\" = :Original_SGST)) AND ((:IsNull_CGST = 1 AND \"CGST\" IS " +
                "NULL) OR (\"CGST\" = :Original_CGST)) AND ((:IsNull_IGST = 1 AND \"IGST\" IS NULL) O" +
                "R (\"IGST\" = :Original_IGST)) AND ((:IsNull_TCSCTRL = 1 AND \"TCSCTRL\" IS NULL) OR" +
                " (\"TCSCTRL\" = :Original_TCSCTRL)) AND ((:IsNull_UNITC = 1 AND \"UNITC\" IS NULL) O" +
                "R (\"UNITC\" = :Original_UNITC)) AND ((:IsNull_HSN = 1 AND \"HSN\" IS NULL) OR (\"HSN" +
                "\" = :Original_HSN)) AND ((:IsNull_TCSAMT = 1 AND \"TCSAMT\" IS NULL) OR (\"TCSAMT\" " +
                "= :Original_TCSAMT)) AND ((:IsNull_TCSAMTR = 1 AND \"TCSAMTR\" IS NULL) OR (\"TCSAM" +
                "TR\" = :Original_TCSAMTR)) AND ((:IsNull_STKCTRL = 1 AND \"STKCTRL\" IS NULL) OR (\"" +
                "STKCTRL\" = :Original_STKCTRL)) AND ((:IsNull_SPLRATE = 1 AND \"SPLRATE\" IS NULL) " +
                "OR (\"SPLRATE\" = :Original_SPLRATE)) AND ((:IsNull_RCODE = 1 AND \"RCODE\" IS NULL)" +
                " OR (\"RCODE\" = :Original_RCODE)) AND ((:IsNull_FRQ = 1 AND \"FRQ\" IS NULL) OR (\"F" +
                "RQ\" = :Original_FRQ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVDETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXINVBASICID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXINVDETAILROW";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILROW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVDETAILROW";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILROW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_JOBNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "JOBNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JOBNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "JOBNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ITEMID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ITEMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ITEMID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ITEMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MATSUPP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "MATSUPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MATSUPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "MATSUPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UNIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "UNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UNIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "UNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OLDEIQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OLDEIQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OLDEIQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OLDEIQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXCISEQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXCISEQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PRIUNIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PRIUNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PRIUNIT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PRIUNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_QTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_QTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BASERATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASERATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BASERATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASERATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BASEAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASEAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BASEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASEAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COSTRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COSTRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RETURNEDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RETURNEDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RETURNEDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RETURNEDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_JODETAILID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JODETAILID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JODETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JODETAILID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXCISETYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXCISETYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXCISETYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXCISETYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TARIFFID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TARIFFID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TARIFFID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TARIFFID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CESSPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CESSAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SHECESSPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SHECESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SHECESSAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SHECESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AEDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AEDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BCDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BCDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BCDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BCDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTEXAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTEXAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTEXAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTEXAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SL";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LOTYN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "LOTYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LOTYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "LOTYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SERIALYN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SERIALYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SERIALYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SERIALYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PENDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PENDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PENDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PENDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_JOSCHEDULEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JOSCHEDULEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JOSCHEDULEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JOSCHEDULEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BINID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BINID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BINID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BINID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOSUBGRID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOSUBGRID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOSUBGRID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOSUBGRID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ITEMSPEC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ITEMSPEC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ITEMSPEC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ITEMSPEC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FREIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FREIGHT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_QDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_QDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_IDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_IDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FRECH";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRECH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FRECH";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRECH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DISCOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DISCOUNT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SPORL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPORL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPORL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPORL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LLAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PORLAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PORLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PORLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PORLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SDNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SDNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ASDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ASDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DRUMDESC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DRUMDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DRUMDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DRUMDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ITEMTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ITEMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ITEMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ITEMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "COMMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "COMMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMVALUE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SCHDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "SCHDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SCHDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "SCHDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDCTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SUBDCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SUBDCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SGSTP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CGSTP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_IGSTP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_IGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_IGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_IGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCSCTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCSCTRL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UNITC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "UNITC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UNITC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "UNITC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_HSN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HSN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HSN";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HSN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCSAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCSAMT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCSAMTR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMTR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCSAMTR";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMTR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STKCTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "STKCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STKCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "STKCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SPLRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RCODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FRQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FRQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"TAAIERP\".\"EXINVDETAIL\" (\"EXINVDETAILID\", \"EXINVBASICID\", \"EXINVDETAI" +
                "LROW\", \"JOBNO\", \"ITEMID\", \"MATSUPP\", \"UNIT\", \"ORDQTY\", \"OLDEIQTY\", \"EXCISEQTY\", " +
                "\"PRIUNIT\", \"QTY\", \"RATE\", \"AMOUNT\", \"BASERATE\", \"BASEAMOUNT\", \"COSTRATE\", \"RETUR" +
                "NEDQTY\", \"JODETAILID\", \"EXCISETYPE\", \"TARIFFID\", \"BEDPER\", \"BEDAMT\", \"CESSPER\", " +
                "\"CESSAMT\", \"SHECESSPER\", \"SHECESSAMT\", \"AEDPER\", \"AEDAMT\", \"SEDPER\", \"SEDAMT\", \"" +
                "BCDPER\", \"BCDAMT\", \"TOTAMT\", \"TOTEXAMT\", \"SL\", \"LOTYN\", \"SERIALYN\", \"PENDQTY\", \"" +
                "JOSCHEDULEID\", \"SUBQTY\", \"BINID\", \"CRATE\", \"CAMOUNT\", \"ORDTYPE\", \"TOSUBGRID\", \"I" +
                "TEMSPEC\", \"ACCESAMOUNT\", \"FREIGHT\", \"QDISC\", \"IDISC\", \"CDISC\", \"TDISC\", \"ADISC\"," +
                " \"SDISC\", \"FRECH\", \"DISCOUNT\", \"SRATE\", \"SPORL\", \"LLAMOUNT\", \"PORLAMOUNT\", \"SDNO" +
                "\", \"ASDQTY\", \"DRUMDESC\", \"ITEMTYPE\", \"COMMTYPE\", \"COMMVALUE\", \"COMMAMOUNT\", \"SCH" +
                "DATE\", \"SUBDCTRL\", \"SGSTP\", \"CGSTP\", \"IGSTP\", \"SGST\", \"CGST\", \"IGST\", \"TCSCTRL\"," +
                " \"UNITC\", \"HSN\", \"TCSAMT\", \"TCSAMTR\", \"STKCTRL\", \"SPLRATE\", \"RCODE\", \"FRQ\") VALU" +
                "ES (:EXINVDETAILID, :EXINVBASICID, :EXINVDETAILROW, :JOBNO, :ITEMID, :MATSUPP, :" +
                "UNIT, :ORDQTY, :OLDEIQTY, :EXCISEQTY, :PRIUNIT, :QTY, :RATE, :AMOUNT, :BASERATE," +
                " :BASEAMOUNT, :COSTRATE, :RETURNEDQTY, :JODETAILID, :EXCISETYPE, :TARIFFID, :BED" +
                "PER, :BEDAMT, :CESSPER, :CESSAMT, :SHECESSPER, :SHECESSAMT, :AEDPER, :AEDAMT, :S" +
                "EDPER, :SEDAMT, :BCDPER, :BCDAMT, :TOTAMT, :TOTEXAMT, :SL, :LOTYN, :SERIALYN, :P" +
                "ENDQTY, :JOSCHEDULEID, :SUBQTY, :BINID, :CRATE, :CAMOUNT, :ORDTYPE, :TOSUBGRID, " +
                ":ITEMSPEC, :ACCESAMOUNT, :FREIGHT, :QDISC, :IDISC, :CDISC, :TDISC, :ADISC, :SDIS" +
                "C, :FRECH, :DISCOUNT, :SRATE, :SPORL, :LLAMOUNT, :PORLAMOUNT, :SDNO, :ASDQTY, :D" +
                "RUMDESC, :ITEMTYPE, :COMMTYPE, :COMMVALUE, :COMMAMOUNT, :SCHDATE, :SUBDCTRL, :SG" +
                "STP, :CGSTP, :IGSTP, :SGST, :CGST, :IGST, :TCSCTRL, :UNITC, :HSN, :TCSAMT, :TCSA" +
                "MTR, :STKCTRL, :SPLRATE, :RCODE, :FRQ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVDETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVDETAILROW";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILROW";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "JOBNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "JOBNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ITEMID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ITEMID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MATSUPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "MATSUPP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UNIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "UNIT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OLDEIQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OLDEIQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISEQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PRIUNIT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PRIUNIT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "QTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BASERATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASERATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BASEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASEAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COSTRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RETURNEDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RETURNEDQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "JODETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JODETAILID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISETYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXCISETYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TARIFFID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TARIFFID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SHECESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SHECESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BCDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BCDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTEXAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTEXAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SL";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOTYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "LOTYN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SERIALYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SERIALYN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PENDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PENDQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "JOSCHEDULEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JOSCHEDULEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BINID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BINID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ORDTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOSUBGRID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOSUBGRID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ITEMSPEC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ITEMSPEC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ACCESAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FREIGHT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "QDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QDISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IDISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CDISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDISC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FRECH";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRECH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DISCOUNT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SPORL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPORL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LLAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PORLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PORLAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SDNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ASDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASDQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DRUMDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DRUMDESC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ITEMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ITEMTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "COMMTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMVALUE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMVALUE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SCHDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "SCHDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SUBDCTRL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGSTP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGSTP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGSTP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCSCTRL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSCTRL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UNITC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "UNITC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HSN";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HSN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCSAMT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCSAMTR";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMTR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STKCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "STKCTRL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SPLRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RCODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FRQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"TAAIERP\".\"EXINVDETAIL\" SET \"EXINVDETAILID\" = :EXINVDETAILID, \"EXINVBASICI" +
                "D\" = :EXINVBASICID, \"EXINVDETAILROW\" = :EXINVDETAILROW, \"JOBNO\" = :JOBNO, \"ITEMI" +
                "D\" = :ITEMID, \"MATSUPP\" = :MATSUPP, \"UNIT\" = :UNIT, \"ORDQTY\" = :ORDQTY, \"OLDEIQT" +
                "Y\" = :OLDEIQTY, \"EXCISEQTY\" = :EXCISEQTY, \"PRIUNIT\" = :PRIUNIT, \"QTY\" = :QTY, \"R" +
                "ATE\" = :RATE, \"AMOUNT\" = :AMOUNT, \"BASERATE\" = :BASERATE, \"BASEAMOUNT\" = :BASEAM" +
                "OUNT, \"COSTRATE\" = :COSTRATE, \"RETURNEDQTY\" = :RETURNEDQTY, \"JODETAILID\" = :JODE" +
                "TAILID, \"EXCISETYPE\" = :EXCISETYPE, \"TARIFFID\" = :TARIFFID, \"BEDPER\" = :BEDPER, " +
                "\"BEDAMT\" = :BEDAMT, \"CESSPER\" = :CESSPER, \"CESSAMT\" = :CESSAMT, \"SHECESSPER\" = :" +
                "SHECESSPER, \"SHECESSAMT\" = :SHECESSAMT, \"AEDPER\" = :AEDPER, \"AEDAMT\" = :AEDAMT, " +
                "\"SEDPER\" = :SEDPER, \"SEDAMT\" = :SEDAMT, \"BCDPER\" = :BCDPER, \"BCDAMT\" = :BCDAMT, " +
                "\"TOTAMT\" = :TOTAMT, \"TOTEXAMT\" = :TOTEXAMT, \"SL\" = :SL, \"LOTYN\" = :LOTYN, \"SERIA" +
                "LYN\" = :SERIALYN, \"PENDQTY\" = :PENDQTY, \"JOSCHEDULEID\" = :JOSCHEDULEID, \"SUBQTY\"" +
                " = :SUBQTY, \"BINID\" = :BINID, \"CRATE\" = :CRATE, \"CAMOUNT\" = :CAMOUNT, \"ORDTYPE\" " +
                "= :ORDTYPE, \"TOSUBGRID\" = :TOSUBGRID, \"ITEMSPEC\" = :ITEMSPEC, \"ACCESAMOUNT\" = :A" +
                "CCESAMOUNT, \"FREIGHT\" = :FREIGHT, \"QDISC\" = :QDISC, \"IDISC\" = :IDISC, \"CDISC\" = " +
                ":CDISC, \"TDISC\" = :TDISC, \"ADISC\" = :ADISC, \"SDISC\" = :SDISC, \"FRECH\" = :FRECH, " +
                "\"DISCOUNT\" = :DISCOUNT, \"SRATE\" = :SRATE, \"SPORL\" = :SPORL, \"LLAMOUNT\" = :LLAMOU" +
                "NT, \"PORLAMOUNT\" = :PORLAMOUNT, \"SDNO\" = :SDNO, \"ASDQTY\" = :ASDQTY, \"DRUMDESC\" =" +
                " :DRUMDESC, \"ITEMTYPE\" = :ITEMTYPE, \"COMMTYPE\" = :COMMTYPE, \"COMMVALUE\" = :COMMV" +
                "ALUE, \"COMMAMOUNT\" = :COMMAMOUNT, \"SCHDATE\" = :SCHDATE, \"SUBDCTRL\" = :SUBDCTRL, " +
                "\"SGSTP\" = :SGSTP, \"CGSTP\" = :CGSTP, \"IGSTP\" = :IGSTP, \"SGST\" = :SGST, \"CGST\" = :" +
                "CGST, \"IGST\" = :IGST, \"TCSCTRL\" = :TCSCTRL, \"UNITC\" = :UNITC, \"HSN\" = :HSN, \"TCS" +
                "AMT\" = :TCSAMT, \"TCSAMTR\" = :TCSAMTR, \"STKCTRL\" = :STKCTRL, \"SPLRATE\" = :SPLRATE" +
                ", \"RCODE\" = :RCODE, \"FRQ\" = :FRQ WHERE ((\"EXINVDETAILID\" = :Original_EXINVDETAIL" +
                "ID) AND ((:IsNull_EXINVBASICID = 1 AND \"EXINVBASICID\" IS NULL) OR (\"EXINVBASICID" +
                "\" = :Original_EXINVBASICID)) AND ((:IsNull_EXINVDETAILROW = 1 AND \"EXINVDETAILRO" +
                "W\" IS NULL) OR (\"EXINVDETAILROW\" = :Original_EXINVDETAILROW)) AND ((:IsNull_JOBN" +
                "O = 1 AND \"JOBNO\" IS NULL) OR (\"JOBNO\" = :Original_JOBNO)) AND ((:IsNull_ITEMID " +
                "= 1 AND \"ITEMID\" IS NULL) OR (\"ITEMID\" = :Original_ITEMID)) AND ((:IsNull_MATSUP" +
                "P = 1 AND \"MATSUPP\" IS NULL) OR (\"MATSUPP\" = :Original_MATSUPP)) AND ((:IsNull_U" +
                "NIT = 1 AND \"UNIT\" IS NULL) OR (\"UNIT\" = :Original_UNIT)) AND ((:IsNull_ORDQTY =" +
                " 1 AND \"ORDQTY\" IS NULL) OR (\"ORDQTY\" = :Original_ORDQTY)) AND ((:IsNull_OLDEIQT" +
                "Y = 1 AND \"OLDEIQTY\" IS NULL) OR (\"OLDEIQTY\" = :Original_OLDEIQTY)) AND ((:IsNul" +
                "l_EXCISEQTY = 1 AND \"EXCISEQTY\" IS NULL) OR (\"EXCISEQTY\" = :Original_EXCISEQTY))" +
                " AND ((:IsNull_PRIUNIT = 1 AND \"PRIUNIT\" IS NULL) OR (\"PRIUNIT\" = :Original_PRIU" +
                "NIT)) AND ((:IsNull_QTY = 1 AND \"QTY\" IS NULL) OR (\"QTY\" = :Original_QTY)) AND (" +
                "(:IsNull_RATE = 1 AND \"RATE\" IS NULL) OR (\"RATE\" = :Original_RATE)) AND ((:IsNul" +
                "l_AMOUNT = 1 AND \"AMOUNT\" IS NULL) OR (\"AMOUNT\" = :Original_AMOUNT)) AND ((:IsNu" +
                "ll_BASERATE = 1 AND \"BASERATE\" IS NULL) OR (\"BASERATE\" = :Original_BASERATE)) AN" +
                "D ((:IsNull_BASEAMOUNT = 1 AND \"BASEAMOUNT\" IS NULL) OR (\"BASEAMOUNT\" = :Origina" +
                "l_BASEAMOUNT)) AND ((:IsNull_COSTRATE = 1 AND \"COSTRATE\" IS NULL) OR (\"COSTRATE\"" +
                " = :Original_COSTRATE)) AND ((:IsNull_RETURNEDQTY = 1 AND \"RETURNEDQTY\" IS NULL)" +
                " OR (\"RETURNEDQTY\" = :Original_RETURNEDQTY)) AND ((:IsNull_JODETAILID = 1 AND \"J" +
                "ODETAILID\" IS NULL) OR (\"JODETAILID\" = :Original_JODETAILID)) AND ((:IsNull_EXCI" +
                "SETYPE = 1 AND \"EXCISETYPE\" IS NULL) OR (\"EXCISETYPE\" = :Original_EXCISETYPE)) A" +
                "ND ((:IsNull_TARIFFID = 1 AND \"TARIFFID\" IS NULL) OR (\"TARIFFID\" = :Original_TAR" +
                "IFFID)) AND ((:IsNull_BEDPER = 1 AND \"BEDPER\" IS NULL) OR (\"BEDPER\" = :Original_" +
                "BEDPER)) AND ((:IsNull_BEDAMT = 1 AND \"BEDAMT\" IS NULL) OR (\"BEDAMT\" = :Original" +
                "_BEDAMT)) AND ((:IsNull_CESSPER = 1 AND \"CESSPER\" IS NULL) OR (\"CESSPER\" = :Orig" +
                "inal_CESSPER)) AND ((:IsNull_CESSAMT = 1 AND \"CESSAMT\" IS NULL) OR (\"CESSAMT\" = " +
                ":Original_CESSAMT)) AND ((:IsNull_SHECESSPER = 1 AND \"SHECESSPER\" IS NULL) OR (\"" +
                "SHECESSPER\" = :Original_SHECESSPER)) AND ((:IsNull_SHECESSAMT = 1 AND \"SHECESSAM" +
                "T\" IS NULL) OR (\"SHECESSAMT\" = :Original_SHECESSAMT)) AND ((:IsNull_AEDPER = 1 A" +
                "ND \"AEDPER\" IS NULL) OR (\"AEDPER\" = :Original_AEDPER)) AND ((:IsNull_AEDAMT = 1 " +
                "AND \"AEDAMT\" IS NULL) OR (\"AEDAMT\" = :Original_AEDAMT)) AND ((:IsNull_SEDPER = 1" +
                " AND \"SEDPER\" IS NULL) OR (\"SEDPER\" = :Original_SEDPER)) AND ((:IsNull_SEDAMT = " +
                "1 AND \"SEDAMT\" IS NULL) OR (\"SEDAMT\" = :Original_SEDAMT)) AND ((:IsNull_BCDPER =" +
                " 1 AND \"BCDPER\" IS NULL) OR (\"BCDPER\" = :Original_BCDPER)) AND ((:IsNull_BCDAMT " +
                "= 1 AND \"BCDAMT\" IS NULL) OR (\"BCDAMT\" = :Original_BCDAMT)) AND ((:IsNull_TOTAMT" +
                " = 1 AND \"TOTAMT\" IS NULL) OR (\"TOTAMT\" = :Original_TOTAMT)) AND ((:IsNull_TOTEX" +
                "AMT = 1 AND \"TOTEXAMT\" IS NULL) OR (\"TOTEXAMT\" = :Original_TOTEXAMT)) AND ((:IsN" +
                "ull_SL = 1 AND \"SL\" IS NULL) OR (\"SL\" = :Original_SL)) AND ((:IsNull_LOTYN = 1 A" +
                "ND \"LOTYN\" IS NULL) OR (\"LOTYN\" = :Original_LOTYN)) AND ((:IsNull_SERIALYN = 1 A" +
                "ND \"SERIALYN\" IS NULL) OR (\"SERIALYN\" = :Original_SERIALYN)) AND ((:IsNull_PENDQ" +
                "TY = 1 AND \"PENDQTY\" IS NULL) OR (\"PENDQTY\" = :Original_PENDQTY)) AND ((:IsNull_" +
                "JOSCHEDULEID = 1 AND \"JOSCHEDULEID\" IS NULL) OR (\"JOSCHEDULEID\" = :Original_JOSC" +
                "HEDULEID)) AND ((:IsNull_SUBQTY = 1 AND \"SUBQTY\" IS NULL) OR (\"SUBQTY\" = :Origin" +
                "al_SUBQTY)) AND ((:IsNull_BINID = 1 AND \"BINID\" IS NULL) OR (\"BINID\" = :Original" +
                "_BINID)) AND ((:IsNull_CRATE = 1 AND \"CRATE\" IS NULL) OR (\"CRATE\" = :Original_CR" +
                "ATE)) AND ((:IsNull_CAMOUNT = 1 AND \"CAMOUNT\" IS NULL) OR (\"CAMOUNT\" = :Original" +
                "_CAMOUNT)) AND ((:IsNull_ORDTYPE = 1 AND \"ORDTYPE\" IS NULL) OR (\"ORDTYPE\" = :Ori" +
                "ginal_ORDTYPE)) AND ((:IsNull_TOSUBGRID = 1 AND \"TOSUBGRID\" IS NULL) OR (\"TOSUBG" +
                "RID\" = :Original_TOSUBGRID)) AND ((:IsNull_ITEMSPEC = 1 AND \"ITEMSPEC\" IS NULL) " +
                "OR (\"ITEMSPEC\" = :Original_ITEMSPEC)) AND ((:IsNull_ACCESAMOUNT = 1 AND \"ACCESAM" +
                "OUNT\" IS NULL) OR (\"ACCESAMOUNT\" = :Original_ACCESAMOUNT)) AND ((:IsNull_FREIGHT" +
                " = 1 AND \"FREIGHT\" IS NULL) OR (\"FREIGHT\" = :Original_FREIGHT)) AND ((:IsNull_QD" +
                "ISC = 1 AND \"QDISC\" IS NULL) OR (\"QDISC\" = :Original_QDISC)) AND ((:IsNull_IDISC" +
                " = 1 AND \"IDISC\" IS NULL) OR (\"IDISC\" = :Original_IDISC)) AND ((:IsNull_CDISC = " +
                "1 AND \"CDISC\" IS NULL) OR (\"CDISC\" = :Original_CDISC)) AND ((:IsNull_TDISC = 1 A" +
                "ND \"TDISC\" IS NULL) OR (\"TDISC\" = :Original_TDISC)) AND ((:IsNull_ADISC = 1 AND " +
                "\"ADISC\" IS NULL) OR (\"ADISC\" = :Original_ADISC)) AND ((:IsNull_SDISC = 1 AND \"SD" +
                "ISC\" IS NULL) OR (\"SDISC\" = :Original_SDISC)) AND ((:IsNull_FRECH = 1 AND \"FRECH" +
                "\" IS NULL) OR (\"FRECH\" = :Original_FRECH)) AND ((:IsNull_DISCOUNT = 1 AND \"DISCO" +
                "UNT\" IS NULL) OR (\"DISCOUNT\" = :Original_DISCOUNT)) AND ((:IsNull_SRATE = 1 AND " +
                "\"SRATE\" IS NULL) OR (\"SRATE\" = :Original_SRATE)) AND ((:IsNull_SPORL = 1 AND \"SP" +
                "ORL\" IS NULL) OR (\"SPORL\" = :Original_SPORL)) AND ((:IsNull_LLAMOUNT = 1 AND \"LL" +
                "AMOUNT\" IS NULL) OR (\"LLAMOUNT\" = :Original_LLAMOUNT)) AND ((:IsNull_PORLAMOUNT " +
                "= 1 AND \"PORLAMOUNT\" IS NULL) OR (\"PORLAMOUNT\" = :Original_PORLAMOUNT)) AND ((:I" +
                "sNull_SDNO = 1 AND \"SDNO\" IS NULL) OR (\"SDNO\" = :Original_SDNO)) AND ((:IsNull_A" +
                "SDQTY = 1 AND \"ASDQTY\" IS NULL) OR (\"ASDQTY\" = :Original_ASDQTY)) AND ((:IsNull_" +
                "DRUMDESC = 1 AND \"DRUMDESC\" IS NULL) OR (\"DRUMDESC\" = :Original_DRUMDESC)) AND (" +
                "(:IsNull_ITEMTYPE = 1 AND \"ITEMTYPE\" IS NULL) OR (\"ITEMTYPE\" = :Original_ITEMTYP" +
                "E)) AND ((:IsNull_COMMTYPE = 1 AND \"COMMTYPE\" IS NULL) OR (\"COMMTYPE\" = :Origina" +
                "l_COMMTYPE)) AND ((:IsNull_COMMVALUE = 1 AND \"COMMVALUE\" IS NULL) OR (\"COMMVALUE" +
                "\" = :Original_COMMVALUE)) AND ((:IsNull_COMMAMOUNT = 1 AND \"COMMAMOUNT\" IS NULL)" +
                " OR (\"COMMAMOUNT\" = :Original_COMMAMOUNT)) AND ((:IsNull_SCHDATE = 1 AND \"SCHDAT" +
                "E\" IS NULL) OR (\"SCHDATE\" = :Original_SCHDATE)) AND ((:IsNull_SUBDCTRL = 1 AND \"" +
                "SUBDCTRL\" IS NULL) OR (\"SUBDCTRL\" = :Original_SUBDCTRL)) AND ((:IsNull_SGSTP = 1" +
                " AND \"SGSTP\" IS NULL) OR (\"SGSTP\" = :Original_SGSTP)) AND ((:IsNull_CGSTP = 1 AN" +
                "D \"CGSTP\" IS NULL) OR (\"CGSTP\" = :Original_CGSTP)) AND ((:IsNull_IGSTP = 1 AND \"" +
                "IGSTP\" IS NULL) OR (\"IGSTP\" = :Original_IGSTP)) AND ((:IsNull_SGST = 1 AND \"SGST" +
                "\" IS NULL) OR (\"SGST\" = :Original_SGST)) AND ((:IsNull_CGST = 1 AND \"CGST\" IS NU" +
                "LL) OR (\"CGST\" = :Original_CGST)) AND ((:IsNull_IGST = 1 AND \"IGST\" IS NULL) OR " +
                "(\"IGST\" = :Original_IGST)) AND ((:IsNull_TCSCTRL = 1 AND \"TCSCTRL\" IS NULL) OR (" +
                "\"TCSCTRL\" = :Original_TCSCTRL)) AND ((:IsNull_UNITC = 1 AND \"UNITC\" IS NULL) OR " +
                "(\"UNITC\" = :Original_UNITC)) AND ((:IsNull_HSN = 1 AND \"HSN\" IS NULL) OR (\"HSN\" " +
                "= :Original_HSN)) AND ((:IsNull_TCSAMT = 1 AND \"TCSAMT\" IS NULL) OR (\"TCSAMT\" = " +
                ":Original_TCSAMT)) AND ((:IsNull_TCSAMTR = 1 AND \"TCSAMTR\" IS NULL) OR (\"TCSAMTR" +
                "\" = :Original_TCSAMTR)) AND ((:IsNull_STKCTRL = 1 AND \"STKCTRL\" IS NULL) OR (\"ST" +
                "KCTRL\" = :Original_STKCTRL)) AND ((:IsNull_SPLRATE = 1 AND \"SPLRATE\" IS NULL) OR" +
                " (\"SPLRATE\" = :Original_SPLRATE)) AND ((:IsNull_RCODE = 1 AND \"RCODE\" IS NULL) O" +
                "R (\"RCODE\" = :Original_RCODE)) AND ((:IsNull_FRQ = 1 AND \"FRQ\" IS NULL) OR (\"FRQ" +
                "\" = :Original_FRQ)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVDETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVDETAILROW";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILROW";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "JOBNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "JOBNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ITEMID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ITEMID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MATSUPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "MATSUPP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UNIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "UNIT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OLDEIQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OLDEIQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISEQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PRIUNIT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PRIUNIT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "QTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BASERATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASERATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BASEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASEAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COSTRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RETURNEDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RETURNEDQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "JODETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JODETAILID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXCISETYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXCISETYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TARIFFID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TARIFFID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SHECESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SHECESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BCDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BCDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTEXAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTEXAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SL";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOTYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "LOTYN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SERIALYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SERIALYN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PENDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PENDQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "JOSCHEDULEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JOSCHEDULEID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BINID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BINID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ORDTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOSUBGRID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOSUBGRID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ITEMSPEC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ITEMSPEC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ACCESAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FREIGHT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "QDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QDISC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IDISC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CDISC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDISC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADISC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDISC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FRECH";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRECH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DISCOUNT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SPORL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPORL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LLAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PORLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PORLAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SDNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ASDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASDQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DRUMDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DRUMDESC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ITEMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ITEMTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "COMMTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMVALUE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMVALUE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SCHDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "SCHDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SUBDCTRL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGSTP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGSTP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGSTP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCSCTRL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSCTRL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "UNITC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "UNITC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "HSN";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HSN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCSAMT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCSAMTR";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMTR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STKCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "STKCTRL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SPLRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RCODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FRQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVDETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXINVBASICID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXINVDETAILROW";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILROW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVDETAILROW";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVDETAILROW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_JOBNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "JOBNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JOBNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "JOBNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ITEMID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ITEMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ITEMID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ITEMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MATSUPP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "MATSUPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MATSUPP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "MATSUPP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UNIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "UNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UNIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "UNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ORDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OLDEIQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OLDEIQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OLDEIQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OLDEIQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXCISEQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXCISEQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXCISEQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PRIUNIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PRIUNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PRIUNIT";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PRIUNIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_QTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_QTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BASERATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASERATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BASERATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASERATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BASEAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASEAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BASEAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BASEAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COSTRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COSTRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COSTRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RETURNEDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RETURNEDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RETURNEDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RETURNEDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_JODETAILID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JODETAILID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JODETAILID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JODETAILID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXCISETYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXCISETYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXCISETYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EXCISETYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TARIFFID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TARIFFID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TARIFFID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TARIFFID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CESSPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CESSAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SHECESSPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SHECESSPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SHECESSAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SHECESSAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SHECESSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AEDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AEDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "AEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SEDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BCDPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BCDPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BCDAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BCDAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCDAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTEXAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTEXAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTEXAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTEXAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SL";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LOTYN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "LOTYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LOTYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "LOTYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SERIALYN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SERIALYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SERIALYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SERIALYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PENDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PENDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PENDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PENDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_JOSCHEDULEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JOSCHEDULEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_JOSCHEDULEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "JOSCHEDULEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BINID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BINID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BINID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BINID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ORDTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "ORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOSUBGRID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOSUBGRID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOSUBGRID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOSUBGRID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ITEMSPEC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ITEMSPEC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ITEMSPEC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "ITEMSPEC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FREIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FREIGHT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_QDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_QDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "QDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_IDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_IDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SDISC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SDISC";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDISC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FRECH";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRECH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FRECH";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRECH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DISCOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DISCOUNT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SPORL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPORL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPORL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SPORL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LLAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PORLAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PORLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PORLAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PORLAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SDNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SDNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SDNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ASDQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ASDQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASDQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DRUMDESC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DRUMDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DRUMDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 200;
            param.IsNullable = true;
            param.SourceColumn = "DRUMDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ITEMTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ITEMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ITEMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "ITEMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "COMMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "COMMTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMVALUE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMVALUE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMVALUE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "COMMAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SCHDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "SCHDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SCHDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "SCHDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDCTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SUBDCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SUBDCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SGSTP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CGSTP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_IGSTP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_IGSTP";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGSTP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_IGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_IGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "IGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCSCTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCSCTRL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_UNITC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "UNITC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UNITC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 5;
            param.IsNullable = true;
            param.SourceColumn = "UNITC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_HSN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HSN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HSN";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HSN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCSAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCSAMT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCSAMTR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMTR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCSAMTR";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCSAMTR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STKCTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "STKCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STKCTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "STKCTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SPLRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "SPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RCODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FRQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FRQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FRQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = "DATA SOURCE=192.168.0.7:1521/orcl;TNS_ADMIN=C:\\Users\\rames\\Oracle\\network\\admin;P" +
                "ERSIST SECURITY INFO=True;USER ID=TAAIERP";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT EXINVDETAILID, EXINVBASICID, EXINVDETAILROW, JOBNO, ITEMID, MATSUPP, UNIT, ORDQTY, OLDEIQTY, EXCISEQTY, PRIUNIT, QTY, RATE, AMOUNT, BASERATE, BASEAMOUNT, COSTRATE, RETURNEDQTY, JODETAILID, EXCISETYPE, TARIFFID, BEDPER, BEDAMT, CESSPER, CESSAMT, SHECESSPER, SHECESSAMT, AEDPER, AEDAMT, SEDPER, SEDAMT, BCDPER, BCDAMT, TOTAMT, TOTEXAMT, SL, LOTYN, SERIALYN, PENDQTY, JOSCHEDULEID, SUBQTY, BINID, CRATE, CAMOUNT, ORDTYPE, TOSUBGRID, ITEMSPEC, ACCESAMOUNT, FREIGHT, QDISC, IDISC, CDISC, TDISC, ADISC, SDISC, FRECH, DISCOUNT, SRATE, SPORL, LLAMOUNT, PORLAMOUNT, SDNO, ASDQTY, DRUMDESC, ITEMTYPE, COMMTYPE, COMMVALUE, COMMAMOUNT, SCHDATE, SUBDCTRL, SGSTP, CGSTP, IGSTP, SGST, CGST, IGST, TCSCTRL, UNITC, HSN, TCSAMT, TCSAMTR, STKCTRL, SPLRATE, RCODE, FRQ FROM TAAIERP.EXINVDETAIL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ExinvDetail.EXINVDETAILDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ExinvDetail.EXINVDETAILDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ExinvDetail.EXINVDETAILDataTable dataTable = new ExinvDetail.EXINVDETAILDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ExinvDetail.EXINVDETAILDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ExinvDetail dataSet) {
            return this.Adapter.Update(dataSet, "EXINVDETAIL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_EXINVDETAILID, 
                    global::System.Nullable<decimal> Original_EXINVBASICID, 
                    global::System.Nullable<decimal> Original_EXINVDETAILROW, 
                    string Original_JOBNO, 
                    global::System.Nullable<decimal> Original_ITEMID, 
                    string Original_MATSUPP, 
                    global::System.Nullable<decimal> Original_UNIT, 
                    global::System.Nullable<decimal> Original_ORDQTY, 
                    global::System.Nullable<decimal> Original_OLDEIQTY, 
                    global::System.Nullable<decimal> Original_EXCISEQTY, 
                    string Original_PRIUNIT, 
                    global::System.Nullable<decimal> Original_QTY, 
                    global::System.Nullable<decimal> Original_RATE, 
                    global::System.Nullable<decimal> Original_AMOUNT, 
                    global::System.Nullable<decimal> Original_BASERATE, 
                    global::System.Nullable<decimal> Original_BASEAMOUNT, 
                    global::System.Nullable<decimal> Original_COSTRATE, 
                    global::System.Nullable<decimal> Original_RETURNEDQTY, 
                    global::System.Nullable<decimal> Original_JODETAILID, 
                    string Original_EXCISETYPE, 
                    global::System.Nullable<decimal> Original_TARIFFID, 
                    global::System.Nullable<float> Original_BEDPER, 
                    global::System.Nullable<decimal> Original_BEDAMT, 
                    global::System.Nullable<float> Original_CESSPER, 
                    global::System.Nullable<decimal> Original_CESSAMT, 
                    global::System.Nullable<float> Original_SHECESSPER, 
                    global::System.Nullable<decimal> Original_SHECESSAMT, 
                    global::System.Nullable<float> Original_AEDPER, 
                    global::System.Nullable<decimal> Original_AEDAMT, 
                    global::System.Nullable<float> Original_SEDPER, 
                    global::System.Nullable<decimal> Original_SEDAMT, 
                    global::System.Nullable<float> Original_BCDPER, 
                    global::System.Nullable<decimal> Original_BCDAMT, 
                    global::System.Nullable<decimal> Original_TOTAMT, 
                    global::System.Nullable<decimal> Original_TOTEXAMT, 
                    global::System.Nullable<short> Original_SL, 
                    string Original_LOTYN, 
                    string Original_SERIALYN, 
                    global::System.Nullable<decimal> Original_PENDQTY, 
                    global::System.Nullable<decimal> Original_JOSCHEDULEID, 
                    global::System.Nullable<decimal> Original_SUBQTY, 
                    global::System.Nullable<decimal> Original_BINID, 
                    global::System.Nullable<decimal> Original_CRATE, 
                    global::System.Nullable<decimal> Original_CAMOUNT, 
                    string Original_ORDTYPE, 
                    global::System.Nullable<long> Original_TOSUBGRID, 
                    string Original_ITEMSPEC, 
                    global::System.Nullable<decimal> Original_ACCESAMOUNT, 
                    global::System.Nullable<double> Original_FREIGHT, 
                    global::System.Nullable<double> Original_QDISC, 
                    global::System.Nullable<double> Original_IDISC, 
                    global::System.Nullable<double> Original_CDISC, 
                    global::System.Nullable<double> Original_TDISC, 
                    global::System.Nullable<double> Original_ADISC, 
                    global::System.Nullable<double> Original_SDISC, 
                    global::System.Nullable<double> Original_FRECH, 
                    global::System.Nullable<double> Original_DISCOUNT, 
                    global::System.Nullable<decimal> Original_SRATE, 
                    global::System.Nullable<decimal> Original_SPORL, 
                    global::System.Nullable<decimal> Original_LLAMOUNT, 
                    global::System.Nullable<decimal> Original_PORLAMOUNT, 
                    global::System.Nullable<int> Original_SDNO, 
                    global::System.Nullable<decimal> Original_ASDQTY, 
                    string Original_DRUMDESC, 
                    string Original_ITEMTYPE, 
                    string Original_COMMTYPE, 
                    global::System.Nullable<decimal> Original_COMMVALUE, 
                    global::System.Nullable<decimal> Original_COMMAMOUNT, 
                    global::System.Nullable<global::System.DateTime> Original_SCHDATE, 
                    string Original_SUBDCTRL, 
                    global::System.Nullable<float> Original_SGSTP, 
                    global::System.Nullable<float> Original_CGSTP, 
                    global::System.Nullable<float> Original_IGSTP, 
                    global::System.Nullable<double> Original_SGST, 
                    global::System.Nullable<double> Original_CGST, 
                    global::System.Nullable<double> Original_IGST, 
                    global::System.Nullable<double> Original_TCSCTRL, 
                    string Original_UNITC, 
                    global::System.Nullable<long> Original_HSN, 
                    global::System.Nullable<double> Original_TCSAMT, 
                    global::System.Nullable<double> Original_TCSAMTR, 
                    string Original_STKCTRL, 
                    string Original_SPLRATE, 
                    string Original_RCODE, 
                    global::System.Nullable<double> Original_FRQ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_EXINVDETAILID));
            if ((Original_EXINVBASICID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_EXINVBASICID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_EXINVDETAILROW.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_EXINVDETAILROW.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_JOBNO == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_JOBNO));
            }
            if ((Original_ITEMID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_ITEMID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_MATSUPP == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_MATSUPP));
            }
            if ((Original_UNIT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_UNIT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ORDQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_ORDQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_OLDEIQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_OLDEIQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_EXCISEQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_EXCISEQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_PRIUNIT == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_PRIUNIT));
            }
            if ((Original_QTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_QTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_RATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_RATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_AMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_AMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_BASERATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_BASERATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_BASEAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_BASEAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_COSTRATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_COSTRATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_RETURNEDQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_RETURNEDQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_JODETAILID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_JODETAILID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_EXCISETYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_EXCISETYPE));
            }
            if ((Original_TARIFFID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_TARIFFID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((float)(Original_BEDPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_BEDAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_CESSPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((float)(Original_CESSPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_CESSAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_CESSAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_SHECESSPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((float)(Original_SHECESSPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_SHECESSAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_SHECESSAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_AEDPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((float)(Original_AEDPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_AEDAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_AEDAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_SEDPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((float)(Original_SEDPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_SEDAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_SEDAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_BCDPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((float)(Original_BCDPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_BCDAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_BCDAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_TOTAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((decimal)(Original_TOTAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_TOTEXAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((decimal)(Original_TOTEXAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_SL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((short)(Original_SL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_LOTYN == null)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_LOTYN));
            }
            if ((Original_SERIALYN == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_SERIALYN));
            }
            if ((Original_PENDQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((decimal)(Original_PENDQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_JOSCHEDULEID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((decimal)(Original_JOSCHEDULEID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((decimal)(Original_SUBQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_BINID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((decimal)(Original_BINID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_CRATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((decimal)(Original_CRATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_CAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((decimal)(Original_CAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_ORDTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((string)(Original_ORDTYPE));
            }
            if ((Original_TOSUBGRID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((long)(Original_TOSUBGRID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_ITEMSPEC == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_ITEMSPEC));
            }
            if ((Original_ACCESAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((decimal)(Original_ACCESAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_FREIGHT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((double)(Original_FREIGHT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_QDISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((double)(Original_QDISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_IDISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((double)(Original_IDISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_CDISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((double)(Original_CDISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_TDISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((double)(Original_TDISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_ADISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((double)(Original_ADISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_SDISC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((double)(Original_SDISC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_FRECH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((double)(Original_FRECH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_DISCOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((double)(Original_DISCOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_SRATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((decimal)(Original_SRATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_SPORL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((decimal)(Original_SPORL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_LLAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((decimal)(Original_LLAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_PORLAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((decimal)(Original_PORLAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_SDNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((int)(Original_SDNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_ASDQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((decimal)(Original_ASDQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_DRUMDESC == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_DRUMDESC));
            }
            if ((Original_ITEMTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_ITEMTYPE));
            }
            if ((Original_COMMTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_COMMTYPE));
            }
            if ((Original_COMMVALUE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((decimal)(Original_COMMVALUE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_COMMAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((decimal)(Original_COMMAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_SCHDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((System.DateTime)(Original_SCHDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBDCTRL == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_SUBDCTRL));
            }
            if ((Original_SGSTP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((float)(Original_SGSTP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_CGSTP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((float)(Original_CGSTP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_IGSTP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((float)(Original_IGSTP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_SGST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((double)(Original_SGST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_CGST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((double)(Original_CGST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_IGST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((double)(Original_IGST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_TCSCTRL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((double)(Original_TCSCTRL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_UNITC == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_UNITC));
            }
            if ((Original_HSN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((long)(Original_HSN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_TCSAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((double)(Original_TCSAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_TCSAMTR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((double)(Original_TCSAMTR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_STKCTRL == null)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((string)(Original_STKCTRL));
            }
            if ((Original_SPLRATE == null)) {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[164].Value = ((string)(Original_SPLRATE));
            }
            if ((Original_RCODE == null)) {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[166].Value = ((string)(Original_RCODE));
            }
            if ((Original_FRQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[168].Value = ((double)(Original_FRQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal EXINVDETAILID, 
                    global::System.Nullable<decimal> EXINVBASICID, 
                    global::System.Nullable<decimal> EXINVDETAILROW, 
                    string JOBNO, 
                    global::System.Nullable<decimal> ITEMID, 
                    string MATSUPP, 
                    global::System.Nullable<decimal> UNIT, 
                    global::System.Nullable<decimal> ORDQTY, 
                    global::System.Nullable<decimal> OLDEIQTY, 
                    global::System.Nullable<decimal> EXCISEQTY, 
                    string PRIUNIT, 
                    global::System.Nullable<decimal> QTY, 
                    global::System.Nullable<decimal> RATE, 
                    global::System.Nullable<decimal> AMOUNT, 
                    global::System.Nullable<decimal> BASERATE, 
                    global::System.Nullable<decimal> BASEAMOUNT, 
                    global::System.Nullable<decimal> COSTRATE, 
                    global::System.Nullable<decimal> RETURNEDQTY, 
                    global::System.Nullable<decimal> JODETAILID, 
                    string EXCISETYPE, 
                    global::System.Nullable<decimal> TARIFFID, 
                    global::System.Nullable<float> BEDPER, 
                    global::System.Nullable<decimal> BEDAMT, 
                    global::System.Nullable<float> CESSPER, 
                    global::System.Nullable<decimal> CESSAMT, 
                    global::System.Nullable<float> SHECESSPER, 
                    global::System.Nullable<decimal> SHECESSAMT, 
                    global::System.Nullable<float> AEDPER, 
                    global::System.Nullable<decimal> AEDAMT, 
                    global::System.Nullable<float> SEDPER, 
                    global::System.Nullable<decimal> SEDAMT, 
                    global::System.Nullable<float> BCDPER, 
                    global::System.Nullable<decimal> BCDAMT, 
                    global::System.Nullable<decimal> TOTAMT, 
                    global::System.Nullable<decimal> TOTEXAMT, 
                    global::System.Nullable<short> SL, 
                    string LOTYN, 
                    string SERIALYN, 
                    global::System.Nullable<decimal> PENDQTY, 
                    global::System.Nullable<decimal> JOSCHEDULEID, 
                    global::System.Nullable<decimal> SUBQTY, 
                    global::System.Nullable<decimal> BINID, 
                    global::System.Nullable<decimal> CRATE, 
                    global::System.Nullable<decimal> CAMOUNT, 
                    string ORDTYPE, 
                    global::System.Nullable<long> TOSUBGRID, 
                    string ITEMSPEC, 
                    global::System.Nullable<decimal> ACCESAMOUNT, 
                    global::System.Nullable<double> FREIGHT, 
                    global::System.Nullable<double> QDISC, 
                    global::System.Nullable<double> IDISC, 
                    global::System.Nullable<double> CDISC, 
                    global::System.Nullable<double> TDISC, 
                    global::System.Nullable<double> ADISC, 
                    global::System.Nullable<double> SDISC, 
                    global::System.Nullable<double> FRECH, 
                    global::System.Nullable<double> DISCOUNT, 
                    global::System.Nullable<decimal> SRATE, 
                    global::System.Nullable<decimal> SPORL, 
                    global::System.Nullable<decimal> LLAMOUNT, 
                    global::System.Nullable<decimal> PORLAMOUNT, 
                    global::System.Nullable<int> SDNO, 
                    global::System.Nullable<decimal> ASDQTY, 
                    string DRUMDESC, 
                    string ITEMTYPE, 
                    string COMMTYPE, 
                    global::System.Nullable<decimal> COMMVALUE, 
                    global::System.Nullable<decimal> COMMAMOUNT, 
                    global::System.Nullable<global::System.DateTime> SCHDATE, 
                    string SUBDCTRL, 
                    global::System.Nullable<float> SGSTP, 
                    global::System.Nullable<float> CGSTP, 
                    global::System.Nullable<float> IGSTP, 
                    global::System.Nullable<double> SGST, 
                    global::System.Nullable<double> CGST, 
                    global::System.Nullable<double> IGST, 
                    global::System.Nullable<double> TCSCTRL, 
                    string UNITC, 
                    global::System.Nullable<long> HSN, 
                    global::System.Nullable<double> TCSAMT, 
                    global::System.Nullable<double> TCSAMTR, 
                    string STKCTRL, 
                    string SPLRATE, 
                    string RCODE, 
                    global::System.Nullable<double> FRQ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(EXINVDETAILID));
            if ((EXINVBASICID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(EXINVBASICID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EXINVDETAILROW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(EXINVDETAILROW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((JOBNO == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(JOBNO));
            }
            if ((ITEMID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ITEMID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MATSUPP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(MATSUPP));
            }
            if ((UNIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(UNIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ORDQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(ORDQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OLDEIQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(OLDEIQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((EXCISEQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EXCISEQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((PRIUNIT == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PRIUNIT));
            }
            if ((QTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(QTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((RATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(RATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(AMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BASERATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(BASERATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((BASEAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(BASEAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((COSTRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(COSTRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((RETURNEDQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(RETURNEDQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((JODETAILID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(JODETAILID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((EXCISETYPE == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(EXCISETYPE));
            }
            if ((TARIFFID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(TARIFFID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((BEDPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((float)(BEDPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((BEDAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(BEDAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((CESSPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((float)(CESSPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((CESSAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(CESSAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SHECESSPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((float)(SHECESSPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SHECESSAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(SHECESSAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((AEDPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((float)(AEDPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((AEDAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(AEDAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SEDPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((float)(SEDPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((SEDAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(SEDAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((BCDPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((float)(BCDPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BCDAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(BCDAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((TOTAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(TOTAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((TOTEXAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(TOTEXAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((short)(SL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((LOTYN == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(LOTYN));
            }
            if ((SERIALYN == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(SERIALYN));
            }
            if ((PENDQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(PENDQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((JOSCHEDULEID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(JOSCHEDULEID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((SUBQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(SUBQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((BINID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(BINID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(CRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((CAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(CAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ORDTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(ORDTYPE));
            }
            if ((TOSUBGRID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((long)(TOSUBGRID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ITEMSPEC == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(ITEMSPEC));
            }
            if ((ACCESAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(ACCESAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((FREIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(FREIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((QDISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((double)(QDISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((IDISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((double)(IDISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((CDISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(CDISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((TDISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((double)(TDISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((ADISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(ADISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((SDISC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(SDISC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((FRECH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((double)(FRECH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((DISCOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((double)(DISCOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((SRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(SRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((SPORL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(SPORL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((LLAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(LLAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((PORLAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((decimal)(PORLAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((SDNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((int)(SDNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((ASDQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((decimal)(ASDQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((DRUMDESC == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(DRUMDESC));
            }
            if ((ITEMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(ITEMTYPE));
            }
            if ((COMMTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(COMMTYPE));
            }
            if ((COMMVALUE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((decimal)(COMMVALUE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((COMMAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((decimal)(COMMAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((SCHDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((System.DateTime)(SCHDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((SUBDCTRL == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(SUBDCTRL));
            }
            if ((SGSTP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((float)(SGSTP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((CGSTP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((float)(CGSTP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((IGSTP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((float)(IGSTP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((SGST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((double)(SGST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((CGST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((double)(CGST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((IGST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((double)(IGST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((TCSCTRL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((double)(TCSCTRL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((UNITC == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(UNITC));
            }
            if ((HSN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((long)(HSN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((TCSAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((double)(TCSAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((TCSAMTR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((double)(TCSAMTR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((STKCTRL == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(STKCTRL));
            }
            if ((SPLRATE == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(SPLRATE));
            }
            if ((RCODE == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(RCODE));
            }
            if ((FRQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((double)(FRQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal EXINVDETAILID, 
                    global::System.Nullable<decimal> EXINVBASICID, 
                    global::System.Nullable<decimal> EXINVDETAILROW, 
                    string JOBNO, 
                    global::System.Nullable<decimal> ITEMID, 
                    string MATSUPP, 
                    global::System.Nullable<decimal> UNIT, 
                    global::System.Nullable<decimal> ORDQTY, 
                    global::System.Nullable<decimal> OLDEIQTY, 
                    global::System.Nullable<decimal> EXCISEQTY, 
                    string PRIUNIT, 
                    global::System.Nullable<decimal> QTY, 
                    global::System.Nullable<decimal> RATE, 
                    global::System.Nullable<decimal> AMOUNT, 
                    global::System.Nullable<decimal> BASERATE, 
                    global::System.Nullable<decimal> BASEAMOUNT, 
                    global::System.Nullable<decimal> COSTRATE, 
                    global::System.Nullable<decimal> RETURNEDQTY, 
                    global::System.Nullable<decimal> JODETAILID, 
                    string EXCISETYPE, 
                    global::System.Nullable<decimal> TARIFFID, 
                    global::System.Nullable<float> BEDPER, 
                    global::System.Nullable<decimal> BEDAMT, 
                    global::System.Nullable<float> CESSPER, 
                    global::System.Nullable<decimal> CESSAMT, 
                    global::System.Nullable<float> SHECESSPER, 
                    global::System.Nullable<decimal> SHECESSAMT, 
                    global::System.Nullable<float> AEDPER, 
                    global::System.Nullable<decimal> AEDAMT, 
                    global::System.Nullable<float> SEDPER, 
                    global::System.Nullable<decimal> SEDAMT, 
                    global::System.Nullable<float> BCDPER, 
                    global::System.Nullable<decimal> BCDAMT, 
                    global::System.Nullable<decimal> TOTAMT, 
                    global::System.Nullable<decimal> TOTEXAMT, 
                    global::System.Nullable<short> SL, 
                    string LOTYN, 
                    string SERIALYN, 
                    global::System.Nullable<decimal> PENDQTY, 
                    global::System.Nullable<decimal> JOSCHEDULEID, 
                    global::System.Nullable<decimal> SUBQTY, 
                    global::System.Nullable<decimal> BINID, 
                    global::System.Nullable<decimal> CRATE, 
                    global::System.Nullable<decimal> CAMOUNT, 
                    string ORDTYPE, 
                    global::System.Nullable<long> TOSUBGRID, 
                    string ITEMSPEC, 
                    global::System.Nullable<decimal> ACCESAMOUNT, 
                    global::System.Nullable<double> FREIGHT, 
                    global::System.Nullable<double> QDISC, 
                    global::System.Nullable<double> IDISC, 
                    global::System.Nullable<double> CDISC, 
                    global::System.Nullable<double> TDISC, 
                    global::System.Nullable<double> ADISC, 
                    global::System.Nullable<double> SDISC, 
                    global::System.Nullable<double> FRECH, 
                    global::System.Nullable<double> DISCOUNT, 
                    global::System.Nullable<decimal> SRATE, 
                    global::System.Nullable<decimal> SPORL, 
                    global::System.Nullable<decimal> LLAMOUNT, 
                    global::System.Nullable<decimal> PORLAMOUNT, 
                    global::System.Nullable<int> SDNO, 
                    global::System.Nullable<decimal> ASDQTY, 
                    string DRUMDESC, 
                    string ITEMTYPE, 
                    string COMMTYPE, 
                    global::System.Nullable<decimal> COMMVALUE, 
                    global::System.Nullable<decimal> COMMAMOUNT, 
                    global::System.Nullable<global::System.DateTime> SCHDATE, 
                    string SUBDCTRL, 
                    global::System.Nullable<float> SGSTP, 
                    global::System.Nullable<float> CGSTP, 
                    global::System.Nullable<float> IGSTP, 
                    global::System.Nullable<double> SGST, 
                    global::System.Nullable<double> CGST, 
                    global::System.Nullable<double> IGST, 
                    global::System.Nullable<double> TCSCTRL, 
                    string UNITC, 
                    global::System.Nullable<long> HSN, 
                    global::System.Nullable<double> TCSAMT, 
                    global::System.Nullable<double> TCSAMTR, 
                    string STKCTRL, 
                    string SPLRATE, 
                    string RCODE, 
                    global::System.Nullable<double> FRQ, 
                    decimal Original_EXINVDETAILID, 
                    global::System.Nullable<decimal> Original_EXINVBASICID, 
                    global::System.Nullable<decimal> Original_EXINVDETAILROW, 
                    string Original_JOBNO, 
                    global::System.Nullable<decimal> Original_ITEMID, 
                    string Original_MATSUPP, 
                    global::System.Nullable<decimal> Original_UNIT, 
                    global::System.Nullable<decimal> Original_ORDQTY, 
                    global::System.Nullable<decimal> Original_OLDEIQTY, 
                    global::System.Nullable<decimal> Original_EXCISEQTY, 
                    string Original_PRIUNIT, 
                    global::System.Nullable<decimal> Original_QTY, 
                    global::System.Nullable<decimal> Original_RATE, 
                    global::System.Nullable<decimal> Original_AMOUNT, 
                    global::System.Nullable<decimal> Original_BASERATE, 
                    global::System.Nullable<decimal> Original_BASEAMOUNT, 
                    global::System.Nullable<decimal> Original_COSTRATE, 
                    global::System.Nullable<decimal> Original_RETURNEDQTY, 
                    global::System.Nullable<decimal> Original_JODETAILID, 
                    string Original_EXCISETYPE, 
                    global::System.Nullable<decimal> Original_TARIFFID, 
                    global::System.Nullable<float> Original_BEDPER, 
                    global::System.Nullable<decimal> Original_BEDAMT, 
                    global::System.Nullable<float> Original_CESSPER, 
                    global::System.Nullable<decimal> Original_CESSAMT, 
                    global::System.Nullable<float> Original_SHECESSPER, 
                    global::System.Nullable<decimal> Original_SHECESSAMT, 
                    global::System.Nullable<float> Original_AEDPER, 
                    global::System.Nullable<decimal> Original_AEDAMT, 
                    global::System.Nullable<float> Original_SEDPER, 
                    global::System.Nullable<decimal> Original_SEDAMT, 
                    global::System.Nullable<float> Original_BCDPER, 
                    global::System.Nullable<decimal> Original_BCDAMT, 
                    global::System.Nullable<decimal> Original_TOTAMT, 
                    global::System.Nullable<decimal> Original_TOTEXAMT, 
                    global::System.Nullable<short> Original_SL, 
                    string Original_LOTYN, 
                    string Original_SERIALYN, 
                    global::System.Nullable<decimal> Original_PENDQTY, 
                    global::System.Nullable<decimal> Original_JOSCHEDULEID, 
                    global::System.Nullable<decimal> Original_SUBQTY, 
                    global::System.Nullable<decimal> Original_BINID, 
                    global::System.Nullable<decimal> Original_CRATE, 
                    global::System.Nullable<decimal> Original_CAMOUNT, 
                    string Original_ORDTYPE, 
                    global::System.Nullable<long> Original_TOSUBGRID, 
                    string Original_ITEMSPEC, 
                    global::System.Nullable<decimal> Original_ACCESAMOUNT, 
                    global::System.Nullable<double> Original_FREIGHT, 
                    global::System.Nullable<double> Original_QDISC, 
                    global::System.Nullable<double> Original_IDISC, 
                    global::System.Nullable<double> Original_CDISC, 
                    global::System.Nullable<double> Original_TDISC, 
                    global::System.Nullable<double> Original_ADISC, 
                    global::System.Nullable<double> Original_SDISC, 
                    global::System.Nullable<double> Original_FRECH, 
                    global::System.Nullable<double> Original_DISCOUNT, 
                    global::System.Nullable<decimal> Original_SRATE, 
                    global::System.Nullable<decimal> Original_SPORL, 
                    global::System.Nullable<decimal> Original_LLAMOUNT, 
                    global::System.Nullable<decimal> Original_PORLAMOUNT, 
                    global::System.Nullable<int> Original_SDNO, 
                    global::System.Nullable<decimal> Original_ASDQTY, 
                    string Original_DRUMDESC, 
                    string Original_ITEMTYPE, 
                    string Original_COMMTYPE, 
                    global::System.Nullable<decimal> Original_COMMVALUE, 
                    global::System.Nullable<decimal> Original_COMMAMOUNT, 
                    global::System.Nullable<global::System.DateTime> Original_SCHDATE, 
                    string Original_SUBDCTRL, 
                    global::System.Nullable<float> Original_SGSTP, 
                    global::System.Nullable<float> Original_CGSTP, 
                    global::System.Nullable<float> Original_IGSTP, 
                    global::System.Nullable<double> Original_SGST, 
                    global::System.Nullable<double> Original_CGST, 
                    global::System.Nullable<double> Original_IGST, 
                    global::System.Nullable<double> Original_TCSCTRL, 
                    string Original_UNITC, 
                    global::System.Nullable<long> Original_HSN, 
                    global::System.Nullable<double> Original_TCSAMT, 
                    global::System.Nullable<double> Original_TCSAMTR, 
                    string Original_STKCTRL, 
                    string Original_SPLRATE, 
                    string Original_RCODE, 
                    global::System.Nullable<double> Original_FRQ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(EXINVDETAILID));
            if ((EXINVBASICID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(EXINVBASICID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EXINVDETAILROW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(EXINVDETAILROW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((JOBNO == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(JOBNO));
            }
            if ((ITEMID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ITEMID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((MATSUPP == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(MATSUPP));
            }
            if ((UNIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(UNIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ORDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(ORDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((OLDEIQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(OLDEIQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((EXCISEQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EXCISEQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((PRIUNIT == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PRIUNIT));
            }
            if ((QTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(QTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(AMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BASERATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(BASERATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((BASEAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(BASEAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((COSTRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(COSTRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((RETURNEDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(RETURNEDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((JODETAILID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(JODETAILID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((EXCISETYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(EXCISETYPE));
            }
            if ((TARIFFID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(TARIFFID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((BEDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((float)(BEDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((BEDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(BEDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((CESSPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((float)(CESSPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((CESSAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(CESSAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SHECESSPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((float)(SHECESSPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((SHECESSAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(SHECESSAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((AEDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(AEDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((AEDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(AEDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((SEDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((float)(SEDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((SEDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(SEDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((BCDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((float)(BCDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BCDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(BCDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((TOTAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(TOTAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((TOTEXAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(TOTEXAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((SL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((short)(SL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((LOTYN == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(LOTYN));
            }
            if ((SERIALYN == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(SERIALYN));
            }
            if ((PENDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(PENDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((JOSCHEDULEID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(JOSCHEDULEID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((SUBQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(SUBQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((BINID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(BINID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((CRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(CRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((CAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(CAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ORDTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(ORDTYPE));
            }
            if ((TOSUBGRID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((long)(TOSUBGRID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((ITEMSPEC == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(ITEMSPEC));
            }
            if ((ACCESAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(ACCESAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((FREIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(FREIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((QDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(QDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((IDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(IDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((CDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(CDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((TDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(TDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((ADISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(ADISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((SDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(SDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((FRECH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(FRECH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((DISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(DISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((SRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(SRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((SPORL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(SPORL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((LLAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(LLAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((PORLAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(PORLAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((SDNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(SDNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((ASDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(ASDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((DRUMDESC == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(DRUMDESC));
            }
            if ((ITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(ITEMTYPE));
            }
            if ((COMMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(COMMTYPE));
            }
            if ((COMMVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(COMMVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((COMMAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(COMMAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((SCHDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(SCHDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((SUBDCTRL == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(SUBDCTRL));
            }
            if ((SGSTP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((float)(SGSTP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((CGSTP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((float)(CGSTP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((IGSTP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((float)(IGSTP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((SGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(SGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((CGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(CGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((IGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(IGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((TCSCTRL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(TCSCTRL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((UNITC == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(UNITC));
            }
            if ((HSN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((long)(HSN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((TCSAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(TCSAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((TCSAMTR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(TCSAMTR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((STKCTRL == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(STKCTRL));
            }
            if ((SPLRATE == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(SPLRATE));
            }
            if ((RCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(RCODE));
            }
            if ((FRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(FRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_EXINVDETAILID));
            if ((Original_EXINVBASICID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_EXINVBASICID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_EXINVDETAILROW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_EXINVDETAILROW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_JOBNO == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_JOBNO));
            }
            if ((Original_ITEMID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_ITEMID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_MATSUPP == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_MATSUPP));
            }
            if ((Original_UNIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_UNIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_ORDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_ORDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_OLDEIQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_OLDEIQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_EXCISEQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_EXCISEQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_PRIUNIT == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_PRIUNIT));
            }
            if ((Original_QTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(Original_QTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_RATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_RATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_AMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_AMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_BASERATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((decimal)(Original_BASERATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_BASEAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((decimal)(Original_BASEAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_COSTRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_COSTRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_RETURNEDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((decimal)(Original_RETURNEDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_JODETAILID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_JODETAILID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_EXCISETYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_EXCISETYPE));
            }
            if ((Original_TARIFFID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((decimal)(Original_TARIFFID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((float)(Original_BEDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((decimal)(Original_BEDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_CESSPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((float)(Original_CESSPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_CESSAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((decimal)(Original_CESSAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_SHECESSPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((float)(Original_SHECESSPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_SHECESSAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((decimal)(Original_SHECESSAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_AEDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((float)(Original_AEDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_AEDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((decimal)(Original_AEDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_SEDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((float)(Original_SEDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_SEDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((decimal)(Original_SEDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_BCDPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((float)(Original_BCDPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_BCDAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((decimal)(Original_BCDAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_TOTAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((decimal)(Original_TOTAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_TOTEXAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((decimal)(Original_TOTEXAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_SL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((short)(Original_SL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_LOTYN == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_LOTYN));
            }
            if ((Original_SERIALYN == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_SERIALYN));
            }
            if ((Original_PENDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((decimal)(Original_PENDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_JOSCHEDULEID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((decimal)(Original_JOSCHEDULEID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((decimal)(Original_SUBQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_BINID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((decimal)(Original_BINID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_CRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((decimal)(Original_CRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_CAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((decimal)(Original_CAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_ORDTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(Original_ORDTYPE));
            }
            if ((Original_TOSUBGRID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((long)(Original_TOSUBGRID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_ITEMSPEC == null)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((string)(Original_ITEMSPEC));
            }
            if ((Original_ACCESAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((decimal)(Original_ACCESAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_FREIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((double)(Original_FREIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_QDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((double)(Original_QDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_IDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((double)(Original_IDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_CDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((double)(Original_CDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_TDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((double)(Original_TDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_ADISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((double)(Original_ADISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_SDISC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((double)(Original_SDISC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_FRECH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((double)(Original_FRECH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_DISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((double)(Original_DISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_SRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((decimal)(Original_SRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            if ((Original_SPORL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((decimal)(Original_SPORL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((Original_LLAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((decimal)(Original_LLAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((Original_PORLAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((decimal)(Original_PORLAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_SDNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((int)(Original_SDNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_ASDQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((decimal)(Original_ASDQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_DRUMDESC == null)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((string)(Original_DRUMDESC));
            }
            if ((Original_ITEMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((string)(Original_ITEMTYPE));
            }
            if ((Original_COMMTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((string)(Original_COMMTYPE));
            }
            if ((Original_COMMVALUE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((decimal)(Original_COMMVALUE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_COMMAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((decimal)(Original_COMMAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((Original_SCHDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((System.DateTime)(Original_SCHDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBDCTRL == null)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((string)(Original_SUBDCTRL));
            }
            if ((Original_SGSTP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((float)(Original_SGSTP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            if ((Original_CGSTP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((float)(Original_CGSTP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            if ((Original_IGSTP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((float)(Original_IGSTP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            if ((Original_SGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((double)(Original_SGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            if ((Original_CGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((double)(Original_CGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            if ((Original_IGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((double)(Original_IGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            if ((Original_TCSCTRL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((double)(Original_TCSCTRL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            if ((Original_UNITC == null)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((string)(Original_UNITC));
            }
            if ((Original_HSN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((long)(Original_HSN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            if ((Original_TCSAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((double)(Original_TCSAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            if ((Original_TCSAMTR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((double)(Original_TCSAMTR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            if ((Original_STKCTRL == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_STKCTRL));
            }
            if ((Original_SPLRATE == null)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((string)(Original_SPLRATE));
            }
            if ((Original_RCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((string)(Original_RCODE));
            }
            if ((Original_FRQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((double)(Original_FRQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> EXINVBASICID, 
                    global::System.Nullable<decimal> EXINVDETAILROW, 
                    string JOBNO, 
                    global::System.Nullable<decimal> ITEMID, 
                    string MATSUPP, 
                    global::System.Nullable<decimal> UNIT, 
                    global::System.Nullable<decimal> ORDQTY, 
                    global::System.Nullable<decimal> OLDEIQTY, 
                    global::System.Nullable<decimal> EXCISEQTY, 
                    string PRIUNIT, 
                    global::System.Nullable<decimal> QTY, 
                    global::System.Nullable<decimal> RATE, 
                    global::System.Nullable<decimal> AMOUNT, 
                    global::System.Nullable<decimal> BASERATE, 
                    global::System.Nullable<decimal> BASEAMOUNT, 
                    global::System.Nullable<decimal> COSTRATE, 
                    global::System.Nullable<decimal> RETURNEDQTY, 
                    global::System.Nullable<decimal> JODETAILID, 
                    string EXCISETYPE, 
                    global::System.Nullable<decimal> TARIFFID, 
                    global::System.Nullable<float> BEDPER, 
                    global::System.Nullable<decimal> BEDAMT, 
                    global::System.Nullable<float> CESSPER, 
                    global::System.Nullable<decimal> CESSAMT, 
                    global::System.Nullable<float> SHECESSPER, 
                    global::System.Nullable<decimal> SHECESSAMT, 
                    global::System.Nullable<float> AEDPER, 
                    global::System.Nullable<decimal> AEDAMT, 
                    global::System.Nullable<float> SEDPER, 
                    global::System.Nullable<decimal> SEDAMT, 
                    global::System.Nullable<float> BCDPER, 
                    global::System.Nullable<decimal> BCDAMT, 
                    global::System.Nullable<decimal> TOTAMT, 
                    global::System.Nullable<decimal> TOTEXAMT, 
                    global::System.Nullable<short> SL, 
                    string LOTYN, 
                    string SERIALYN, 
                    global::System.Nullable<decimal> PENDQTY, 
                    global::System.Nullable<decimal> JOSCHEDULEID, 
                    global::System.Nullable<decimal> SUBQTY, 
                    global::System.Nullable<decimal> BINID, 
                    global::System.Nullable<decimal> CRATE, 
                    global::System.Nullable<decimal> CAMOUNT, 
                    string ORDTYPE, 
                    global::System.Nullable<long> TOSUBGRID, 
                    string ITEMSPEC, 
                    global::System.Nullable<decimal> ACCESAMOUNT, 
                    global::System.Nullable<double> FREIGHT, 
                    global::System.Nullable<double> QDISC, 
                    global::System.Nullable<double> IDISC, 
                    global::System.Nullable<double> CDISC, 
                    global::System.Nullable<double> TDISC, 
                    global::System.Nullable<double> ADISC, 
                    global::System.Nullable<double> SDISC, 
                    global::System.Nullable<double> FRECH, 
                    global::System.Nullable<double> DISCOUNT, 
                    global::System.Nullable<decimal> SRATE, 
                    global::System.Nullable<decimal> SPORL, 
                    global::System.Nullable<decimal> LLAMOUNT, 
                    global::System.Nullable<decimal> PORLAMOUNT, 
                    global::System.Nullable<int> SDNO, 
                    global::System.Nullable<decimal> ASDQTY, 
                    string DRUMDESC, 
                    string ITEMTYPE, 
                    string COMMTYPE, 
                    global::System.Nullable<decimal> COMMVALUE, 
                    global::System.Nullable<decimal> COMMAMOUNT, 
                    global::System.Nullable<global::System.DateTime> SCHDATE, 
                    string SUBDCTRL, 
                    global::System.Nullable<float> SGSTP, 
                    global::System.Nullable<float> CGSTP, 
                    global::System.Nullable<float> IGSTP, 
                    global::System.Nullable<double> SGST, 
                    global::System.Nullable<double> CGST, 
                    global::System.Nullable<double> IGST, 
                    global::System.Nullable<double> TCSCTRL, 
                    string UNITC, 
                    global::System.Nullable<long> HSN, 
                    global::System.Nullable<double> TCSAMT, 
                    global::System.Nullable<double> TCSAMTR, 
                    string STKCTRL, 
                    string SPLRATE, 
                    string RCODE, 
                    global::System.Nullable<double> FRQ, 
                    decimal Original_EXINVDETAILID, 
                    global::System.Nullable<decimal> Original_EXINVBASICID, 
                    global::System.Nullable<decimal> Original_EXINVDETAILROW, 
                    string Original_JOBNO, 
                    global::System.Nullable<decimal> Original_ITEMID, 
                    string Original_MATSUPP, 
                    global::System.Nullable<decimal> Original_UNIT, 
                    global::System.Nullable<decimal> Original_ORDQTY, 
                    global::System.Nullable<decimal> Original_OLDEIQTY, 
                    global::System.Nullable<decimal> Original_EXCISEQTY, 
                    string Original_PRIUNIT, 
                    global::System.Nullable<decimal> Original_QTY, 
                    global::System.Nullable<decimal> Original_RATE, 
                    global::System.Nullable<decimal> Original_AMOUNT, 
                    global::System.Nullable<decimal> Original_BASERATE, 
                    global::System.Nullable<decimal> Original_BASEAMOUNT, 
                    global::System.Nullable<decimal> Original_COSTRATE, 
                    global::System.Nullable<decimal> Original_RETURNEDQTY, 
                    global::System.Nullable<decimal> Original_JODETAILID, 
                    string Original_EXCISETYPE, 
                    global::System.Nullable<decimal> Original_TARIFFID, 
                    global::System.Nullable<float> Original_BEDPER, 
                    global::System.Nullable<decimal> Original_BEDAMT, 
                    global::System.Nullable<float> Original_CESSPER, 
                    global::System.Nullable<decimal> Original_CESSAMT, 
                    global::System.Nullable<float> Original_SHECESSPER, 
                    global::System.Nullable<decimal> Original_SHECESSAMT, 
                    global::System.Nullable<float> Original_AEDPER, 
                    global::System.Nullable<decimal> Original_AEDAMT, 
                    global::System.Nullable<float> Original_SEDPER, 
                    global::System.Nullable<decimal> Original_SEDAMT, 
                    global::System.Nullable<float> Original_BCDPER, 
                    global::System.Nullable<decimal> Original_BCDAMT, 
                    global::System.Nullable<decimal> Original_TOTAMT, 
                    global::System.Nullable<decimal> Original_TOTEXAMT, 
                    global::System.Nullable<short> Original_SL, 
                    string Original_LOTYN, 
                    string Original_SERIALYN, 
                    global::System.Nullable<decimal> Original_PENDQTY, 
                    global::System.Nullable<decimal> Original_JOSCHEDULEID, 
                    global::System.Nullable<decimal> Original_SUBQTY, 
                    global::System.Nullable<decimal> Original_BINID, 
                    global::System.Nullable<decimal> Original_CRATE, 
                    global::System.Nullable<decimal> Original_CAMOUNT, 
                    string Original_ORDTYPE, 
                    global::System.Nullable<long> Original_TOSUBGRID, 
                    string Original_ITEMSPEC, 
                    global::System.Nullable<decimal> Original_ACCESAMOUNT, 
                    global::System.Nullable<double> Original_FREIGHT, 
                    global::System.Nullable<double> Original_QDISC, 
                    global::System.Nullable<double> Original_IDISC, 
                    global::System.Nullable<double> Original_CDISC, 
                    global::System.Nullable<double> Original_TDISC, 
                    global::System.Nullable<double> Original_ADISC, 
                    global::System.Nullable<double> Original_SDISC, 
                    global::System.Nullable<double> Original_FRECH, 
                    global::System.Nullable<double> Original_DISCOUNT, 
                    global::System.Nullable<decimal> Original_SRATE, 
                    global::System.Nullable<decimal> Original_SPORL, 
                    global::System.Nullable<decimal> Original_LLAMOUNT, 
                    global::System.Nullable<decimal> Original_PORLAMOUNT, 
                    global::System.Nullable<int> Original_SDNO, 
                    global::System.Nullable<decimal> Original_ASDQTY, 
                    string Original_DRUMDESC, 
                    string Original_ITEMTYPE, 
                    string Original_COMMTYPE, 
                    global::System.Nullable<decimal> Original_COMMVALUE, 
                    global::System.Nullable<decimal> Original_COMMAMOUNT, 
                    global::System.Nullable<global::System.DateTime> Original_SCHDATE, 
                    string Original_SUBDCTRL, 
                    global::System.Nullable<float> Original_SGSTP, 
                    global::System.Nullable<float> Original_CGSTP, 
                    global::System.Nullable<float> Original_IGSTP, 
                    global::System.Nullable<double> Original_SGST, 
                    global::System.Nullable<double> Original_CGST, 
                    global::System.Nullable<double> Original_IGST, 
                    global::System.Nullable<double> Original_TCSCTRL, 
                    string Original_UNITC, 
                    global::System.Nullable<long> Original_HSN, 
                    global::System.Nullable<double> Original_TCSAMT, 
                    global::System.Nullable<double> Original_TCSAMTR, 
                    string Original_STKCTRL, 
                    string Original_SPLRATE, 
                    string Original_RCODE, 
                    global::System.Nullable<double> Original_FRQ) {
            return this.Update(Original_EXINVDETAILID, EXINVBASICID, EXINVDETAILROW, JOBNO, ITEMID, MATSUPP, UNIT, ORDQTY, OLDEIQTY, EXCISEQTY, PRIUNIT, QTY, RATE, AMOUNT, BASERATE, BASEAMOUNT, COSTRATE, RETURNEDQTY, JODETAILID, EXCISETYPE, TARIFFID, BEDPER, BEDAMT, CESSPER, CESSAMT, SHECESSPER, SHECESSAMT, AEDPER, AEDAMT, SEDPER, SEDAMT, BCDPER, BCDAMT, TOTAMT, TOTEXAMT, SL, LOTYN, SERIALYN, PENDQTY, JOSCHEDULEID, SUBQTY, BINID, CRATE, CAMOUNT, ORDTYPE, TOSUBGRID, ITEMSPEC, ACCESAMOUNT, FREIGHT, QDISC, IDISC, CDISC, TDISC, ADISC, SDISC, FRECH, DISCOUNT, SRATE, SPORL, LLAMOUNT, PORLAMOUNT, SDNO, ASDQTY, DRUMDESC, ITEMTYPE, COMMTYPE, COMMVALUE, COMMAMOUNT, SCHDATE, SUBDCTRL, SGSTP, CGSTP, IGSTP, SGST, CGST, IGST, TCSCTRL, UNITC, HSN, TCSAMT, TCSAMTR, STKCTRL, SPLRATE, RCODE, FRQ, Original_EXINVDETAILID, Original_EXINVBASICID, Original_EXINVDETAILROW, Original_JOBNO, Original_ITEMID, Original_MATSUPP, Original_UNIT, Original_ORDQTY, Original_OLDEIQTY, Original_EXCISEQTY, Original_PRIUNIT, Original_QTY, Original_RATE, Original_AMOUNT, Original_BASERATE, Original_BASEAMOUNT, Original_COSTRATE, Original_RETURNEDQTY, Original_JODETAILID, Original_EXCISETYPE, Original_TARIFFID, Original_BEDPER, Original_BEDAMT, Original_CESSPER, Original_CESSAMT, Original_SHECESSPER, Original_SHECESSAMT, Original_AEDPER, Original_AEDAMT, Original_SEDPER, Original_SEDAMT, Original_BCDPER, Original_BCDAMT, Original_TOTAMT, Original_TOTEXAMT, Original_SL, Original_LOTYN, Original_SERIALYN, Original_PENDQTY, Original_JOSCHEDULEID, Original_SUBQTY, Original_BINID, Original_CRATE, Original_CAMOUNT, Original_ORDTYPE, Original_TOSUBGRID, Original_ITEMSPEC, Original_ACCESAMOUNT, Original_FREIGHT, Original_QDISC, Original_IDISC, Original_CDISC, Original_TDISC, Original_ADISC, Original_SDISC, Original_FRECH, Original_DISCOUNT, Original_SRATE, Original_SPORL, Original_LLAMOUNT, Original_PORLAMOUNT, Original_SDNO, Original_ASDQTY, Original_DRUMDESC, Original_ITEMTYPE, Original_COMMTYPE, Original_COMMVALUE, Original_COMMAMOUNT, Original_SCHDATE, Original_SUBDCTRL, Original_SGSTP, Original_CGSTP, Original_IGSTP, Original_SGST, Original_CGST, Original_IGST, Original_TCSCTRL, Original_UNITC, Original_HSN, Original_TCSAMT, Original_TCSAMTR, Original_STKCTRL, Original_SPLRATE, Original_RCODE, Original_FRQ);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EXINVDETAILTableAdapter _eXINVDETAILTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EXINVDETAILTableAdapter EXINVDETAILTableAdapter {
            get {
                return this._eXINVDETAILTableAdapter;
            }
            set {
                this._eXINVDETAILTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._eXINVDETAILTableAdapter != null) 
                            && (this._eXINVDETAILTableAdapter.Connection != null))) {
                    return this._eXINVDETAILTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._eXINVDETAILTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(ExinvDetail dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eXINVDETAILTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXINVDETAIL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXINVDETAILTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(ExinvDetail dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eXINVDETAILTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXINVDETAIL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXINVDETAILTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(ExinvDetail dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._eXINVDETAILTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXINVDETAIL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXINVDETAILTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(ExinvDetail dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._eXINVDETAILTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXINVDETAILTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._eXINVDETAILTableAdapter != null)) {
                    revertConnections.Add(this._eXINVDETAILTableAdapter, this._eXINVDETAILTableAdapter.Connection);
                    this._eXINVDETAILTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._eXINVDETAILTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._eXINVDETAILTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXINVDETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXINVDETAILTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._eXINVDETAILTableAdapter != null)) {
                    this._eXINVDETAILTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._eXINVDETAILTableAdapter]));
                    this._eXINVDETAILTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591