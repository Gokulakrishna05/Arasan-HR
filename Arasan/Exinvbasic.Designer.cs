//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Arasan {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Exinvbasic")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Exinvbasic : global::System.Data.DataSet {
        
        private EXINVBASICDataTable tableEXINVBASIC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Exinvbasic() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected Exinvbasic(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EXINVBASIC"] != null)) {
                    base.Tables.Add(new EXINVBASICDataTable(ds.Tables["EXINVBASIC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXINVBASICDataTable EXINVBASIC {
            get {
                return this.tableEXINVBASIC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Exinvbasic cln = ((Exinvbasic)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EXINVBASIC"] != null)) {
                    base.Tables.Add(new EXINVBASICDataTable(ds.Tables["EXINVBASIC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEXINVBASIC = ((EXINVBASICDataTable)(base.Tables["EXINVBASIC"]));
            if ((initTable == true)) {
                if ((this.tableEXINVBASIC != null)) {
                    this.tableEXINVBASIC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Exinvbasic";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Exinvbasic.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEXINVBASIC = new EXINVBASICDataTable();
            base.Tables.Add(this.tableEXINVBASIC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeEXINVBASIC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Exinvbasic ds = new Exinvbasic();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void EXINVBASICRowChangeEventHandler(object sender, EXINVBASICRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXINVBASICDataTable : global::System.Data.TypedTableBase<EXINVBASICRow> {
            
            private global::System.Data.DataColumn columnEXINVBASICID;
            
            private global::System.Data.DataColumn columnPROFITDOC;
            
            private global::System.Data.DataColumn columnAPPROVAL;
            
            private global::System.Data.DataColumn columnAPPROVALSTATUS;
            
            private global::System.Data.DataColumn columnMAXAPPROVED;
            
            private global::System.Data.DataColumn columnCANCEL;
            
            private global::System.Data.DataColumn columnT1SOURCEID;
            
            private global::System.Data.DataColumn columnLATEMPLATEID;
            
            private global::System.Data.DataColumn columnBRANCHID;
            
            private global::System.Data.DataColumn columnVTYPE;
            
            private global::System.Data.DataColumn columnDOCID;
            
            private global::System.Data.DataColumn columnDOCDATE;
            
            private global::System.Data.DataColumn columnREFNO;
            
            private global::System.Data.DataColumn columnREFDATE;
            
            private global::System.Data.DataColumn columnMAINCURRENCY;
            
            private global::System.Data.DataColumn columnSYMBOL;
            
            private global::System.Data.DataColumn columnEXRATE;
            
            private global::System.Data.DataColumn columnPARTYID;
            
            private global::System.Data.DataColumn columnPARTYNAME;
            
            private global::System.Data.DataColumn columnRECDBY;
            
            private global::System.Data.DataColumn columnDESPBY;
            
            private global::System.Data.DataColumn columnINSPBY;
            
            private global::System.Data.DataColumn columnDOCTHORUGH;
            
            private global::System.Data.DataColumn columnCUSTACC;
            
            private global::System.Data.DataColumn columnTEMPID;
            
            private global::System.Data.DataColumn columnADTGMCONTROL;
            
            private global::System.Data.DataColumn columnRNDOFF;
            
            private global::System.Data.DataColumn columnMOBILE;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnGROSS;
            
            private global::System.Data.DataColumn columnNET;
            
            private global::System.Data.DataColumn columnNARRATION;
            
            private global::System.Data.DataColumn columnLOCID;
            
            private global::System.Data.DataColumn columnCREDITLIMIT;
            
            private global::System.Data.DataColumn columnTRANSLIMIT;
            
            private global::System.Data.DataColumn columnPARTYBALANCE;
            
            private global::System.Data.DataColumn columnCREDITDAYS;
            
            private global::System.Data.DataColumn columnDUEDATE;
            
            private global::System.Data.DataColumn columnFBED;
            
            private global::System.Data.DataColumn columnFCESS;
            
            private global::System.Data.DataColumn columnFHSE;
            
            private global::System.Data.DataColumn columnINVTYPE;
            
            private global::System.Data.DataColumn columnBINYN;
            
            private global::System.Data.DataColumn columnPACKRND;
            
            private global::System.Data.DataColumn columnOTHCHAR;
            
            private global::System.Data.DataColumn columnEORDTYPE;
            
            private global::System.Data.DataColumn columnINVDESC;
            
            private global::System.Data.DataColumn columnVNO;
            
            private global::System.Data.DataColumn columnAMTWORDSBED;
            
            private global::System.Data.DataColumn columnBFREIGHT;
            
            private global::System.Data.DataColumn columnBDISCOUNT;
            
            private global::System.Data.DataColumn columnFTAX;
            
            private global::System.Data.DataColumn columnTOTACCESAMOUNT;
            
            private global::System.Data.DataColumn columnBDRUMS;
            
            private global::System.Data.DataColumn columnBTOTQTY;
            
            private global::System.Data.DataColumn columnBTOTAMT;
            
            private global::System.Data.DataColumn columnBTOTACCAMT;
            
            private global::System.Data.DataColumn columnBEDTRCH;
            
            private global::System.Data.DataColumn columnBEDTRAMT;
            
            private global::System.Data.DataColumn columnBTOTPORLAMT;
            
            private global::System.Data.DataColumn columnSERNO;
            
            private global::System.Data.DataColumn columnDEPORECFLAG;
            
            private global::System.Data.DataColumn columnFCFLAG;
            
            private global::System.Data.DataColumn columnCOMMCODE;
            
            private global::System.Data.DataColumn columnAMTWORDS;
            
            private global::System.Data.DataColumn columnMCHELLAN;
            
            private global::System.Data.DataColumn columnSCHELLAN;
            
            private global::System.Data.DataColumn columnSCHALL2;
            
            private global::System.Data.DataColumn columnBEDAMTW;
            
            private global::System.Data.DataColumn columnTRANSITLOCID;
            
            private global::System.Data.DataColumn columnCSGNPARTYID;
            
            private global::System.Data.DataColumn columnPDOCID;
            
            private global::System.Data.DataColumn columnEXSTATUS;
            
            private global::System.Data.DataColumn columnSTAXPER;
            
            private global::System.Data.DataColumn columnADSCHEME;
            
            private global::System.Data.DataColumn columnPARTYMASTID;
            
            private global::System.Data.DataColumn columnSUBDITEMMID;
            
            private global::System.Data.DataColumn columnSUBDLOCID;
            
            private global::System.Data.DataColumn columnSUBDRATE;
            
            private global::System.Data.DataColumn columnLOCDETAILSID;
            
            private global::System.Data.DataColumn columnBSGST;
            
            private global::System.Data.DataColumn columnBCGST;
            
            private global::System.Data.DataColumn columnBIGST;
            
            private global::System.Data.DataColumn columnTRANSP;
            
            private global::System.Data.DataColumn columnTRANSMODE;
            
            private global::System.Data.DataColumn columnCUSTPO;
            
            private global::System.Data.DataColumn columnROFF;
            
            private global::System.Data.DataColumn columnTCS;
            
            private global::System.Data.DataColumn columnLUTNO;
            
            private global::System.Data.DataColumn columnLUTDT;
            
            private global::System.Data.DataColumn columnSEZ;
            
            private global::System.Data.DataColumn columnBTCS;
            
            private global::System.Data.DataColumn columnSALVAL;
            
            private global::System.Data.DataColumn columnGSTNO;
            
            private global::System.Data.DataColumn columnPANNO;
            
            private global::System.Data.DataColumn columnTDIST;
            
            private global::System.Data.DataColumn columnTRANSCHGSP;
            
            private global::System.Data.DataColumn columnRECVAL;
            
            private global::System.Data.DataColumn columnPARTYGROUP;
            
            private global::System.Data.DataColumn columnSALLIMIT;
            
            private global::System.Data.DataColumn columnASALVAL;
            
            private global::System.Data.DataColumn columnBSPLRATE;
            
            private global::System.Data.DataColumn columnRATECODE;
            
            private global::System.Data.DataColumn columnCRATECODE;
            
            private global::System.Data.DataColumn columnADDT;
            
            private global::System.Data.DataColumn columnSAVECTRL;
            
            private global::System.Data.DataColumn columnLIMITQ;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnTRANSPORT;
            
            private global::System.Data.DataColumn columnTRANSPORTGST;
            
            private global::System.Data.DataColumn columnSTATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICDataTable() {
                this.TableName = "EXINVBASIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EXINVBASICDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected EXINVBASICDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXINVBASICIDColumn {
                get {
                    return this.columnEXINVBASICID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PROFITDOCColumn {
                get {
                    return this.columnPROFITDOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn APPROVALColumn {
                get {
                    return this.columnAPPROVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn APPROVALSTATUSColumn {
                get {
                    return this.columnAPPROVALSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MAXAPPROVEDColumn {
                get {
                    return this.columnMAXAPPROVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CANCELColumn {
                get {
                    return this.columnCANCEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn T1SOURCEIDColumn {
                get {
                    return this.columnT1SOURCEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LATEMPLATEIDColumn {
                get {
                    return this.columnLATEMPLATEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BRANCHIDColumn {
                get {
                    return this.columnBRANCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VTYPEColumn {
                get {
                    return this.columnVTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DOCIDColumn {
                get {
                    return this.columnDOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DOCDATEColumn {
                get {
                    return this.columnDOCDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REFNOColumn {
                get {
                    return this.columnREFNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REFDATEColumn {
                get {
                    return this.columnREFDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MAINCURRENCYColumn {
                get {
                    return this.columnMAINCURRENCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SYMBOLColumn {
                get {
                    return this.columnSYMBOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXRATEColumn {
                get {
                    return this.columnEXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYIDColumn {
                get {
                    return this.columnPARTYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYNAMEColumn {
                get {
                    return this.columnPARTYNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RECDBYColumn {
                get {
                    return this.columnRECDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DESPBYColumn {
                get {
                    return this.columnDESPBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSPBYColumn {
                get {
                    return this.columnINSPBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DOCTHORUGHColumn {
                get {
                    return this.columnDOCTHORUGH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CUSTACCColumn {
                get {
                    return this.columnCUSTACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TEMPIDColumn {
                get {
                    return this.columnTEMPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADTGMCONTROLColumn {
                get {
                    return this.columnADTGMCONTROL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RNDOFFColumn {
                get {
                    return this.columnRNDOFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MOBILEColumn {
                get {
                    return this.columnMOBILE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GROSSColumn {
                get {
                    return this.columnGROSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NETColumn {
                get {
                    return this.columnNET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NARRATIONColumn {
                get {
                    return this.columnNARRATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOCIDColumn {
                get {
                    return this.columnLOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CREDITLIMITColumn {
                get {
                    return this.columnCREDITLIMIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSLIMITColumn {
                get {
                    return this.columnTRANSLIMIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYBALANCEColumn {
                get {
                    return this.columnPARTYBALANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CREDITDAYSColumn {
                get {
                    return this.columnCREDITDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DUEDATEColumn {
                get {
                    return this.columnDUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FBEDColumn {
                get {
                    return this.columnFBED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FCESSColumn {
                get {
                    return this.columnFCESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FHSEColumn {
                get {
                    return this.columnFHSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INVTYPEColumn {
                get {
                    return this.columnINVTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BINYNColumn {
                get {
                    return this.columnBINYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PACKRNDColumn {
                get {
                    return this.columnPACKRND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OTHCHARColumn {
                get {
                    return this.columnOTHCHAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EORDTYPEColumn {
                get {
                    return this.columnEORDTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INVDESCColumn {
                get {
                    return this.columnINVDESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VNOColumn {
                get {
                    return this.columnVNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTWORDSBEDColumn {
                get {
                    return this.columnAMTWORDSBED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BFREIGHTColumn {
                get {
                    return this.columnBFREIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BDISCOUNTColumn {
                get {
                    return this.columnBDISCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FTAXColumn {
                get {
                    return this.columnFTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TOTACCESAMOUNTColumn {
                get {
                    return this.columnTOTACCESAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BDRUMSColumn {
                get {
                    return this.columnBDRUMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BTOTQTYColumn {
                get {
                    return this.columnBTOTQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BTOTAMTColumn {
                get {
                    return this.columnBTOTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BTOTACCAMTColumn {
                get {
                    return this.columnBTOTACCAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BEDTRCHColumn {
                get {
                    return this.columnBEDTRCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BEDTRAMTColumn {
                get {
                    return this.columnBEDTRAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BTOTPORLAMTColumn {
                get {
                    return this.columnBTOTPORLAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SERNOColumn {
                get {
                    return this.columnSERNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DEPORECFLAGColumn {
                get {
                    return this.columnDEPORECFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FCFLAGColumn {
                get {
                    return this.columnFCFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMMCODEColumn {
                get {
                    return this.columnCOMMCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTWORDSColumn {
                get {
                    return this.columnAMTWORDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MCHELLANColumn {
                get {
                    return this.columnMCHELLAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SCHELLANColumn {
                get {
                    return this.columnSCHELLAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SCHALL2Column {
                get {
                    return this.columnSCHALL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BEDAMTWColumn {
                get {
                    return this.columnBEDAMTW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSITLOCIDColumn {
                get {
                    return this.columnTRANSITLOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CSGNPARTYIDColumn {
                get {
                    return this.columnCSGNPARTYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PDOCIDColumn {
                get {
                    return this.columnPDOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXSTATUSColumn {
                get {
                    return this.columnEXSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn STAXPERColumn {
                get {
                    return this.columnSTAXPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADSCHEMEColumn {
                get {
                    return this.columnADSCHEME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYMASTIDColumn {
                get {
                    return this.columnPARTYMASTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SUBDITEMMIDColumn {
                get {
                    return this.columnSUBDITEMMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SUBDLOCIDColumn {
                get {
                    return this.columnSUBDLOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SUBDRATEColumn {
                get {
                    return this.columnSUBDRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOCDETAILSIDColumn {
                get {
                    return this.columnLOCDETAILSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BSGSTColumn {
                get {
                    return this.columnBSGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BCGSTColumn {
                get {
                    return this.columnBCGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BIGSTColumn {
                get {
                    return this.columnBIGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSPColumn {
                get {
                    return this.columnTRANSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSMODEColumn {
                get {
                    return this.columnTRANSMODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CUSTPOColumn {
                get {
                    return this.columnCUSTPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ROFFColumn {
                get {
                    return this.columnROFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TCSColumn {
                get {
                    return this.columnTCS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LUTNOColumn {
                get {
                    return this.columnLUTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LUTDTColumn {
                get {
                    return this.columnLUTDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SEZColumn {
                get {
                    return this.columnSEZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BTCSColumn {
                get {
                    return this.columnBTCS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALVALColumn {
                get {
                    return this.columnSALVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GSTNOColumn {
                get {
                    return this.columnGSTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PANNOColumn {
                get {
                    return this.columnPANNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TDISTColumn {
                get {
                    return this.columnTDIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSCHGSPColumn {
                get {
                    return this.columnTRANSCHGSP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RECVALColumn {
                get {
                    return this.columnRECVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTYGROUPColumn {
                get {
                    return this.columnPARTYGROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALLIMITColumn {
                get {
                    return this.columnSALLIMIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ASALVALColumn {
                get {
                    return this.columnASALVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BSPLRATEColumn {
                get {
                    return this.columnBSPLRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATECODEColumn {
                get {
                    return this.columnRATECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CRATECODEColumn {
                get {
                    return this.columnCRATECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADDTColumn {
                get {
                    return this.columnADDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SAVECTRLColumn {
                get {
                    return this.columnSAVECTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LIMITQColumn {
                get {
                    return this.columnLIMITQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSPORTColumn {
                get {
                    return this.columnTRANSPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TRANSPORTGSTColumn {
                get {
                    return this.columnTRANSPORTGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICRow this[int index] {
                get {
                    return ((EXINVBASICRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVBASICRowChangeEventHandler EXINVBASICRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVBASICRowChangeEventHandler EXINVBASICRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVBASICRowChangeEventHandler EXINVBASICRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EXINVBASICRowChangeEventHandler EXINVBASICRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddEXINVBASICRow(EXINVBASICRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICRow AddEXINVBASICRow(
                        decimal EXINVBASICID, 
                        string PROFITDOC, 
                        decimal APPROVAL, 
                        string APPROVALSTATUS, 
                        short MAXAPPROVED, 
                        string CANCEL, 
                        decimal T1SOURCEID, 
                        decimal LATEMPLATEID, 
                        decimal BRANCHID, 
                        string VTYPE, 
                        string DOCID, 
                        System.DateTime DOCDATE, 
                        string REFNO, 
                        System.DateTime REFDATE, 
                        decimal MAINCURRENCY, 
                        string SYMBOL, 
                        decimal EXRATE, 
                        decimal PARTYID, 
                        string PARTYNAME, 
                        string RECDBY, 
                        string DESPBY, 
                        string INSPBY, 
                        string DOCTHORUGH, 
                        decimal CUSTACC, 
                        decimal TEMPID, 
                        string ADTGMCONTROL, 
                        long RNDOFF, 
                        string MOBILE, 
                        string TYPE, 
                        decimal GROSS, 
                        decimal NET, 
                        string NARRATION, 
                        decimal LOCID, 
                        decimal CREDITLIMIT, 
                        decimal TRANSLIMIT, 
                        decimal PARTYBALANCE, 
                        long CREDITDAYS, 
                        System.DateTime DUEDATE, 
                        double FBED, 
                        double FCESS, 
                        double FHSE, 
                        string INVTYPE, 
                        string BINYN, 
                        float PACKRND, 
                        float OTHCHAR, 
                        string EORDTYPE, 
                        string INVDESC, 
                        string VNO, 
                        string AMTWORDSBED, 
                        decimal BFREIGHT, 
                        decimal BDISCOUNT, 
                        double FTAX, 
                        decimal TOTACCESAMOUNT, 
                        long BDRUMS, 
                        decimal BTOTQTY, 
                        decimal BTOTAMT, 
                        decimal BTOTACCAMT, 
                        float BEDTRCH, 
                        decimal BEDTRAMT, 
                        decimal BTOTPORLAMT, 
                        string SERNO, 
                        short DEPORECFLAG, 
                        int FCFLAG, 
                        string COMMCODE, 
                        string AMTWORDS, 
                        string MCHELLAN, 
                        string SCHELLAN, 
                        string SCHALL2, 
                        string BEDAMTW, 
                        decimal TRANSITLOCID, 
                        decimal CSGNPARTYID, 
                        string PDOCID, 
                        short EXSTATUS, 
                        float STAXPER, 
                        decimal ADSCHEME, 
                        long PARTYMASTID, 
                        long SUBDITEMMID, 
                        string SUBDLOCID, 
                        float SUBDRATE, 
                        decimal LOCDETAILSID, 
                        double BSGST, 
                        double BCGST, 
                        double BIGST, 
                        decimal TRANSP, 
                        string TRANSMODE, 
                        string CUSTPO, 
                        float ROFF, 
                        double TCS, 
                        string LUTNO, 
                        System.DateTime LUTDT, 
                        string SEZ, 
                        double BTCS, 
                        double SALVAL, 
                        string GSTNO, 
                        string PANNO, 
                        double TDIST, 
                        string TRANSCHGSP, 
                        double RECVAL, 
                        string PARTYGROUP, 
                        double SALLIMIT, 
                        double ASALVAL, 
                        string BSPLRATE, 
                        string RATECODE, 
                        string CRATECODE, 
                        double ADDT, 
                        string SAVECTRL, 
                        double LIMITQ, 
                        string ADDRESS, 
                        string TRANSPORT, 
                        string TRANSPORTGST, 
                        string STATE) {
                EXINVBASICRow rowEXINVBASICRow = ((EXINVBASICRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EXINVBASICID,
                        PROFITDOC,
                        APPROVAL,
                        APPROVALSTATUS,
                        MAXAPPROVED,
                        CANCEL,
                        T1SOURCEID,
                        LATEMPLATEID,
                        BRANCHID,
                        VTYPE,
                        DOCID,
                        DOCDATE,
                        REFNO,
                        REFDATE,
                        MAINCURRENCY,
                        SYMBOL,
                        EXRATE,
                        PARTYID,
                        PARTYNAME,
                        RECDBY,
                        DESPBY,
                        INSPBY,
                        DOCTHORUGH,
                        CUSTACC,
                        TEMPID,
                        ADTGMCONTROL,
                        RNDOFF,
                        MOBILE,
                        TYPE,
                        GROSS,
                        NET,
                        NARRATION,
                        LOCID,
                        CREDITLIMIT,
                        TRANSLIMIT,
                        PARTYBALANCE,
                        CREDITDAYS,
                        DUEDATE,
                        FBED,
                        FCESS,
                        FHSE,
                        INVTYPE,
                        BINYN,
                        PACKRND,
                        OTHCHAR,
                        EORDTYPE,
                        INVDESC,
                        VNO,
                        AMTWORDSBED,
                        BFREIGHT,
                        BDISCOUNT,
                        FTAX,
                        TOTACCESAMOUNT,
                        BDRUMS,
                        BTOTQTY,
                        BTOTAMT,
                        BTOTACCAMT,
                        BEDTRCH,
                        BEDTRAMT,
                        BTOTPORLAMT,
                        SERNO,
                        DEPORECFLAG,
                        FCFLAG,
                        COMMCODE,
                        AMTWORDS,
                        MCHELLAN,
                        SCHELLAN,
                        SCHALL2,
                        BEDAMTW,
                        TRANSITLOCID,
                        CSGNPARTYID,
                        PDOCID,
                        EXSTATUS,
                        STAXPER,
                        ADSCHEME,
                        PARTYMASTID,
                        SUBDITEMMID,
                        SUBDLOCID,
                        SUBDRATE,
                        LOCDETAILSID,
                        BSGST,
                        BCGST,
                        BIGST,
                        TRANSP,
                        TRANSMODE,
                        CUSTPO,
                        ROFF,
                        TCS,
                        LUTNO,
                        LUTDT,
                        SEZ,
                        BTCS,
                        SALVAL,
                        GSTNO,
                        PANNO,
                        TDIST,
                        TRANSCHGSP,
                        RECVAL,
                        PARTYGROUP,
                        SALLIMIT,
                        ASALVAL,
                        BSPLRATE,
                        RATECODE,
                        CRATECODE,
                        ADDT,
                        SAVECTRL,
                        LIMITQ,
                        ADDRESS,
                        TRANSPORT,
                        TRANSPORTGST,
                        STATE};
                rowEXINVBASICRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXINVBASICRow);
                return rowEXINVBASICRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICRow FindByEXINVBASICID(decimal EXINVBASICID) {
                return ((EXINVBASICRow)(this.Rows.Find(new object[] {
                            EXINVBASICID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EXINVBASICDataTable cln = ((EXINVBASICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXINVBASICDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnEXINVBASICID = base.Columns["EXINVBASICID"];
                this.columnPROFITDOC = base.Columns["PROFITDOC"];
                this.columnAPPROVAL = base.Columns["APPROVAL"];
                this.columnAPPROVALSTATUS = base.Columns["APPROVALSTATUS"];
                this.columnMAXAPPROVED = base.Columns["MAXAPPROVED"];
                this.columnCANCEL = base.Columns["CANCEL"];
                this.columnT1SOURCEID = base.Columns["T1SOURCEID"];
                this.columnLATEMPLATEID = base.Columns["LATEMPLATEID"];
                this.columnBRANCHID = base.Columns["BRANCHID"];
                this.columnVTYPE = base.Columns["VTYPE"];
                this.columnDOCID = base.Columns["DOCID"];
                this.columnDOCDATE = base.Columns["DOCDATE"];
                this.columnREFNO = base.Columns["REFNO"];
                this.columnREFDATE = base.Columns["REFDATE"];
                this.columnMAINCURRENCY = base.Columns["MAINCURRENCY"];
                this.columnSYMBOL = base.Columns["SYMBOL"];
                this.columnEXRATE = base.Columns["EXRATE"];
                this.columnPARTYID = base.Columns["PARTYID"];
                this.columnPARTYNAME = base.Columns["PARTYNAME"];
                this.columnRECDBY = base.Columns["RECDBY"];
                this.columnDESPBY = base.Columns["DESPBY"];
                this.columnINSPBY = base.Columns["INSPBY"];
                this.columnDOCTHORUGH = base.Columns["DOCTHORUGH"];
                this.columnCUSTACC = base.Columns["CUSTACC"];
                this.columnTEMPID = base.Columns["TEMPID"];
                this.columnADTGMCONTROL = base.Columns["ADTGMCONTROL"];
                this.columnRNDOFF = base.Columns["RNDOFF"];
                this.columnMOBILE = base.Columns["MOBILE"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnGROSS = base.Columns["GROSS"];
                this.columnNET = base.Columns["NET"];
                this.columnNARRATION = base.Columns["NARRATION"];
                this.columnLOCID = base.Columns["LOCID"];
                this.columnCREDITLIMIT = base.Columns["CREDITLIMIT"];
                this.columnTRANSLIMIT = base.Columns["TRANSLIMIT"];
                this.columnPARTYBALANCE = base.Columns["PARTYBALANCE"];
                this.columnCREDITDAYS = base.Columns["CREDITDAYS"];
                this.columnDUEDATE = base.Columns["DUEDATE"];
                this.columnFBED = base.Columns["FBED"];
                this.columnFCESS = base.Columns["FCESS"];
                this.columnFHSE = base.Columns["FHSE"];
                this.columnINVTYPE = base.Columns["INVTYPE"];
                this.columnBINYN = base.Columns["BINYN"];
                this.columnPACKRND = base.Columns["PACKRND"];
                this.columnOTHCHAR = base.Columns["OTHCHAR"];
                this.columnEORDTYPE = base.Columns["EORDTYPE"];
                this.columnINVDESC = base.Columns["INVDESC"];
                this.columnVNO = base.Columns["VNO"];
                this.columnAMTWORDSBED = base.Columns["AMTWORDSBED"];
                this.columnBFREIGHT = base.Columns["BFREIGHT"];
                this.columnBDISCOUNT = base.Columns["BDISCOUNT"];
                this.columnFTAX = base.Columns["FTAX"];
                this.columnTOTACCESAMOUNT = base.Columns["TOTACCESAMOUNT"];
                this.columnBDRUMS = base.Columns["BDRUMS"];
                this.columnBTOTQTY = base.Columns["BTOTQTY"];
                this.columnBTOTAMT = base.Columns["BTOTAMT"];
                this.columnBTOTACCAMT = base.Columns["BTOTACCAMT"];
                this.columnBEDTRCH = base.Columns["BEDTRCH"];
                this.columnBEDTRAMT = base.Columns["BEDTRAMT"];
                this.columnBTOTPORLAMT = base.Columns["BTOTPORLAMT"];
                this.columnSERNO = base.Columns["SERNO"];
                this.columnDEPORECFLAG = base.Columns["DEPORECFLAG"];
                this.columnFCFLAG = base.Columns["FCFLAG"];
                this.columnCOMMCODE = base.Columns["COMMCODE"];
                this.columnAMTWORDS = base.Columns["AMTWORDS"];
                this.columnMCHELLAN = base.Columns["MCHELLAN"];
                this.columnSCHELLAN = base.Columns["SCHELLAN"];
                this.columnSCHALL2 = base.Columns["SCHALL2"];
                this.columnBEDAMTW = base.Columns["BEDAMTW"];
                this.columnTRANSITLOCID = base.Columns["TRANSITLOCID"];
                this.columnCSGNPARTYID = base.Columns["CSGNPARTYID"];
                this.columnPDOCID = base.Columns["PDOCID"];
                this.columnEXSTATUS = base.Columns["EXSTATUS"];
                this.columnSTAXPER = base.Columns["STAXPER"];
                this.columnADSCHEME = base.Columns["ADSCHEME"];
                this.columnPARTYMASTID = base.Columns["PARTYMASTID"];
                this.columnSUBDITEMMID = base.Columns["SUBDITEMMID"];
                this.columnSUBDLOCID = base.Columns["SUBDLOCID"];
                this.columnSUBDRATE = base.Columns["SUBDRATE"];
                this.columnLOCDETAILSID = base.Columns["LOCDETAILSID"];
                this.columnBSGST = base.Columns["BSGST"];
                this.columnBCGST = base.Columns["BCGST"];
                this.columnBIGST = base.Columns["BIGST"];
                this.columnTRANSP = base.Columns["TRANSP"];
                this.columnTRANSMODE = base.Columns["TRANSMODE"];
                this.columnCUSTPO = base.Columns["CUSTPO"];
                this.columnROFF = base.Columns["ROFF"];
                this.columnTCS = base.Columns["TCS"];
                this.columnLUTNO = base.Columns["LUTNO"];
                this.columnLUTDT = base.Columns["LUTDT"];
                this.columnSEZ = base.Columns["SEZ"];
                this.columnBTCS = base.Columns["BTCS"];
                this.columnSALVAL = base.Columns["SALVAL"];
                this.columnGSTNO = base.Columns["GSTNO"];
                this.columnPANNO = base.Columns["PANNO"];
                this.columnTDIST = base.Columns["TDIST"];
                this.columnTRANSCHGSP = base.Columns["TRANSCHGSP"];
                this.columnRECVAL = base.Columns["RECVAL"];
                this.columnPARTYGROUP = base.Columns["PARTYGROUP"];
                this.columnSALLIMIT = base.Columns["SALLIMIT"];
                this.columnASALVAL = base.Columns["ASALVAL"];
                this.columnBSPLRATE = base.Columns["BSPLRATE"];
                this.columnRATECODE = base.Columns["RATECODE"];
                this.columnCRATECODE = base.Columns["CRATECODE"];
                this.columnADDT = base.Columns["ADDT"];
                this.columnSAVECTRL = base.Columns["SAVECTRL"];
                this.columnLIMITQ = base.Columns["LIMITQ"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnTRANSPORT = base.Columns["TRANSPORT"];
                this.columnTRANSPORTGST = base.Columns["TRANSPORTGST"];
                this.columnSTATE = base.Columns["STATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnEXINVBASICID = new global::System.Data.DataColumn("EXINVBASICID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXINVBASICID);
                this.columnPROFITDOC = new global::System.Data.DataColumn("PROFITDOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFITDOC);
                this.columnAPPROVAL = new global::System.Data.DataColumn("APPROVAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVAL);
                this.columnAPPROVALSTATUS = new global::System.Data.DataColumn("APPROVALSTATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVALSTATUS);
                this.columnMAXAPPROVED = new global::System.Data.DataColumn("MAXAPPROVED", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXAPPROVED);
                this.columnCANCEL = new global::System.Data.DataColumn("CANCEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCEL);
                this.columnT1SOURCEID = new global::System.Data.DataColumn("T1SOURCEID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT1SOURCEID);
                this.columnLATEMPLATEID = new global::System.Data.DataColumn("LATEMPLATEID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATEMPLATEID);
                this.columnBRANCHID = new global::System.Data.DataColumn("BRANCHID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRANCHID);
                this.columnVTYPE = new global::System.Data.DataColumn("VTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVTYPE);
                this.columnDOCID = new global::System.Data.DataColumn("DOCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCID);
                this.columnDOCDATE = new global::System.Data.DataColumn("DOCDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCDATE);
                this.columnREFNO = new global::System.Data.DataColumn("REFNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFNO);
                this.columnREFDATE = new global::System.Data.DataColumn("REFDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFDATE);
                this.columnMAINCURRENCY = new global::System.Data.DataColumn("MAINCURRENCY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAINCURRENCY);
                this.columnSYMBOL = new global::System.Data.DataColumn("SYMBOL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYMBOL);
                this.columnEXRATE = new global::System.Data.DataColumn("EXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXRATE);
                this.columnPARTYID = new global::System.Data.DataColumn("PARTYID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYID);
                this.columnPARTYNAME = new global::System.Data.DataColumn("PARTYNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYNAME);
                this.columnRECDBY = new global::System.Data.DataColumn("RECDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECDBY);
                this.columnDESPBY = new global::System.Data.DataColumn("DESPBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESPBY);
                this.columnINSPBY = new global::System.Data.DataColumn("INSPBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSPBY);
                this.columnDOCTHORUGH = new global::System.Data.DataColumn("DOCTHORUGH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCTHORUGH);
                this.columnCUSTACC = new global::System.Data.DataColumn("CUSTACC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTACC);
                this.columnTEMPID = new global::System.Data.DataColumn("TEMPID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMPID);
                this.columnADTGMCONTROL = new global::System.Data.DataColumn("ADTGMCONTROL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADTGMCONTROL);
                this.columnRNDOFF = new global::System.Data.DataColumn("RNDOFF", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNDOFF);
                this.columnMOBILE = new global::System.Data.DataColumn("MOBILE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOBILE);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnGROSS = new global::System.Data.DataColumn("GROSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSS);
                this.columnNET = new global::System.Data.DataColumn("NET", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNET);
                this.columnNARRATION = new global::System.Data.DataColumn("NARRATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNARRATION);
                this.columnLOCID = new global::System.Data.DataColumn("LOCID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCID);
                this.columnCREDITLIMIT = new global::System.Data.DataColumn("CREDITLIMIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREDITLIMIT);
                this.columnTRANSLIMIT = new global::System.Data.DataColumn("TRANSLIMIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSLIMIT);
                this.columnPARTYBALANCE = new global::System.Data.DataColumn("PARTYBALANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYBALANCE);
                this.columnCREDITDAYS = new global::System.Data.DataColumn("CREDITDAYS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREDITDAYS);
                this.columnDUEDATE = new global::System.Data.DataColumn("DUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEDATE);
                this.columnFBED = new global::System.Data.DataColumn("FBED", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBED);
                this.columnFCESS = new global::System.Data.DataColumn("FCESS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCESS);
                this.columnFHSE = new global::System.Data.DataColumn("FHSE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFHSE);
                this.columnINVTYPE = new global::System.Data.DataColumn("INVTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVTYPE);
                this.columnBINYN = new global::System.Data.DataColumn("BINYN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBINYN);
                this.columnPACKRND = new global::System.Data.DataColumn("PACKRND", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKRND);
                this.columnOTHCHAR = new global::System.Data.DataColumn("OTHCHAR", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHCHAR);
                this.columnEORDTYPE = new global::System.Data.DataColumn("EORDTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEORDTYPE);
                this.columnINVDESC = new global::System.Data.DataColumn("INVDESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVDESC);
                this.columnVNO = new global::System.Data.DataColumn("VNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVNO);
                this.columnAMTWORDSBED = new global::System.Data.DataColumn("AMTWORDSBED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTWORDSBED);
                this.columnBFREIGHT = new global::System.Data.DataColumn("BFREIGHT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBFREIGHT);
                this.columnBDISCOUNT = new global::System.Data.DataColumn("BDISCOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBDISCOUNT);
                this.columnFTAX = new global::System.Data.DataColumn("FTAX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTAX);
                this.columnTOTACCESAMOUNT = new global::System.Data.DataColumn("TOTACCESAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTACCESAMOUNT);
                this.columnBDRUMS = new global::System.Data.DataColumn("BDRUMS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBDRUMS);
                this.columnBTOTQTY = new global::System.Data.DataColumn("BTOTQTY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTOTQTY);
                this.columnBTOTAMT = new global::System.Data.DataColumn("BTOTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTOTAMT);
                this.columnBTOTACCAMT = new global::System.Data.DataColumn("BTOTACCAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTOTACCAMT);
                this.columnBEDTRCH = new global::System.Data.DataColumn("BEDTRCH", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEDTRCH);
                this.columnBEDTRAMT = new global::System.Data.DataColumn("BEDTRAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEDTRAMT);
                this.columnBTOTPORLAMT = new global::System.Data.DataColumn("BTOTPORLAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTOTPORLAMT);
                this.columnSERNO = new global::System.Data.DataColumn("SERNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERNO);
                this.columnDEPORECFLAG = new global::System.Data.DataColumn("DEPORECFLAG", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPORECFLAG);
                this.columnFCFLAG = new global::System.Data.DataColumn("FCFLAG", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCFLAG);
                this.columnCOMMCODE = new global::System.Data.DataColumn("COMMCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMCODE);
                this.columnAMTWORDS = new global::System.Data.DataColumn("AMTWORDS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTWORDS);
                this.columnMCHELLAN = new global::System.Data.DataColumn("MCHELLAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMCHELLAN);
                this.columnSCHELLAN = new global::System.Data.DataColumn("SCHELLAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHELLAN);
                this.columnSCHALL2 = new global::System.Data.DataColumn("SCHALL2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHALL2);
                this.columnBEDAMTW = new global::System.Data.DataColumn("BEDAMTW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEDAMTW);
                this.columnTRANSITLOCID = new global::System.Data.DataColumn("TRANSITLOCID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSITLOCID);
                this.columnCSGNPARTYID = new global::System.Data.DataColumn("CSGNPARTYID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSGNPARTYID);
                this.columnPDOCID = new global::System.Data.DataColumn("PDOCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPDOCID);
                this.columnEXSTATUS = new global::System.Data.DataColumn("EXSTATUS", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXSTATUS);
                this.columnSTAXPER = new global::System.Data.DataColumn("STAXPER", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTAXPER);
                this.columnADSCHEME = new global::System.Data.DataColumn("ADSCHEME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADSCHEME);
                this.columnPARTYMASTID = new global::System.Data.DataColumn("PARTYMASTID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYMASTID);
                this.columnSUBDITEMMID = new global::System.Data.DataColumn("SUBDITEMMID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBDITEMMID);
                this.columnSUBDLOCID = new global::System.Data.DataColumn("SUBDLOCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBDLOCID);
                this.columnSUBDRATE = new global::System.Data.DataColumn("SUBDRATE", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBDRATE);
                this.columnLOCDETAILSID = new global::System.Data.DataColumn("LOCDETAILSID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCDETAILSID);
                this.columnBSGST = new global::System.Data.DataColumn("BSGST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBSGST);
                this.columnBCGST = new global::System.Data.DataColumn("BCGST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCGST);
                this.columnBIGST = new global::System.Data.DataColumn("BIGST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIGST);
                this.columnTRANSP = new global::System.Data.DataColumn("TRANSP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSP);
                this.columnTRANSMODE = new global::System.Data.DataColumn("TRANSMODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSMODE);
                this.columnCUSTPO = new global::System.Data.DataColumn("CUSTPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTPO);
                this.columnROFF = new global::System.Data.DataColumn("ROFF", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROFF);
                this.columnTCS = new global::System.Data.DataColumn("TCS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCS);
                this.columnLUTNO = new global::System.Data.DataColumn("LUTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUTNO);
                this.columnLUTDT = new global::System.Data.DataColumn("LUTDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUTDT);
                this.columnSEZ = new global::System.Data.DataColumn("SEZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEZ);
                this.columnBTCS = new global::System.Data.DataColumn("BTCS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTCS);
                this.columnSALVAL = new global::System.Data.DataColumn("SALVAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALVAL);
                this.columnGSTNO = new global::System.Data.DataColumn("GSTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSTNO);
                this.columnPANNO = new global::System.Data.DataColumn("PANNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPANNO);
                this.columnTDIST = new global::System.Data.DataColumn("TDIST", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTDIST);
                this.columnTRANSCHGSP = new global::System.Data.DataColumn("TRANSCHGSP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSCHGSP);
                this.columnRECVAL = new global::System.Data.DataColumn("RECVAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECVAL);
                this.columnPARTYGROUP = new global::System.Data.DataColumn("PARTYGROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTYGROUP);
                this.columnSALLIMIT = new global::System.Data.DataColumn("SALLIMIT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALLIMIT);
                this.columnASALVAL = new global::System.Data.DataColumn("ASALVAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASALVAL);
                this.columnBSPLRATE = new global::System.Data.DataColumn("BSPLRATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBSPLRATE);
                this.columnRATECODE = new global::System.Data.DataColumn("RATECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATECODE);
                this.columnCRATECODE = new global::System.Data.DataColumn("CRATECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRATECODE);
                this.columnADDT = new global::System.Data.DataColumn("ADDT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDT);
                this.columnSAVECTRL = new global::System.Data.DataColumn("SAVECTRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAVECTRL);
                this.columnLIMITQ = new global::System.Data.DataColumn("LIMITQ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIMITQ);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnTRANSPORT = new global::System.Data.DataColumn("TRANSPORT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSPORT);
                this.columnTRANSPORTGST = new global::System.Data.DataColumn("TRANSPORTGST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANSPORTGST);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEXINVBASICID}, true));
                this.columnEXINVBASICID.AllowDBNull = false;
                this.columnEXINVBASICID.Unique = true;
                this.columnPROFITDOC.MaxLength = 1;
                this.columnAPPROVALSTATUS.MaxLength = 1;
                this.columnCANCEL.MaxLength = 1;
                this.columnVTYPE.MaxLength = 1;
                this.columnDOCID.MaxLength = 10;
                this.columnREFNO.MaxLength = 35;
                this.columnSYMBOL.MaxLength = 10;
                this.columnPARTYNAME.MaxLength = 50;
                this.columnRECDBY.MaxLength = 20;
                this.columnDESPBY.MaxLength = 25;
                this.columnINSPBY.MaxLength = 30;
                this.columnDOCTHORUGH.MaxLength = 25;
                this.columnADTGMCONTROL.MaxLength = 1;
                this.columnMOBILE.MaxLength = 15;
                this.columnTYPE.MaxLength = 50;
                this.columnNARRATION.MaxLength = 150;
                this.columnINVTYPE.MaxLength = 30;
                this.columnBINYN.MaxLength = 3;
                this.columnEORDTYPE.MaxLength = 10;
                this.columnINVDESC.MaxLength = 150;
                this.columnVNO.MaxLength = 30;
                this.columnAMTWORDSBED.MaxLength = 100;
                this.columnSERNO.MaxLength = 30;
                this.columnCOMMCODE.MaxLength = 30;
                this.columnAMTWORDS.MaxLength = 150;
                this.columnMCHELLAN.MaxLength = 75;
                this.columnSCHELLAN.MaxLength = 250;
                this.columnSCHALL2.MaxLength = 250;
                this.columnBEDAMTW.MaxLength = 150;
                this.columnPDOCID.MaxLength = 10;
                this.columnSUBDLOCID.MaxLength = 16;
                this.columnTRANSMODE.MaxLength = 10;
                this.columnCUSTPO.MaxLength = 35;
                this.columnLUTNO.MaxLength = 20;
                this.columnSEZ.MaxLength = 150;
                this.columnGSTNO.MaxLength = 20;
                this.columnPANNO.MaxLength = 15;
                this.columnTRANSCHGSP.MaxLength = 10;
                this.columnPARTYGROUP.MaxLength = 20;
                this.columnBSPLRATE.MaxLength = 3;
                this.columnRATECODE.MaxLength = 15;
                this.columnCRATECODE.MaxLength = 15;
                this.columnSAVECTRL.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICRow NewEXINVBASICRow() {
                return ((EXINVBASICRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXINVBASICRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EXINVBASICRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXINVBASICRowChanged != null)) {
                    this.EXINVBASICRowChanged(this, new EXINVBASICRowChangeEvent(((EXINVBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXINVBASICRowChanging != null)) {
                    this.EXINVBASICRowChanging(this, new EXINVBASICRowChangeEvent(((EXINVBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXINVBASICRowDeleted != null)) {
                    this.EXINVBASICRowDeleted(this, new EXINVBASICRowChangeEvent(((EXINVBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXINVBASICRowDeleting != null)) {
                    this.EXINVBASICRowDeleting(this, new EXINVBASICRowChangeEvent(((EXINVBASICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveEXINVBASICRow(EXINVBASICRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Exinvbasic ds = new Exinvbasic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXINVBASICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EXINVBASICRow : global::System.Data.DataRow {
            
            private EXINVBASICDataTable tableEXINVBASIC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EXINVBASICRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXINVBASIC = ((EXINVBASICDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXINVBASICID {
                get {
                    return ((decimal)(this[this.tableEXINVBASIC.EXINVBASICIDColumn]));
                }
                set {
                    this[this.tableEXINVBASIC.EXINVBASICIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PROFITDOC {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.PROFITDOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFITDOC\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PROFITDOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal APPROVAL {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.APPROVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPROVAL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.APPROVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string APPROVALSTATUS {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.APPROVALSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APPROVALSTATUS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.APPROVALSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short MAXAPPROVED {
                get {
                    try {
                        return ((short)(this[this.tableEXINVBASIC.MAXAPPROVEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXAPPROVED\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.MAXAPPROVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CANCEL {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.CANCELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CANCEL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CANCELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal T1SOURCEID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.T1SOURCEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'T1SOURCEID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.T1SOURCEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LATEMPLATEID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.LATEMPLATEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LATEMPLATEID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.LATEMPLATEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BRANCHID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BRANCHIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BRANCHID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BRANCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VTYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.VTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VTYPE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.VTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DOCID {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.DOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.DOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DOCDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEXINVBASIC.DOCDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCDATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.DOCDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string REFNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.REFNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFNO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.REFNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime REFDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEXINVBASIC.REFDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REFDATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.REFDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MAINCURRENCY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.MAINCURRENCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAINCURRENCY\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.MAINCURRENCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SYMBOL {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SYMBOLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYMBOL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SYMBOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.EXRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXRATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.EXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PARTYID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.PARTYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PARTYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PARTYNAME {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.PARTYNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYNAME\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PARTYNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RECDBY {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.RECDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECDBY\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.RECDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DESPBY {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.DESPBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESPBY\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.DESPBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSPBY {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.INSPBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSPBY\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.INSPBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DOCTHORUGH {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.DOCTHORUGHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCTHORUGH\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.DOCTHORUGHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CUSTACC {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.CUSTACCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTACC\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CUSTACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TEMPID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.TEMPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEMPID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TEMPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ADTGMCONTROL {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.ADTGMCONTROLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADTGMCONTROL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.ADTGMCONTROLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long RNDOFF {
                get {
                    try {
                        return ((long)(this[this.tableEXINVBASIC.RNDOFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNDOFF\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.RNDOFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MOBILE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.MOBILEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOBILE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.MOBILEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GROSS {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.GROSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GROSS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.GROSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NET {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.NETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NET\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.NETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NARRATION {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.NARRATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NARRATION\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.NARRATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LOCID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.LOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.LOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CREDITLIMIT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.CREDITLIMITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREDITLIMIT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CREDITLIMITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TRANSLIMIT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.TRANSLIMITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSLIMIT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSLIMITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PARTYBALANCE {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.PARTYBALANCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYBALANCE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PARTYBALANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long CREDITDAYS {
                get {
                    try {
                        return ((long)(this[this.tableEXINVBASIC.CREDITDAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CREDITDAYS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CREDITDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEXINVBASIC.DUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEDATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.DUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FBED {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.FBEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FBED\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.FBEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FCESS {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.FCESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCESS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.FCESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FHSE {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.FHSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FHSE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.FHSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INVTYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.INVTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVTYPE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.INVTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BINYN {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.BINYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BINYN\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BINYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float PACKRND {
                get {
                    try {
                        return ((float)(this[this.tableEXINVBASIC.PACKRNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PACKRND\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PACKRNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float OTHCHAR {
                get {
                    try {
                        return ((float)(this[this.tableEXINVBASIC.OTHCHARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OTHCHAR\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.OTHCHARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EORDTYPE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.EORDTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EORDTYPE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.EORDTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INVDESC {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.INVDESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVDESC\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.INVDESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string VNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.VNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VNO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.VNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AMTWORDSBED {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.AMTWORDSBEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMTWORDSBED\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.AMTWORDSBEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BFREIGHT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BFREIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BFREIGHT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BFREIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BDISCOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BDISCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BDISCOUNT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BDISCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FTAX {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.FTAXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FTAX\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.FTAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TOTACCESAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.TOTACCESAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTACCESAMOUNT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TOTACCESAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long BDRUMS {
                get {
                    try {
                        return ((long)(this[this.tableEXINVBASIC.BDRUMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BDRUMS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BDRUMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BTOTQTY {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BTOTQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BTOTQTY\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BTOTQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BTOTAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BTOTAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BTOTAMT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BTOTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BTOTACCAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BTOTACCAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BTOTACCAMT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BTOTACCAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float BEDTRCH {
                get {
                    try {
                        return ((float)(this[this.tableEXINVBASIC.BEDTRCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEDTRCH\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BEDTRCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BEDTRAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BEDTRAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEDTRAMT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BEDTRAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BTOTPORLAMT {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.BTOTPORLAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BTOTPORLAMT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BTOTPORLAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SERNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SERNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERNO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SERNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short DEPORECFLAG {
                get {
                    try {
                        return ((short)(this[this.tableEXINVBASIC.DEPORECFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DEPORECFLAG\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.DEPORECFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int FCFLAG {
                get {
                    try {
                        return ((int)(this[this.tableEXINVBASIC.FCFLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FCFLAG\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.FCFLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string COMMCODE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.COMMCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COMMCODE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.COMMCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AMTWORDS {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.AMTWORDSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMTWORDS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.AMTWORDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MCHELLAN {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.MCHELLANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MCHELLAN\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.MCHELLANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SCHELLAN {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SCHELLANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHELLAN\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SCHELLANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SCHALL2 {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SCHALL2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHALL2\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SCHALL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BEDAMTW {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.BEDAMTWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BEDAMTW\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BEDAMTWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TRANSITLOCID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.TRANSITLOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSITLOCID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSITLOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CSGNPARTYID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.CSGNPARTYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSGNPARTYID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CSGNPARTYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PDOCID {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.PDOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PDOCID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PDOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short EXSTATUS {
                get {
                    try {
                        return ((short)(this[this.tableEXINVBASIC.EXSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXSTATUS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.EXSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float STAXPER {
                get {
                    try {
                        return ((float)(this[this.tableEXINVBASIC.STAXPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STAXPER\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.STAXPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ADSCHEME {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.ADSCHEMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADSCHEME\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.ADSCHEMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long PARTYMASTID {
                get {
                    try {
                        return ((long)(this[this.tableEXINVBASIC.PARTYMASTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYMASTID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PARTYMASTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long SUBDITEMMID {
                get {
                    try {
                        return ((long)(this[this.tableEXINVBASIC.SUBDITEMMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBDITEMMID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SUBDITEMMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SUBDLOCID {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SUBDLOCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBDLOCID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SUBDLOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float SUBDRATE {
                get {
                    try {
                        return ((float)(this[this.tableEXINVBASIC.SUBDRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SUBDRATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SUBDRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LOCDETAILSID {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.LOCDETAILSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCDETAILSID\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.LOCDETAILSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double BSGST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.BSGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BSGST\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BSGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double BCGST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.BCGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BCGST\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BCGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double BIGST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.BIGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIGST\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BIGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TRANSP {
                get {
                    try {
                        return ((decimal)(this[this.tableEXINVBASIC.TRANSPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSP\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRANSMODE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.TRANSMODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSMODE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSMODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CUSTPO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.CUSTPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTPO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CUSTPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float ROFF {
                get {
                    try {
                        return ((float)(this[this.tableEXINVBASIC.ROFFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROFF\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.ROFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TCS {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.TCSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TCSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LUTNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.LUTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LUTNO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.LUTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LUTDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEXINVBASIC.LUTDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LUTDT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.LUTDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SEZ {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SEZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEZ\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SEZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double BTCS {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.BTCSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BTCS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BTCSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double SALVAL {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.SALVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SALVAL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SALVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string GSTNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.GSTNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSTNO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.GSTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PANNO {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.PANNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PANNO\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PANNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TDIST {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.TDISTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TDIST\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TDISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRANSCHGSP {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.TRANSCHGSPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSCHGSP\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSCHGSPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double RECVAL {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.RECVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECVAL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.RECVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PARTYGROUP {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.PARTYGROUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARTYGROUP\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.PARTYGROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double SALLIMIT {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.SALLIMITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SALLIMIT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SALLIMITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ASALVAL {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.ASALVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASALVAL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.ASALVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BSPLRATE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.BSPLRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BSPLRATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.BSPLRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RATECODE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.RATECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RATECODE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.RATECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CRATECODE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.CRATECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CRATECODE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.CRATECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ADDT {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.ADDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.ADDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SAVECTRL {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.SAVECTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAVECTRL\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.SAVECTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double LIMITQ {
                get {
                    try {
                        return ((double)(this[this.tableEXINVBASIC.LIMITQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIMITQ\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.LIMITQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRANSPORT {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.TRANSPORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSPORT\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TRANSPORTGST {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.TRANSPORTGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANSPORTGST\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.TRANSPORTGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string STATE {
                get {
                    try {
                        return ((string)(this[this.tableEXINVBASIC.STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATE\' in table \'EXINVBASIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEXINVBASIC.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPROFITDOCNull() {
                return this.IsNull(this.tableEXINVBASIC.PROFITDOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPROFITDOCNull() {
                this[this.tableEXINVBASIC.PROFITDOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAPPROVALNull() {
                return this.IsNull(this.tableEXINVBASIC.APPROVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAPPROVALNull() {
                this[this.tableEXINVBASIC.APPROVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAPPROVALSTATUSNull() {
                return this.IsNull(this.tableEXINVBASIC.APPROVALSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAPPROVALSTATUSNull() {
                this[this.tableEXINVBASIC.APPROVALSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMAXAPPROVEDNull() {
                return this.IsNull(this.tableEXINVBASIC.MAXAPPROVEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMAXAPPROVEDNull() {
                this[this.tableEXINVBASIC.MAXAPPROVEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCANCELNull() {
                return this.IsNull(this.tableEXINVBASIC.CANCELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCANCELNull() {
                this[this.tableEXINVBASIC.CANCELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsT1SOURCEIDNull() {
                return this.IsNull(this.tableEXINVBASIC.T1SOURCEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetT1SOURCEIDNull() {
                this[this.tableEXINVBASIC.T1SOURCEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLATEMPLATEIDNull() {
                return this.IsNull(this.tableEXINVBASIC.LATEMPLATEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLATEMPLATEIDNull() {
                this[this.tableEXINVBASIC.LATEMPLATEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBRANCHIDNull() {
                return this.IsNull(this.tableEXINVBASIC.BRANCHIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBRANCHIDNull() {
                this[this.tableEXINVBASIC.BRANCHIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVTYPENull() {
                return this.IsNull(this.tableEXINVBASIC.VTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVTYPENull() {
                this[this.tableEXINVBASIC.VTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDOCIDNull() {
                return this.IsNull(this.tableEXINVBASIC.DOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDOCIDNull() {
                this[this.tableEXINVBASIC.DOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDOCDATENull() {
                return this.IsNull(this.tableEXINVBASIC.DOCDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDOCDATENull() {
                this[this.tableEXINVBASIC.DOCDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREFNONull() {
                return this.IsNull(this.tableEXINVBASIC.REFNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREFNONull() {
                this[this.tableEXINVBASIC.REFNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREFDATENull() {
                return this.IsNull(this.tableEXINVBASIC.REFDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREFDATENull() {
                this[this.tableEXINVBASIC.REFDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMAINCURRENCYNull() {
                return this.IsNull(this.tableEXINVBASIC.MAINCURRENCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMAINCURRENCYNull() {
                this[this.tableEXINVBASIC.MAINCURRENCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSYMBOLNull() {
                return this.IsNull(this.tableEXINVBASIC.SYMBOLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSYMBOLNull() {
                this[this.tableEXINVBASIC.SYMBOLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXRATENull() {
                return this.IsNull(this.tableEXINVBASIC.EXRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXRATENull() {
                this[this.tableEXINVBASIC.EXRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYIDNull() {
                return this.IsNull(this.tableEXINVBASIC.PARTYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYIDNull() {
                this[this.tableEXINVBASIC.PARTYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYNAMENull() {
                return this.IsNull(this.tableEXINVBASIC.PARTYNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYNAMENull() {
                this[this.tableEXINVBASIC.PARTYNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRECDBYNull() {
                return this.IsNull(this.tableEXINVBASIC.RECDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRECDBYNull() {
                this[this.tableEXINVBASIC.RECDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDESPBYNull() {
                return this.IsNull(this.tableEXINVBASIC.DESPBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDESPBYNull() {
                this[this.tableEXINVBASIC.DESPBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsINSPBYNull() {
                return this.IsNull(this.tableEXINVBASIC.INSPBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetINSPBYNull() {
                this[this.tableEXINVBASIC.INSPBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDOCTHORUGHNull() {
                return this.IsNull(this.tableEXINVBASIC.DOCTHORUGHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDOCTHORUGHNull() {
                this[this.tableEXINVBASIC.DOCTHORUGHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCUSTACCNull() {
                return this.IsNull(this.tableEXINVBASIC.CUSTACCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCUSTACCNull() {
                this[this.tableEXINVBASIC.CUSTACCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTEMPIDNull() {
                return this.IsNull(this.tableEXINVBASIC.TEMPIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTEMPIDNull() {
                this[this.tableEXINVBASIC.TEMPIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADTGMCONTROLNull() {
                return this.IsNull(this.tableEXINVBASIC.ADTGMCONTROLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADTGMCONTROLNull() {
                this[this.tableEXINVBASIC.ADTGMCONTROLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRNDOFFNull() {
                return this.IsNull(this.tableEXINVBASIC.RNDOFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRNDOFFNull() {
                this[this.tableEXINVBASIC.RNDOFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMOBILENull() {
                return this.IsNull(this.tableEXINVBASIC.MOBILEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMOBILENull() {
                this[this.tableEXINVBASIC.MOBILEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTYPENull() {
                return this.IsNull(this.tableEXINVBASIC.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTYPENull() {
                this[this.tableEXINVBASIC.TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGROSSNull() {
                return this.IsNull(this.tableEXINVBASIC.GROSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGROSSNull() {
                this[this.tableEXINVBASIC.GROSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNETNull() {
                return this.IsNull(this.tableEXINVBASIC.NETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNETNull() {
                this[this.tableEXINVBASIC.NETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNARRATIONNull() {
                return this.IsNull(this.tableEXINVBASIC.NARRATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNARRATIONNull() {
                this[this.tableEXINVBASIC.NARRATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLOCIDNull() {
                return this.IsNull(this.tableEXINVBASIC.LOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLOCIDNull() {
                this[this.tableEXINVBASIC.LOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCREDITLIMITNull() {
                return this.IsNull(this.tableEXINVBASIC.CREDITLIMITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCREDITLIMITNull() {
                this[this.tableEXINVBASIC.CREDITLIMITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSLIMITNull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSLIMITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSLIMITNull() {
                this[this.tableEXINVBASIC.TRANSLIMITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYBALANCENull() {
                return this.IsNull(this.tableEXINVBASIC.PARTYBALANCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYBALANCENull() {
                this[this.tableEXINVBASIC.PARTYBALANCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCREDITDAYSNull() {
                return this.IsNull(this.tableEXINVBASIC.CREDITDAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCREDITDAYSNull() {
                this[this.tableEXINVBASIC.CREDITDAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDUEDATENull() {
                return this.IsNull(this.tableEXINVBASIC.DUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDUEDATENull() {
                this[this.tableEXINVBASIC.DUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFBEDNull() {
                return this.IsNull(this.tableEXINVBASIC.FBEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFBEDNull() {
                this[this.tableEXINVBASIC.FBEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFCESSNull() {
                return this.IsNull(this.tableEXINVBASIC.FCESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFCESSNull() {
                this[this.tableEXINVBASIC.FCESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFHSENull() {
                return this.IsNull(this.tableEXINVBASIC.FHSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFHSENull() {
                this[this.tableEXINVBASIC.FHSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsINVTYPENull() {
                return this.IsNull(this.tableEXINVBASIC.INVTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetINVTYPENull() {
                this[this.tableEXINVBASIC.INVTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBINYNNull() {
                return this.IsNull(this.tableEXINVBASIC.BINYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBINYNNull() {
                this[this.tableEXINVBASIC.BINYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPACKRNDNull() {
                return this.IsNull(this.tableEXINVBASIC.PACKRNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPACKRNDNull() {
                this[this.tableEXINVBASIC.PACKRNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOTHCHARNull() {
                return this.IsNull(this.tableEXINVBASIC.OTHCHARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOTHCHARNull() {
                this[this.tableEXINVBASIC.OTHCHARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEORDTYPENull() {
                return this.IsNull(this.tableEXINVBASIC.EORDTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEORDTYPENull() {
                this[this.tableEXINVBASIC.EORDTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsINVDESCNull() {
                return this.IsNull(this.tableEXINVBASIC.INVDESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetINVDESCNull() {
                this[this.tableEXINVBASIC.INVDESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVNONull() {
                return this.IsNull(this.tableEXINVBASIC.VNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVNONull() {
                this[this.tableEXINVBASIC.VNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMTWORDSBEDNull() {
                return this.IsNull(this.tableEXINVBASIC.AMTWORDSBEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMTWORDSBEDNull() {
                this[this.tableEXINVBASIC.AMTWORDSBEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBFREIGHTNull() {
                return this.IsNull(this.tableEXINVBASIC.BFREIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBFREIGHTNull() {
                this[this.tableEXINVBASIC.BFREIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBDISCOUNTNull() {
                return this.IsNull(this.tableEXINVBASIC.BDISCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBDISCOUNTNull() {
                this[this.tableEXINVBASIC.BDISCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFTAXNull() {
                return this.IsNull(this.tableEXINVBASIC.FTAXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFTAXNull() {
                this[this.tableEXINVBASIC.FTAXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTOTACCESAMOUNTNull() {
                return this.IsNull(this.tableEXINVBASIC.TOTACCESAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTOTACCESAMOUNTNull() {
                this[this.tableEXINVBASIC.TOTACCESAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBDRUMSNull() {
                return this.IsNull(this.tableEXINVBASIC.BDRUMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBDRUMSNull() {
                this[this.tableEXINVBASIC.BDRUMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBTOTQTYNull() {
                return this.IsNull(this.tableEXINVBASIC.BTOTQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBTOTQTYNull() {
                this[this.tableEXINVBASIC.BTOTQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBTOTAMTNull() {
                return this.IsNull(this.tableEXINVBASIC.BTOTAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBTOTAMTNull() {
                this[this.tableEXINVBASIC.BTOTAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBTOTACCAMTNull() {
                return this.IsNull(this.tableEXINVBASIC.BTOTACCAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBTOTACCAMTNull() {
                this[this.tableEXINVBASIC.BTOTACCAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBEDTRCHNull() {
                return this.IsNull(this.tableEXINVBASIC.BEDTRCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBEDTRCHNull() {
                this[this.tableEXINVBASIC.BEDTRCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBEDTRAMTNull() {
                return this.IsNull(this.tableEXINVBASIC.BEDTRAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBEDTRAMTNull() {
                this[this.tableEXINVBASIC.BEDTRAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBTOTPORLAMTNull() {
                return this.IsNull(this.tableEXINVBASIC.BTOTPORLAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBTOTPORLAMTNull() {
                this[this.tableEXINVBASIC.BTOTPORLAMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSERNONull() {
                return this.IsNull(this.tableEXINVBASIC.SERNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSERNONull() {
                this[this.tableEXINVBASIC.SERNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDEPORECFLAGNull() {
                return this.IsNull(this.tableEXINVBASIC.DEPORECFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDEPORECFLAGNull() {
                this[this.tableEXINVBASIC.DEPORECFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFCFLAGNull() {
                return this.IsNull(this.tableEXINVBASIC.FCFLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFCFLAGNull() {
                this[this.tableEXINVBASIC.FCFLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOMMCODENull() {
                return this.IsNull(this.tableEXINVBASIC.COMMCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOMMCODENull() {
                this[this.tableEXINVBASIC.COMMCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMTWORDSNull() {
                return this.IsNull(this.tableEXINVBASIC.AMTWORDSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMTWORDSNull() {
                this[this.tableEXINVBASIC.AMTWORDSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMCHELLANNull() {
                return this.IsNull(this.tableEXINVBASIC.MCHELLANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMCHELLANNull() {
                this[this.tableEXINVBASIC.MCHELLANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSCHELLANNull() {
                return this.IsNull(this.tableEXINVBASIC.SCHELLANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSCHELLANNull() {
                this[this.tableEXINVBASIC.SCHELLANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSCHALL2Null() {
                return this.IsNull(this.tableEXINVBASIC.SCHALL2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSCHALL2Null() {
                this[this.tableEXINVBASIC.SCHALL2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBEDAMTWNull() {
                return this.IsNull(this.tableEXINVBASIC.BEDAMTWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBEDAMTWNull() {
                this[this.tableEXINVBASIC.BEDAMTWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSITLOCIDNull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSITLOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSITLOCIDNull() {
                this[this.tableEXINVBASIC.TRANSITLOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCSGNPARTYIDNull() {
                return this.IsNull(this.tableEXINVBASIC.CSGNPARTYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCSGNPARTYIDNull() {
                this[this.tableEXINVBASIC.CSGNPARTYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPDOCIDNull() {
                return this.IsNull(this.tableEXINVBASIC.PDOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPDOCIDNull() {
                this[this.tableEXINVBASIC.PDOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXSTATUSNull() {
                return this.IsNull(this.tableEXINVBASIC.EXSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXSTATUSNull() {
                this[this.tableEXINVBASIC.EXSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSTAXPERNull() {
                return this.IsNull(this.tableEXINVBASIC.STAXPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSTAXPERNull() {
                this[this.tableEXINVBASIC.STAXPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADSCHEMENull() {
                return this.IsNull(this.tableEXINVBASIC.ADSCHEMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADSCHEMENull() {
                this[this.tableEXINVBASIC.ADSCHEMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYMASTIDNull() {
                return this.IsNull(this.tableEXINVBASIC.PARTYMASTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYMASTIDNull() {
                this[this.tableEXINVBASIC.PARTYMASTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSUBDITEMMIDNull() {
                return this.IsNull(this.tableEXINVBASIC.SUBDITEMMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSUBDITEMMIDNull() {
                this[this.tableEXINVBASIC.SUBDITEMMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSUBDLOCIDNull() {
                return this.IsNull(this.tableEXINVBASIC.SUBDLOCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSUBDLOCIDNull() {
                this[this.tableEXINVBASIC.SUBDLOCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSUBDRATENull() {
                return this.IsNull(this.tableEXINVBASIC.SUBDRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSUBDRATENull() {
                this[this.tableEXINVBASIC.SUBDRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLOCDETAILSIDNull() {
                return this.IsNull(this.tableEXINVBASIC.LOCDETAILSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLOCDETAILSIDNull() {
                this[this.tableEXINVBASIC.LOCDETAILSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBSGSTNull() {
                return this.IsNull(this.tableEXINVBASIC.BSGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBSGSTNull() {
                this[this.tableEXINVBASIC.BSGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBCGSTNull() {
                return this.IsNull(this.tableEXINVBASIC.BCGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBCGSTNull() {
                this[this.tableEXINVBASIC.BCGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBIGSTNull() {
                return this.IsNull(this.tableEXINVBASIC.BIGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBIGSTNull() {
                this[this.tableEXINVBASIC.BIGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSPNull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSPNull() {
                this[this.tableEXINVBASIC.TRANSPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSMODENull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSMODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSMODENull() {
                this[this.tableEXINVBASIC.TRANSMODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCUSTPONull() {
                return this.IsNull(this.tableEXINVBASIC.CUSTPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCUSTPONull() {
                this[this.tableEXINVBASIC.CUSTPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsROFFNull() {
                return this.IsNull(this.tableEXINVBASIC.ROFFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetROFFNull() {
                this[this.tableEXINVBASIC.ROFFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTCSNull() {
                return this.IsNull(this.tableEXINVBASIC.TCSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTCSNull() {
                this[this.tableEXINVBASIC.TCSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLUTNONull() {
                return this.IsNull(this.tableEXINVBASIC.LUTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLUTNONull() {
                this[this.tableEXINVBASIC.LUTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLUTDTNull() {
                return this.IsNull(this.tableEXINVBASIC.LUTDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLUTDTNull() {
                this[this.tableEXINVBASIC.LUTDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSEZNull() {
                return this.IsNull(this.tableEXINVBASIC.SEZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSEZNull() {
                this[this.tableEXINVBASIC.SEZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBTCSNull() {
                return this.IsNull(this.tableEXINVBASIC.BTCSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBTCSNull() {
                this[this.tableEXINVBASIC.BTCSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSALVALNull() {
                return this.IsNull(this.tableEXINVBASIC.SALVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSALVALNull() {
                this[this.tableEXINVBASIC.SALVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGSTNONull() {
                return this.IsNull(this.tableEXINVBASIC.GSTNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGSTNONull() {
                this[this.tableEXINVBASIC.GSTNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPANNONull() {
                return this.IsNull(this.tableEXINVBASIC.PANNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPANNONull() {
                this[this.tableEXINVBASIC.PANNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTDISTNull() {
                return this.IsNull(this.tableEXINVBASIC.TDISTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTDISTNull() {
                this[this.tableEXINVBASIC.TDISTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSCHGSPNull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSCHGSPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSCHGSPNull() {
                this[this.tableEXINVBASIC.TRANSCHGSPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRECVALNull() {
                return this.IsNull(this.tableEXINVBASIC.RECVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRECVALNull() {
                this[this.tableEXINVBASIC.RECVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPARTYGROUPNull() {
                return this.IsNull(this.tableEXINVBASIC.PARTYGROUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPARTYGROUPNull() {
                this[this.tableEXINVBASIC.PARTYGROUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSALLIMITNull() {
                return this.IsNull(this.tableEXINVBASIC.SALLIMITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSALLIMITNull() {
                this[this.tableEXINVBASIC.SALLIMITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsASALVALNull() {
                return this.IsNull(this.tableEXINVBASIC.ASALVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetASALVALNull() {
                this[this.tableEXINVBASIC.ASALVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBSPLRATENull() {
                return this.IsNull(this.tableEXINVBASIC.BSPLRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBSPLRATENull() {
                this[this.tableEXINVBASIC.BSPLRATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRATECODENull() {
                return this.IsNull(this.tableEXINVBASIC.RATECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRATECODENull() {
                this[this.tableEXINVBASIC.RATECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCRATECODENull() {
                return this.IsNull(this.tableEXINVBASIC.CRATECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCRATECODENull() {
                this[this.tableEXINVBASIC.CRATECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADDTNull() {
                return this.IsNull(this.tableEXINVBASIC.ADDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADDTNull() {
                this[this.tableEXINVBASIC.ADDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSAVECTRLNull() {
                return this.IsNull(this.tableEXINVBASIC.SAVECTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSAVECTRLNull() {
                this[this.tableEXINVBASIC.SAVECTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLIMITQNull() {
                return this.IsNull(this.tableEXINVBASIC.LIMITQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLIMITQNull() {
                this[this.tableEXINVBASIC.LIMITQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableEXINVBASIC.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetADDRESSNull() {
                this[this.tableEXINVBASIC.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSPORTNull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSPORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSPORTNull() {
                this[this.tableEXINVBASIC.TRANSPORTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTRANSPORTGSTNull() {
                return this.IsNull(this.tableEXINVBASIC.TRANSPORTGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTRANSPORTGSTNull() {
                this[this.tableEXINVBASIC.TRANSPORTGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSTATENull() {
                return this.IsNull(this.tableEXINVBASIC.STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSTATENull() {
                this[this.tableEXINVBASIC.STATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class EXINVBASICRowChangeEvent : global::System.EventArgs {
            
            private EXINVBASICRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICRowChangeEvent(EXINVBASICRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EXINVBASICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Arasan.ExinvbasicTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXINVBASICTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public EXINVBASICTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXINVBASIC";
            tableMapping.ColumnMappings.Add("EXINVBASICID", "EXINVBASICID");
            tableMapping.ColumnMappings.Add("PROFITDOC", "PROFITDOC");
            tableMapping.ColumnMappings.Add("APPROVAL", "APPROVAL");
            tableMapping.ColumnMappings.Add("APPROVALSTATUS", "APPROVALSTATUS");
            tableMapping.ColumnMappings.Add("MAXAPPROVED", "MAXAPPROVED");
            tableMapping.ColumnMappings.Add("CANCEL", "CANCEL");
            tableMapping.ColumnMappings.Add("T1SOURCEID", "T1SOURCEID");
            tableMapping.ColumnMappings.Add("LATEMPLATEID", "LATEMPLATEID");
            tableMapping.ColumnMappings.Add("BRANCHID", "BRANCHID");
            tableMapping.ColumnMappings.Add("VTYPE", "VTYPE");
            tableMapping.ColumnMappings.Add("DOCID", "DOCID");
            tableMapping.ColumnMappings.Add("DOCDATE", "DOCDATE");
            tableMapping.ColumnMappings.Add("REFNO", "REFNO");
            tableMapping.ColumnMappings.Add("REFDATE", "REFDATE");
            tableMapping.ColumnMappings.Add("MAINCURRENCY", "MAINCURRENCY");
            tableMapping.ColumnMappings.Add("SYMBOL", "SYMBOL");
            tableMapping.ColumnMappings.Add("EXRATE", "EXRATE");
            tableMapping.ColumnMappings.Add("PARTYID", "PARTYID");
            tableMapping.ColumnMappings.Add("PARTYNAME", "PARTYNAME");
            tableMapping.ColumnMappings.Add("RECDBY", "RECDBY");
            tableMapping.ColumnMappings.Add("DESPBY", "DESPBY");
            tableMapping.ColumnMappings.Add("INSPBY", "INSPBY");
            tableMapping.ColumnMappings.Add("DOCTHORUGH", "DOCTHORUGH");
            tableMapping.ColumnMappings.Add("CUSTACC", "CUSTACC");
            tableMapping.ColumnMappings.Add("TEMPID", "TEMPID");
            tableMapping.ColumnMappings.Add("ADTGMCONTROL", "ADTGMCONTROL");
            tableMapping.ColumnMappings.Add("RNDOFF", "RNDOFF");
            tableMapping.ColumnMappings.Add("MOBILE", "MOBILE");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("GROSS", "GROSS");
            tableMapping.ColumnMappings.Add("NET", "NET");
            tableMapping.ColumnMappings.Add("NARRATION", "NARRATION");
            tableMapping.ColumnMappings.Add("LOCID", "LOCID");
            tableMapping.ColumnMappings.Add("CREDITLIMIT", "CREDITLIMIT");
            tableMapping.ColumnMappings.Add("TRANSLIMIT", "TRANSLIMIT");
            tableMapping.ColumnMappings.Add("PARTYBALANCE", "PARTYBALANCE");
            tableMapping.ColumnMappings.Add("CREDITDAYS", "CREDITDAYS");
            tableMapping.ColumnMappings.Add("DUEDATE", "DUEDATE");
            tableMapping.ColumnMappings.Add("FBED", "FBED");
            tableMapping.ColumnMappings.Add("FCESS", "FCESS");
            tableMapping.ColumnMappings.Add("FHSE", "FHSE");
            tableMapping.ColumnMappings.Add("INVTYPE", "INVTYPE");
            tableMapping.ColumnMappings.Add("BINYN", "BINYN");
            tableMapping.ColumnMappings.Add("PACKRND", "PACKRND");
            tableMapping.ColumnMappings.Add("OTHCHAR", "OTHCHAR");
            tableMapping.ColumnMappings.Add("EORDTYPE", "EORDTYPE");
            tableMapping.ColumnMappings.Add("INVDESC", "INVDESC");
            tableMapping.ColumnMappings.Add("VNO", "VNO");
            tableMapping.ColumnMappings.Add("AMTWORDSBED", "AMTWORDSBED");
            tableMapping.ColumnMappings.Add("BFREIGHT", "BFREIGHT");
            tableMapping.ColumnMappings.Add("BDISCOUNT", "BDISCOUNT");
            tableMapping.ColumnMappings.Add("FTAX", "FTAX");
            tableMapping.ColumnMappings.Add("TOTACCESAMOUNT", "TOTACCESAMOUNT");
            tableMapping.ColumnMappings.Add("BDRUMS", "BDRUMS");
            tableMapping.ColumnMappings.Add("BTOTQTY", "BTOTQTY");
            tableMapping.ColumnMappings.Add("BTOTAMT", "BTOTAMT");
            tableMapping.ColumnMappings.Add("BTOTACCAMT", "BTOTACCAMT");
            tableMapping.ColumnMappings.Add("BEDTRCH", "BEDTRCH");
            tableMapping.ColumnMappings.Add("BEDTRAMT", "BEDTRAMT");
            tableMapping.ColumnMappings.Add("BTOTPORLAMT", "BTOTPORLAMT");
            tableMapping.ColumnMappings.Add("SERNO", "SERNO");
            tableMapping.ColumnMappings.Add("DEPORECFLAG", "DEPORECFLAG");
            tableMapping.ColumnMappings.Add("FCFLAG", "FCFLAG");
            tableMapping.ColumnMappings.Add("COMMCODE", "COMMCODE");
            tableMapping.ColumnMappings.Add("AMTWORDS", "AMTWORDS");
            tableMapping.ColumnMappings.Add("MCHELLAN", "MCHELLAN");
            tableMapping.ColumnMappings.Add("SCHELLAN", "SCHELLAN");
            tableMapping.ColumnMappings.Add("SCHALL2", "SCHALL2");
            tableMapping.ColumnMappings.Add("BEDAMTW", "BEDAMTW");
            tableMapping.ColumnMappings.Add("TRANSITLOCID", "TRANSITLOCID");
            tableMapping.ColumnMappings.Add("CSGNPARTYID", "CSGNPARTYID");
            tableMapping.ColumnMappings.Add("PDOCID", "PDOCID");
            tableMapping.ColumnMappings.Add("EXSTATUS", "EXSTATUS");
            tableMapping.ColumnMappings.Add("STAXPER", "STAXPER");
            tableMapping.ColumnMappings.Add("ADSCHEME", "ADSCHEME");
            tableMapping.ColumnMappings.Add("PARTYMASTID", "PARTYMASTID");
            tableMapping.ColumnMappings.Add("SUBDITEMMID", "SUBDITEMMID");
            tableMapping.ColumnMappings.Add("SUBDLOCID", "SUBDLOCID");
            tableMapping.ColumnMappings.Add("SUBDRATE", "SUBDRATE");
            tableMapping.ColumnMappings.Add("LOCDETAILSID", "LOCDETAILSID");
            tableMapping.ColumnMappings.Add("BSGST", "BSGST");
            tableMapping.ColumnMappings.Add("BCGST", "BCGST");
            tableMapping.ColumnMappings.Add("BIGST", "BIGST");
            tableMapping.ColumnMappings.Add("TRANSP", "TRANSP");
            tableMapping.ColumnMappings.Add("TRANSMODE", "TRANSMODE");
            tableMapping.ColumnMappings.Add("CUSTPO", "CUSTPO");
            tableMapping.ColumnMappings.Add("ROFF", "ROFF");
            tableMapping.ColumnMappings.Add("TCS", "TCS");
            tableMapping.ColumnMappings.Add("LUTNO", "LUTNO");
            tableMapping.ColumnMappings.Add("LUTDT", "LUTDT");
            tableMapping.ColumnMappings.Add("SEZ", "SEZ");
            tableMapping.ColumnMappings.Add("BTCS", "BTCS");
            tableMapping.ColumnMappings.Add("SALVAL", "SALVAL");
            tableMapping.ColumnMappings.Add("GSTNO", "GSTNO");
            tableMapping.ColumnMappings.Add("PANNO", "PANNO");
            tableMapping.ColumnMappings.Add("TDIST", "TDIST");
            tableMapping.ColumnMappings.Add("TRANSCHGSP", "TRANSCHGSP");
            tableMapping.ColumnMappings.Add("RECVAL", "RECVAL");
            tableMapping.ColumnMappings.Add("PARTYGROUP", "PARTYGROUP");
            tableMapping.ColumnMappings.Add("SALLIMIT", "SALLIMIT");
            tableMapping.ColumnMappings.Add("ASALVAL", "ASALVAL");
            tableMapping.ColumnMappings.Add("BSPLRATE", "BSPLRATE");
            tableMapping.ColumnMappings.Add("RATECODE", "RATECODE");
            tableMapping.ColumnMappings.Add("CRATECODE", "CRATECODE");
            tableMapping.ColumnMappings.Add("ADDT", "ADDT");
            tableMapping.ColumnMappings.Add("SAVECTRL", "SAVECTRL");
            tableMapping.ColumnMappings.Add("LIMITQ", "LIMITQ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"TAAIERP\".\"EXINVBASIC\" WHERE ((\"EXINVBASICID\" = :Original_EXINVBASICI" +
                "D) AND ((:IsNull_PROFITDOC = 1 AND \"PROFITDOC\" IS NULL) OR (\"PROFITDOC\" = :Origi" +
                "nal_PROFITDOC)) AND ((:IsNull_APPROVAL = 1 AND \"APPROVAL\" IS NULL) OR (\"APPROVAL" +
                "\" = :Original_APPROVAL)) AND ((:IsNull_APPROVALSTATUS = 1 AND \"APPROVALSTATUS\" I" +
                "S NULL) OR (\"APPROVALSTATUS\" = :Original_APPROVALSTATUS)) AND ((:IsNull_MAXAPPRO" +
                "VED = 1 AND \"MAXAPPROVED\" IS NULL) OR (\"MAXAPPROVED\" = :Original_MAXAPPROVED)) A" +
                "ND ((:IsNull_CANCEL = 1 AND \"CANCEL\" IS NULL) OR (\"CANCEL\" = :Original_CANCEL)) " +
                "AND ((:IsNull_T1SOURCEID = 1 AND \"T1SOURCEID\" IS NULL) OR (\"T1SOURCEID\" = :Origi" +
                "nal_T1SOURCEID)) AND ((:IsNull_LATEMPLATEID = 1 AND \"LATEMPLATEID\" IS NULL) OR (" +
                "\"LATEMPLATEID\" = :Original_LATEMPLATEID)) AND ((:IsNull_BRANCHID = 1 AND \"BRANCH" +
                "ID\" IS NULL) OR (\"BRANCHID\" = :Original_BRANCHID)) AND ((:IsNull_VTYPE = 1 AND \"" +
                "VTYPE\" IS NULL) OR (\"VTYPE\" = :Original_VTYPE)) AND ((:IsNull_DOCID = 1 AND \"DOC" +
                "ID\" IS NULL) OR (\"DOCID\" = :Original_DOCID)) AND ((:IsNull_DOCDATE = 1 AND \"DOCD" +
                "ATE\" IS NULL) OR (\"DOCDATE\" = :Original_DOCDATE)) AND ((:IsNull_REFNO = 1 AND \"R" +
                "EFNO\" IS NULL) OR (\"REFNO\" = :Original_REFNO)) AND ((:IsNull_REFDATE = 1 AND \"RE" +
                "FDATE\" IS NULL) OR (\"REFDATE\" = :Original_REFDATE)) AND ((:IsNull_MAINCURRENCY =" +
                " 1 AND \"MAINCURRENCY\" IS NULL) OR (\"MAINCURRENCY\" = :Original_MAINCURRENCY)) AND" +
                " ((:IsNull_SYMBOL = 1 AND \"SYMBOL\" IS NULL) OR (\"SYMBOL\" = :Original_SYMBOL)) AN" +
                "D ((:IsNull_EXRATE = 1 AND \"EXRATE\" IS NULL) OR (\"EXRATE\" = :Original_EXRATE)) A" +
                "ND ((:IsNull_PARTYID = 1 AND \"PARTYID\" IS NULL) OR (\"PARTYID\" = :Original_PARTYI" +
                "D)) AND ((:IsNull_PARTYNAME = 1 AND \"PARTYNAME\" IS NULL) OR (\"PARTYNAME\" = :Orig" +
                "inal_PARTYNAME)) AND ((:IsNull_RECDBY = 1 AND \"RECDBY\" IS NULL) OR (\"RECDBY\" = :" +
                "Original_RECDBY)) AND ((:IsNull_DESPBY = 1 AND \"DESPBY\" IS NULL) OR (\"DESPBY\" = " +
                ":Original_DESPBY)) AND ((:IsNull_INSPBY = 1 AND \"INSPBY\" IS NULL) OR (\"INSPBY\" =" +
                " :Original_INSPBY)) AND ((:IsNull_DOCTHORUGH = 1 AND \"DOCTHORUGH\" IS NULL) OR (\"" +
                "DOCTHORUGH\" = :Original_DOCTHORUGH)) AND ((:IsNull_CUSTACC = 1 AND \"CUSTACC\" IS " +
                "NULL) OR (\"CUSTACC\" = :Original_CUSTACC)) AND ((:IsNull_TEMPID = 1 AND \"TEMPID\" " +
                "IS NULL) OR (\"TEMPID\" = :Original_TEMPID)) AND ((:IsNull_ADTGMCONTROL = 1 AND \"A" +
                "DTGMCONTROL\" IS NULL) OR (\"ADTGMCONTROL\" = :Original_ADTGMCONTROL)) AND ((:IsNul" +
                "l_RNDOFF = 1 AND \"RNDOFF\" IS NULL) OR (\"RNDOFF\" = :Original_RNDOFF)) AND ((:IsNu" +
                "ll_MOBILE = 1 AND \"MOBILE\" IS NULL) OR (\"MOBILE\" = :Original_MOBILE)) AND ((:IsN" +
                "ull_TYPE = 1 AND \"TYPE\" IS NULL) OR (\"TYPE\" = :Original_TYPE)) AND ((:IsNull_GRO" +
                "SS = 1 AND \"GROSS\" IS NULL) OR (\"GROSS\" = :Original_GROSS)) AND ((:IsNull_NET = " +
                "1 AND \"NET\" IS NULL) OR (\"NET\" = :Original_NET)) AND ((:IsNull_NARRATION = 1 AND" +
                " \"NARRATION\" IS NULL) OR (\"NARRATION\" = :Original_NARRATION)) AND ((:IsNull_LOCI" +
                "D = 1 AND \"LOCID\" IS NULL) OR (\"LOCID\" = :Original_LOCID)) AND ((:IsNull_CREDITL" +
                "IMIT = 1 AND \"CREDITLIMIT\" IS NULL) OR (\"CREDITLIMIT\" = :Original_CREDITLIMIT)) " +
                "AND ((:IsNull_TRANSLIMIT = 1 AND \"TRANSLIMIT\" IS NULL) OR (\"TRANSLIMIT\" = :Origi" +
                "nal_TRANSLIMIT)) AND ((:IsNull_PARTYBALANCE = 1 AND \"PARTYBALANCE\" IS NULL) OR (" +
                "\"PARTYBALANCE\" = :Original_PARTYBALANCE)) AND ((:IsNull_CREDITDAYS = 1 AND \"CRED" +
                "ITDAYS\" IS NULL) OR (\"CREDITDAYS\" = :Original_CREDITDAYS)) AND ((:IsNull_DUEDATE" +
                " = 1 AND \"DUEDATE\" IS NULL) OR (\"DUEDATE\" = :Original_DUEDATE)) AND ((:IsNull_FB" +
                "ED = 1 AND \"FBED\" IS NULL) OR (\"FBED\" = :Original_FBED)) AND ((:IsNull_FCESS = 1" +
                " AND \"FCESS\" IS NULL) OR (\"FCESS\" = :Original_FCESS)) AND ((:IsNull_FHSE = 1 AND" +
                " \"FHSE\" IS NULL) OR (\"FHSE\" = :Original_FHSE)) AND ((:IsNull_INVTYPE = 1 AND \"IN" +
                "VTYPE\" IS NULL) OR (\"INVTYPE\" = :Original_INVTYPE)) AND ((:IsNull_BINYN = 1 AND " +
                "\"BINYN\" IS NULL) OR (\"BINYN\" = :Original_BINYN)) AND ((:IsNull_PACKRND = 1 AND \"" +
                "PACKRND\" IS NULL) OR (\"PACKRND\" = :Original_PACKRND)) AND ((:IsNull_OTHCHAR = 1 " +
                "AND \"OTHCHAR\" IS NULL) OR (\"OTHCHAR\" = :Original_OTHCHAR)) AND ((:IsNull_EORDTYP" +
                "E = 1 AND \"EORDTYPE\" IS NULL) OR (\"EORDTYPE\" = :Original_EORDTYPE)) AND ((:IsNul" +
                "l_INVDESC = 1 AND \"INVDESC\" IS NULL) OR (\"INVDESC\" = :Original_INVDESC)) AND ((:" +
                "IsNull_VNO = 1 AND \"VNO\" IS NULL) OR (\"VNO\" = :Original_VNO)) AND ((:IsNull_AMTW" +
                "ORDSBED = 1 AND \"AMTWORDSBED\" IS NULL) OR (\"AMTWORDSBED\" = :Original_AMTWORDSBED" +
                ")) AND ((:IsNull_BFREIGHT = 1 AND \"BFREIGHT\" IS NULL) OR (\"BFREIGHT\" = :Original" +
                "_BFREIGHT)) AND ((:IsNull_BDISCOUNT = 1 AND \"BDISCOUNT\" IS NULL) OR (\"BDISCOUNT\"" +
                " = :Original_BDISCOUNT)) AND ((:IsNull_FTAX = 1 AND \"FTAX\" IS NULL) OR (\"FTAX\" =" +
                " :Original_FTAX)) AND ((:IsNull_TOTACCESAMOUNT = 1 AND \"TOTACCESAMOUNT\" IS NULL)" +
                " OR (\"TOTACCESAMOUNT\" = :Original_TOTACCESAMOUNT)) AND ((:IsNull_BDRUMS = 1 AND " +
                "\"BDRUMS\" IS NULL) OR (\"BDRUMS\" = :Original_BDRUMS)) AND ((:IsNull_BTOTQTY = 1 AN" +
                "D \"BTOTQTY\" IS NULL) OR (\"BTOTQTY\" = :Original_BTOTQTY)) AND ((:IsNull_BTOTAMT =" +
                " 1 AND \"BTOTAMT\" IS NULL) OR (\"BTOTAMT\" = :Original_BTOTAMT)) AND ((:IsNull_BTOT" +
                "ACCAMT = 1 AND \"BTOTACCAMT\" IS NULL) OR (\"BTOTACCAMT\" = :Original_BTOTACCAMT)) A" +
                "ND ((:IsNull_BEDTRCH = 1 AND \"BEDTRCH\" IS NULL) OR (\"BEDTRCH\" = :Original_BEDTRC" +
                "H)) AND ((:IsNull_BEDTRAMT = 1 AND \"BEDTRAMT\" IS NULL) OR (\"BEDTRAMT\" = :Origina" +
                "l_BEDTRAMT)) AND ((:IsNull_BTOTPORLAMT = 1 AND \"BTOTPORLAMT\" IS NULL) OR (\"BTOTP" +
                "ORLAMT\" = :Original_BTOTPORLAMT)) AND ((:IsNull_SERNO = 1 AND \"SERNO\" IS NULL) O" +
                "R (\"SERNO\" = :Original_SERNO)) AND ((:IsNull_DEPORECFLAG = 1 AND \"DEPORECFLAG\" I" +
                "S NULL) OR (\"DEPORECFLAG\" = :Original_DEPORECFLAG)) AND ((:IsNull_FCFLAG = 1 AND" +
                " \"FCFLAG\" IS NULL) OR (\"FCFLAG\" = :Original_FCFLAG)) AND ((:IsNull_COMMCODE = 1 " +
                "AND \"COMMCODE\" IS NULL) OR (\"COMMCODE\" = :Original_COMMCODE)) AND ((:IsNull_AMTW" +
                "ORDS = 1 AND \"AMTWORDS\" IS NULL) OR (\"AMTWORDS\" = :Original_AMTWORDS)) AND ((:Is" +
                "Null_MCHELLAN = 1 AND \"MCHELLAN\" IS NULL) OR (\"MCHELLAN\" = :Original_MCHELLAN)) " +
                "AND ((:IsNull_SCHELLAN = 1 AND \"SCHELLAN\" IS NULL) OR (\"SCHELLAN\" = :Original_SC" +
                "HELLAN)) AND ((:IsNull_SCHALL2 = 1 AND \"SCHALL2\" IS NULL) OR (\"SCHALL2\" = :Origi" +
                "nal_SCHALL2)) AND ((:IsNull_BEDAMTW = 1 AND \"BEDAMTW\" IS NULL) OR (\"BEDAMTW\" = :" +
                "Original_BEDAMTW)) AND ((:IsNull_TRANSITLOCID = 1 AND \"TRANSITLOCID\" IS NULL) OR" +
                " (\"TRANSITLOCID\" = :Original_TRANSITLOCID)) AND ((:IsNull_CSGNPARTYID = 1 AND \"C" +
                "SGNPARTYID\" IS NULL) OR (\"CSGNPARTYID\" = :Original_CSGNPARTYID)) AND ((:IsNull_P" +
                "DOCID = 1 AND \"PDOCID\" IS NULL) OR (\"PDOCID\" = :Original_PDOCID)) AND ((:IsNull_" +
                "EXSTATUS = 1 AND \"EXSTATUS\" IS NULL) OR (\"EXSTATUS\" = :Original_EXSTATUS)) AND (" +
                "(:IsNull_STAXPER = 1 AND \"STAXPER\" IS NULL) OR (\"STAXPER\" = :Original_STAXPER)) " +
                "AND ((:IsNull_ADSCHEME = 1 AND \"ADSCHEME\" IS NULL) OR (\"ADSCHEME\" = :Original_AD" +
                "SCHEME)) AND ((:IsNull_PARTYMASTID = 1 AND \"PARTYMASTID\" IS NULL) OR (\"PARTYMAST" +
                "ID\" = :Original_PARTYMASTID)) AND ((:IsNull_SUBDITEMMID = 1 AND \"SUBDITEMMID\" IS" +
                " NULL) OR (\"SUBDITEMMID\" = :Original_SUBDITEMMID)) AND ((:IsNull_SUBDLOCID = 1 A" +
                "ND \"SUBDLOCID\" IS NULL) OR (\"SUBDLOCID\" = :Original_SUBDLOCID)) AND ((:IsNull_SU" +
                "BDRATE = 1 AND \"SUBDRATE\" IS NULL) OR (\"SUBDRATE\" = :Original_SUBDRATE)) AND ((:" +
                "IsNull_LOCDETAILSID = 1 AND \"LOCDETAILSID\" IS NULL) OR (\"LOCDETAILSID\" = :Origin" +
                "al_LOCDETAILSID)) AND ((:IsNull_BSGST = 1 AND \"BSGST\" IS NULL) OR (\"BSGST\" = :Or" +
                "iginal_BSGST)) AND ((:IsNull_BCGST = 1 AND \"BCGST\" IS NULL) OR (\"BCGST\" = :Origi" +
                "nal_BCGST)) AND ((:IsNull_BIGST = 1 AND \"BIGST\" IS NULL) OR (\"BIGST\" = :Original" +
                "_BIGST)) AND ((:IsNull_TRANSP = 1 AND \"TRANSP\" IS NULL) OR (\"TRANSP\" = :Original" +
                "_TRANSP)) AND ((:IsNull_TRANSMODE = 1 AND \"TRANSMODE\" IS NULL) OR (\"TRANSMODE\" =" +
                " :Original_TRANSMODE)) AND ((:IsNull_CUSTPO = 1 AND \"CUSTPO\" IS NULL) OR (\"CUSTP" +
                "O\" = :Original_CUSTPO)) AND ((:IsNull_ROFF = 1 AND \"ROFF\" IS NULL) OR (\"ROFF\" = " +
                ":Original_ROFF)) AND ((:IsNull_TCS = 1 AND \"TCS\" IS NULL) OR (\"TCS\" = :Original_" +
                "TCS)) AND ((:IsNull_LUTNO = 1 AND \"LUTNO\" IS NULL) OR (\"LUTNO\" = :Original_LUTNO" +
                ")) AND ((:IsNull_LUTDT = 1 AND \"LUTDT\" IS NULL) OR (\"LUTDT\" = :Original_LUTDT)) " +
                "AND ((:IsNull_SEZ = 1 AND \"SEZ\" IS NULL) OR (\"SEZ\" = :Original_SEZ)) AND ((:IsNu" +
                "ll_BTCS = 1 AND \"BTCS\" IS NULL) OR (\"BTCS\" = :Original_BTCS)) AND ((:IsNull_SALV" +
                "AL = 1 AND \"SALVAL\" IS NULL) OR (\"SALVAL\" = :Original_SALVAL)) AND ((:IsNull_GST" +
                "NO = 1 AND \"GSTNO\" IS NULL) OR (\"GSTNO\" = :Original_GSTNO)) AND ((:IsNull_PANNO " +
                "= 1 AND \"PANNO\" IS NULL) OR (\"PANNO\" = :Original_PANNO)) AND ((:IsNull_TDIST = 1" +
                " AND \"TDIST\" IS NULL) OR (\"TDIST\" = :Original_TDIST)) AND ((:IsNull_TRANSCHGSP =" +
                " 1 AND \"TRANSCHGSP\" IS NULL) OR (\"TRANSCHGSP\" = :Original_TRANSCHGSP)) AND ((:Is" +
                "Null_RECVAL = 1 AND \"RECVAL\" IS NULL) OR (\"RECVAL\" = :Original_RECVAL)) AND ((:I" +
                "sNull_PARTYGROUP = 1 AND \"PARTYGROUP\" IS NULL) OR (\"PARTYGROUP\" = :Original_PART" +
                "YGROUP)) AND ((:IsNull_SALLIMIT = 1 AND \"SALLIMIT\" IS NULL) OR (\"SALLIMIT\" = :Or" +
                "iginal_SALLIMIT)) AND ((:IsNull_ASALVAL = 1 AND \"ASALVAL\" IS NULL) OR (\"ASALVAL\"" +
                " = :Original_ASALVAL)) AND ((:IsNull_BSPLRATE = 1 AND \"BSPLRATE\" IS NULL) OR (\"B" +
                "SPLRATE\" = :Original_BSPLRATE)) AND ((:IsNull_RATECODE = 1 AND \"RATECODE\" IS NUL" +
                "L) OR (\"RATECODE\" = :Original_RATECODE)) AND ((:IsNull_CRATECODE = 1 AND \"CRATEC" +
                "ODE\" IS NULL) OR (\"CRATECODE\" = :Original_CRATECODE)) AND ((:IsNull_ADDT = 1 AND" +
                " \"ADDT\" IS NULL) OR (\"ADDT\" = :Original_ADDT)) AND ((:IsNull_SAVECTRL = 1 AND \"S" +
                "AVECTRL\" IS NULL) OR (\"SAVECTRL\" = :Original_SAVECTRL)) AND ((:IsNull_LIMITQ = 1" +
                " AND \"LIMITQ\" IS NULL) OR (\"LIMITQ\" = :Original_LIMITQ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PROFITDOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROFITDOC";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_APPROVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_APPROVAL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CANCEL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CANCEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_T1SOURCEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_T1SOURCEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BRANCHID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BRANCHID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_VTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_VTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SYMBOL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SYMBOL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SYMBOL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SYMBOL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RECDBY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "RECDBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RECDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "RECDBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DESPBY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DESPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DESPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DESPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INSPBY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INSPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INSPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INSPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCTHORUGH";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DOCTHORUGH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCTHORUGH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DOCTHORUGH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUSTACC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CUSTACC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUSTACC";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CUSTACC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TEMPID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TEMPID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TEMPID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TEMPID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADTGMCONTROL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADTGMCONTROL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RNDOFF";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RNDOFF";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MOBILE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "MOBILE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MOBILE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "MOBILE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GROSS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GROSS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NET";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NET";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NARRATION";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "NARRATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NARRATION";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "NARRATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CREDITLIMIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CREDITLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSLIMIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYBALANCE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBALANCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYBALANCE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBALANCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CREDITDAYS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITDAYS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CREDITDAYS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITDAYS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DUEDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FBED";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FBED";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FCESS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FCESS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FHSE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FHSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FHSE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FHSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INVTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INVTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INVTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INVTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BINYN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BINYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PACKRND";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PACKRND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PACKRND";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PACKRND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OTHCHAR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHCHAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OTHCHAR";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHCHAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EORDTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INVDESC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "INVDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INVDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "INVDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_VNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "VNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_VNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "VNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AMTWORDSBED";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDSBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AMTWORDSBED";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDSBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BFREIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BFREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BFREIGHT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BFREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BDISCOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BDISCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FTAX";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FTAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FTAX";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FTAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BDRUMS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDRUMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BDRUMS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDRUMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTACCAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTACCAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTACCAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTACCAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDTRCH";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRCH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDTRCH";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRCH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDTRAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDTRAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTPORLAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTPORLAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTPORLAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTPORLAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SERNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "SERNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SERNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "SERNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPORECFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DEPORECFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPORECFLAG";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DEPORECFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMCODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "COMMCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "COMMCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AMTWORDS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AMTWORDS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MCHELLAN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 75;
            param.IsNullable = true;
            param.SourceColumn = "MCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 75;
            param.IsNullable = true;
            param.SourceColumn = "MCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SCHELLAN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SCHALL2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHALL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SCHALL2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHALL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDAMTW";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMTW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDAMTW";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMTW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSITLOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSITLOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CSGNPARTYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSGNPARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CSGNPARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSGNPARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PDOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PDOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PDOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PDOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXSTATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXSTATUS";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STAXPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "STAXPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STAXPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "STAXPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADSCHEME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADSCHEME";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYMASTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYMASTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYMASTID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYMASTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDITEMMID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDITEMMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDITEMMID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDITEMMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDLOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "SUBDLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDLOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "SUBDLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDRATE";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LOCDETAILSID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILSID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LOCDETAILSID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILSID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BSGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BSGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BSGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BSGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BCGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BCGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BIGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BIGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BIGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BIGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSP";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSMODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSMODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSMODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSMODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUSTPO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "CUSTPO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUSTPO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "CUSTPO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ROFF";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ROFF";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LUTNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LUTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LUTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LUTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LUTDT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LUTDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LUTDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LUTDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEZ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "SEZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEZ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "SEZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTCS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SALVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GSTNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "GSTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GSTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "GSTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PANNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "PANNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PANNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "PANNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TDIST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDIST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TDIST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDIST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSCHGSP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSCHGSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSCHGSP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSCHGSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RECVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RECVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RECVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RECVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYGROUP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "PARTYGROUP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYGROUP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "PARTYGROUP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SALLIMIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SALLIMIT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ASALVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ASALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BSPLRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BSPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BSPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BSPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RATECODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRATECODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "CRATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "CRATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADDT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADDT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SAVECTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SAVECTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SAVECTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SAVECTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LIMITQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LIMITQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIMITQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LIMITQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"TAAIERP\".\"EXINVBASIC\" (\"EXINVBASICID\", \"PROFITDOC\", \"APPROVAL\", \"APP" +
                "ROVALSTATUS\", \"MAXAPPROVED\", \"CANCEL\", \"T1SOURCEID\", \"LATEMPLATEID\", \"BRANCHID\"," +
                " \"VTYPE\", \"DOCID\", \"DOCDATE\", \"REFNO\", \"REFDATE\", \"MAINCURRENCY\", \"SYMBOL\", \"EXR" +
                "ATE\", \"PARTYID\", \"PARTYNAME\", \"RECDBY\", \"DESPBY\", \"INSPBY\", \"DOCTHORUGH\", \"CUSTA" +
                "CC\", \"TEMPID\", \"ADTGMCONTROL\", \"RNDOFF\", \"MOBILE\", \"TYPE\", \"GROSS\", \"NET\", \"NARR" +
                "ATION\", \"LOCID\", \"CREDITLIMIT\", \"TRANSLIMIT\", \"PARTYBALANCE\", \"CREDITDAYS\", \"DUE" +
                "DATE\", \"FBED\", \"FCESS\", \"FHSE\", \"INVTYPE\", \"BINYN\", \"PACKRND\", \"OTHCHAR\", \"EORDT" +
                "YPE\", \"INVDESC\", \"VNO\", \"AMTWORDSBED\", \"BFREIGHT\", \"BDISCOUNT\", \"FTAX\", \"TOTACCE" +
                "SAMOUNT\", \"BDRUMS\", \"BTOTQTY\", \"BTOTAMT\", \"BTOTACCAMT\", \"BEDTRCH\", \"BEDTRAMT\", \"" +
                "BTOTPORLAMT\", \"SERNO\", \"DEPORECFLAG\", \"FCFLAG\", \"COMMCODE\", \"AMTWORDS\", \"MCHELLA" +
                "N\", \"SCHELLAN\", \"SCHALL2\", \"BEDAMTW\", \"TRANSITLOCID\", \"CSGNPARTYID\", \"PDOCID\", \"" +
                "EXSTATUS\", \"STAXPER\", \"ADSCHEME\", \"PARTYMASTID\", \"SUBDITEMMID\", \"SUBDLOCID\", \"SU" +
                "BDRATE\", \"LOCDETAILSID\", \"BSGST\", \"BCGST\", \"BIGST\", \"TRANSP\", \"TRANSMODE\", \"CUST" +
                "PO\", \"ROFF\", \"TCS\", \"LUTNO\", \"LUTDT\", \"SEZ\", \"BTCS\", \"SALVAL\", \"GSTNO\", \"PANNO\"," +
                " \"TDIST\", \"TRANSCHGSP\", \"RECVAL\", \"PARTYGROUP\", \"SALLIMIT\", \"ASALVAL\", \"BSPLRATE" +
                "\", \"RATECODE\", \"CRATECODE\", \"ADDT\", \"SAVECTRL\", \"LIMITQ\") VALUES (:EXINVBASICID," +
                " :PROFITDOC, :APPROVAL, :APPROVALSTATUS, :MAXAPPROVED, :CANCEL, :T1SOURCEID, :LA" +
                "TEMPLATEID, :BRANCHID, :VTYPE, :DOCID, :DOCDATE, :REFNO, :REFDATE, :MAINCURRENCY" +
                ", :SYMBOL, :EXRATE, :PARTYID, :PARTYNAME, :RECDBY, :DESPBY, :INSPBY, :DOCTHORUGH" +
                ", :CUSTACC, :TEMPID, :ADTGMCONTROL, :RNDOFF, :MOBILE, :TYPE, :GROSS, :NET, :NARR" +
                "ATION, :LOCID, :CREDITLIMIT, :TRANSLIMIT, :PARTYBALANCE, :CREDITDAYS, :DUEDATE, " +
                ":FBED, :FCESS, :FHSE, :INVTYPE, :BINYN, :PACKRND, :OTHCHAR, :EORDTYPE, :INVDESC," +
                " :VNO, :AMTWORDSBED, :BFREIGHT, :BDISCOUNT, :FTAX, :TOTACCESAMOUNT, :BDRUMS, :BT" +
                "OTQTY, :BTOTAMT, :BTOTACCAMT, :BEDTRCH, :BEDTRAMT, :BTOTPORLAMT, :SERNO, :DEPORE" +
                "CFLAG, :FCFLAG, :COMMCODE, :AMTWORDS, :MCHELLAN, :SCHELLAN, :SCHALL2, :BEDAMTW, " +
                ":TRANSITLOCID, :CSGNPARTYID, :PDOCID, :EXSTATUS, :STAXPER, :ADSCHEME, :PARTYMAST" +
                "ID, :SUBDITEMMID, :SUBDLOCID, :SUBDRATE, :LOCDETAILSID, :BSGST, :BCGST, :BIGST, " +
                ":TRANSP, :TRANSMODE, :CUSTPO, :ROFF, :TCS, :LUTNO, :LUTDT, :SEZ, :BTCS, :SALVAL," +
                " :GSTNO, :PANNO, :TDIST, :TRANSCHGSP, :RECVAL, :PARTYGROUP, :SALLIMIT, :ASALVAL," +
                " :BSPLRATE, :RATECODE, :CRATECODE, :ADDT, :SAVECTRL, :LIMITQ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROFITDOC";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPROVAL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CANCEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "T1SOURCEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BRANCHID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "VTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SYMBOL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SYMBOL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RECDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "RECDBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DESPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DESPBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INSPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INSPBY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCTHORUGH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DOCTHORUGH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CUSTACC";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CUSTACC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TEMPID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TEMPID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADTGMCONTROL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RNDOFF";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MOBILE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "MOBILE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GROSS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NET";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NARRATION";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "NARRATION";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREDITLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITLIMIT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSLIMIT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYBALANCE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBALANCE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREDITDAYS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITDAYS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FBED";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FBED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FCESS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCESS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FHSE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FHSE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INVTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INVTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BINYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PACKRND";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PACKRND";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OTHCHAR";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHCHAR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EORDTYPE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INVDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "INVDESC";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "VNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "VNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMTWORDSBED";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDSBED";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BFREIGHT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BFREIGHT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BDISCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDISCOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FTAX";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FTAX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTACCESAMOUNT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BDRUMS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDRUMS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTQTY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTACCAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTACCAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDTRCH";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRCH";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDTRAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTPORLAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTPORLAMT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SERNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "SERNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPORECFLAG";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DEPORECFLAG";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCFLAG";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "COMMCODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMTWORDS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 75;
            param.IsNullable = true;
            param.SourceColumn = "MCHELLAN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHELLAN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SCHALL2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHALL2";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDAMTW";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMTW";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSITLOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CSGNPARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSGNPARTYID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PDOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PDOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXSTATUS";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STAXPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "STAXPER";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADSCHEME";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYMASTID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYMASTID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDITEMMID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDITEMMID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDLOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "SUBDLOCID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDRATE";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOCDETAILSID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILSID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BSGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BSGST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BCGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCGST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BIGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BIGST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSP";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSMODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSMODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CUSTPO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "CUSTPO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ROFF";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROFF";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LUTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LUTNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LUTDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LUTDT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEZ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "SEZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTCS";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALVAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GSTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "GSTNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PANNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "PANNO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TDIST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDIST";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSCHGSP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSCHGSP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RECVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RECVAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYGROUP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "PARTYGROUP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SALLIMIT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALLIMIT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ASALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASALVAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BSPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BSPLRATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RATECODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "CRATECODE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADDT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADDT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SAVECTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SAVECTRL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LIMITQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LIMITQ";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"TAAIERP\".\"EXINVBASIC\" SET \"EXINVBASICID\" = :EXINVBASICID, \"PROFITDOC\" = :" +
                "PROFITDOC, \"APPROVAL\" = :APPROVAL, \"APPROVALSTATUS\" = :APPROVALSTATUS, \"MAXAPPRO" +
                "VED\" = :MAXAPPROVED, \"CANCEL\" = :CANCEL, \"T1SOURCEID\" = :T1SOURCEID, \"LATEMPLATE" +
                "ID\" = :LATEMPLATEID, \"BRANCHID\" = :BRANCHID, \"VTYPE\" = :VTYPE, \"DOCID\" = :DOCID," +
                " \"DOCDATE\" = :DOCDATE, \"REFNO\" = :REFNO, \"REFDATE\" = :REFDATE, \"MAINCURRENCY\" = " +
                ":MAINCURRENCY, \"SYMBOL\" = :SYMBOL, \"EXRATE\" = :EXRATE, \"PARTYID\" = :PARTYID, \"PA" +
                "RTYNAME\" = :PARTYNAME, \"RECDBY\" = :RECDBY, \"DESPBY\" = :DESPBY, \"INSPBY\" = :INSPB" +
                "Y, \"DOCTHORUGH\" = :DOCTHORUGH, \"CUSTACC\" = :CUSTACC, \"TEMPID\" = :TEMPID, \"ADTGMC" +
                "ONTROL\" = :ADTGMCONTROL, \"RNDOFF\" = :RNDOFF, \"MOBILE\" = :MOBILE, \"TYPE\" = :TYPE," +
                " \"GROSS\" = :GROSS, \"NET\" = :NET, \"NARRATION\" = :NARRATION, \"LOCID\" = :LOCID, \"CR" +
                "EDITLIMIT\" = :CREDITLIMIT, \"TRANSLIMIT\" = :TRANSLIMIT, \"PARTYBALANCE\" = :PARTYBA" +
                "LANCE, \"CREDITDAYS\" = :CREDITDAYS, \"DUEDATE\" = :DUEDATE, \"FBED\" = :FBED, \"FCESS\"" +
                " = :FCESS, \"FHSE\" = :FHSE, \"INVTYPE\" = :INVTYPE, \"BINYN\" = :BINYN, \"PACKRND\" = :" +
                "PACKRND, \"OTHCHAR\" = :OTHCHAR, \"EORDTYPE\" = :EORDTYPE, \"INVDESC\" = :INVDESC, \"VN" +
                "O\" = :VNO, \"AMTWORDSBED\" = :AMTWORDSBED, \"BFREIGHT\" = :BFREIGHT, \"BDISCOUNT\" = :" +
                "BDISCOUNT, \"FTAX\" = :FTAX, \"TOTACCESAMOUNT\" = :TOTACCESAMOUNT, \"BDRUMS\" = :BDRUM" +
                "S, \"BTOTQTY\" = :BTOTQTY, \"BTOTAMT\" = :BTOTAMT, \"BTOTACCAMT\" = :BTOTACCAMT, \"BEDT" +
                "RCH\" = :BEDTRCH, \"BEDTRAMT\" = :BEDTRAMT, \"BTOTPORLAMT\" = :BTOTPORLAMT, \"SERNO\" =" +
                " :SERNO, \"DEPORECFLAG\" = :DEPORECFLAG, \"FCFLAG\" = :FCFLAG, \"COMMCODE\" = :COMMCOD" +
                "E, \"AMTWORDS\" = :AMTWORDS, \"MCHELLAN\" = :MCHELLAN, \"SCHELLAN\" = :SCHELLAN, \"SCHA" +
                "LL2\" = :SCHALL2, \"BEDAMTW\" = :BEDAMTW, \"TRANSITLOCID\" = :TRANSITLOCID, \"CSGNPART" +
                "YID\" = :CSGNPARTYID, \"PDOCID\" = :PDOCID, \"EXSTATUS\" = :EXSTATUS, \"STAXPER\" = :ST" +
                "AXPER, \"ADSCHEME\" = :ADSCHEME, \"PARTYMASTID\" = :PARTYMASTID, \"SUBDITEMMID\" = :SU" +
                "BDITEMMID, \"SUBDLOCID\" = :SUBDLOCID, \"SUBDRATE\" = :SUBDRATE, \"LOCDETAILSID\" = :L" +
                "OCDETAILSID, \"BSGST\" = :BSGST, \"BCGST\" = :BCGST, \"BIGST\" = :BIGST, \"TRANSP\" = :T" +
                "RANSP, \"TRANSMODE\" = :TRANSMODE, \"CUSTPO\" = :CUSTPO, \"ROFF\" = :ROFF, \"TCS\" = :TC" +
                "S, \"LUTNO\" = :LUTNO, \"LUTDT\" = :LUTDT, \"SEZ\" = :SEZ, \"BTCS\" = :BTCS, \"SALVAL\" = " +
                ":SALVAL, \"GSTNO\" = :GSTNO, \"PANNO\" = :PANNO, \"TDIST\" = :TDIST, \"TRANSCHGSP\" = :T" +
                "RANSCHGSP, \"RECVAL\" = :RECVAL, \"PARTYGROUP\" = :PARTYGROUP, \"SALLIMIT\" = :SALLIMI" +
                "T, \"ASALVAL\" = :ASALVAL, \"BSPLRATE\" = :BSPLRATE, \"RATECODE\" = :RATECODE, \"CRATEC" +
                "ODE\" = :CRATECODE, \"ADDT\" = :ADDT, \"SAVECTRL\" = :SAVECTRL, \"LIMITQ\" = :LIMITQ WH" +
                "ERE ((\"EXINVBASICID\" = :Original_EXINVBASICID) AND ((:IsNull_PROFITDOC = 1 AND \"" +
                "PROFITDOC\" IS NULL) OR (\"PROFITDOC\" = :Original_PROFITDOC)) AND ((:IsNull_APPROV" +
                "AL = 1 AND \"APPROVAL\" IS NULL) OR (\"APPROVAL\" = :Original_APPROVAL)) AND ((:IsNu" +
                "ll_APPROVALSTATUS = 1 AND \"APPROVALSTATUS\" IS NULL) OR (\"APPROVALSTATUS\" = :Orig" +
                "inal_APPROVALSTATUS)) AND ((:IsNull_MAXAPPROVED = 1 AND \"MAXAPPROVED\" IS NULL) O" +
                "R (\"MAXAPPROVED\" = :Original_MAXAPPROVED)) AND ((:IsNull_CANCEL = 1 AND \"CANCEL\"" +
                " IS NULL) OR (\"CANCEL\" = :Original_CANCEL)) AND ((:IsNull_T1SOURCEID = 1 AND \"T1" +
                "SOURCEID\" IS NULL) OR (\"T1SOURCEID\" = :Original_T1SOURCEID)) AND ((:IsNull_LATEM" +
                "PLATEID = 1 AND \"LATEMPLATEID\" IS NULL) OR (\"LATEMPLATEID\" = :Original_LATEMPLAT" +
                "EID)) AND ((:IsNull_BRANCHID = 1 AND \"BRANCHID\" IS NULL) OR (\"BRANCHID\" = :Origi" +
                "nal_BRANCHID)) AND ((:IsNull_VTYPE = 1 AND \"VTYPE\" IS NULL) OR (\"VTYPE\" = :Origi" +
                "nal_VTYPE)) AND ((:IsNull_DOCID = 1 AND \"DOCID\" IS NULL) OR (\"DOCID\" = :Original" +
                "_DOCID)) AND ((:IsNull_DOCDATE = 1 AND \"DOCDATE\" IS NULL) OR (\"DOCDATE\" = :Origi" +
                "nal_DOCDATE)) AND ((:IsNull_REFNO = 1 AND \"REFNO\" IS NULL) OR (\"REFNO\" = :Origin" +
                "al_REFNO)) AND ((:IsNull_REFDATE = 1 AND \"REFDATE\" IS NULL) OR (\"REFDATE\" = :Ori" +
                "ginal_REFDATE)) AND ((:IsNull_MAINCURRENCY = 1 AND \"MAINCURRENCY\" IS NULL) OR (\"" +
                "MAINCURRENCY\" = :Original_MAINCURRENCY)) AND ((:IsNull_SYMBOL = 1 AND \"SYMBOL\" I" +
                "S NULL) OR (\"SYMBOL\" = :Original_SYMBOL)) AND ((:IsNull_EXRATE = 1 AND \"EXRATE\" " +
                "IS NULL) OR (\"EXRATE\" = :Original_EXRATE)) AND ((:IsNull_PARTYID = 1 AND \"PARTYI" +
                "D\" IS NULL) OR (\"PARTYID\" = :Original_PARTYID)) AND ((:IsNull_PARTYNAME = 1 AND " +
                "\"PARTYNAME\" IS NULL) OR (\"PARTYNAME\" = :Original_PARTYNAME)) AND ((:IsNull_RECDB" +
                "Y = 1 AND \"RECDBY\" IS NULL) OR (\"RECDBY\" = :Original_RECDBY)) AND ((:IsNull_DESP" +
                "BY = 1 AND \"DESPBY\" IS NULL) OR (\"DESPBY\" = :Original_DESPBY)) AND ((:IsNull_INS" +
                "PBY = 1 AND \"INSPBY\" IS NULL) OR (\"INSPBY\" = :Original_INSPBY)) AND ((:IsNull_DO" +
                "CTHORUGH = 1 AND \"DOCTHORUGH\" IS NULL) OR (\"DOCTHORUGH\" = :Original_DOCTHORUGH))" +
                " AND ((:IsNull_CUSTACC = 1 AND \"CUSTACC\" IS NULL) OR (\"CUSTACC\" = :Original_CUST" +
                "ACC)) AND ((:IsNull_TEMPID = 1 AND \"TEMPID\" IS NULL) OR (\"TEMPID\" = :Original_TE" +
                "MPID)) AND ((:IsNull_ADTGMCONTROL = 1 AND \"ADTGMCONTROL\" IS NULL) OR (\"ADTGMCONT" +
                "ROL\" = :Original_ADTGMCONTROL)) AND ((:IsNull_RNDOFF = 1 AND \"RNDOFF\" IS NULL) O" +
                "R (\"RNDOFF\" = :Original_RNDOFF)) AND ((:IsNull_MOBILE = 1 AND \"MOBILE\" IS NULL) " +
                "OR (\"MOBILE\" = :Original_MOBILE)) AND ((:IsNull_TYPE = 1 AND \"TYPE\" IS NULL) OR " +
                "(\"TYPE\" = :Original_TYPE)) AND ((:IsNull_GROSS = 1 AND \"GROSS\" IS NULL) OR (\"GRO" +
                "SS\" = :Original_GROSS)) AND ((:IsNull_NET = 1 AND \"NET\" IS NULL) OR (\"NET\" = :Or" +
                "iginal_NET)) AND ((:IsNull_NARRATION = 1 AND \"NARRATION\" IS NULL) OR (\"NARRATION" +
                "\" = :Original_NARRATION)) AND ((:IsNull_LOCID = 1 AND \"LOCID\" IS NULL) OR (\"LOCI" +
                "D\" = :Original_LOCID)) AND ((:IsNull_CREDITLIMIT = 1 AND \"CREDITLIMIT\" IS NULL) " +
                "OR (\"CREDITLIMIT\" = :Original_CREDITLIMIT)) AND ((:IsNull_TRANSLIMIT = 1 AND \"TR" +
                "ANSLIMIT\" IS NULL) OR (\"TRANSLIMIT\" = :Original_TRANSLIMIT)) AND ((:IsNull_PARTY" +
                "BALANCE = 1 AND \"PARTYBALANCE\" IS NULL) OR (\"PARTYBALANCE\" = :Original_PARTYBALA" +
                "NCE)) AND ((:IsNull_CREDITDAYS = 1 AND \"CREDITDAYS\" IS NULL) OR (\"CREDITDAYS\" = " +
                ":Original_CREDITDAYS)) AND ((:IsNull_DUEDATE = 1 AND \"DUEDATE\" IS NULL) OR (\"DUE" +
                "DATE\" = :Original_DUEDATE)) AND ((:IsNull_FBED = 1 AND \"FBED\" IS NULL) OR (\"FBED" +
                "\" = :Original_FBED)) AND ((:IsNull_FCESS = 1 AND \"FCESS\" IS NULL) OR (\"FCESS\" = " +
                ":Original_FCESS)) AND ((:IsNull_FHSE = 1 AND \"FHSE\" IS NULL) OR (\"FHSE\" = :Origi" +
                "nal_FHSE)) AND ((:IsNull_INVTYPE = 1 AND \"INVTYPE\" IS NULL) OR (\"INVTYPE\" = :Ori" +
                "ginal_INVTYPE)) AND ((:IsNull_BINYN = 1 AND \"BINYN\" IS NULL) OR (\"BINYN\" = :Orig" +
                "inal_BINYN)) AND ((:IsNull_PACKRND = 1 AND \"PACKRND\" IS NULL) OR (\"PACKRND\" = :O" +
                "riginal_PACKRND)) AND ((:IsNull_OTHCHAR = 1 AND \"OTHCHAR\" IS NULL) OR (\"OTHCHAR\"" +
                " = :Original_OTHCHAR)) AND ((:IsNull_EORDTYPE = 1 AND \"EORDTYPE\" IS NULL) OR (\"E" +
                "ORDTYPE\" = :Original_EORDTYPE)) AND ((:IsNull_INVDESC = 1 AND \"INVDESC\" IS NULL)" +
                " OR (\"INVDESC\" = :Original_INVDESC)) AND ((:IsNull_VNO = 1 AND \"VNO\" IS NULL) OR" +
                " (\"VNO\" = :Original_VNO)) AND ((:IsNull_AMTWORDSBED = 1 AND \"AMTWORDSBED\" IS NUL" +
                "L) OR (\"AMTWORDSBED\" = :Original_AMTWORDSBED)) AND ((:IsNull_BFREIGHT = 1 AND \"B" +
                "FREIGHT\" IS NULL) OR (\"BFREIGHT\" = :Original_BFREIGHT)) AND ((:IsNull_BDISCOUNT " +
                "= 1 AND \"BDISCOUNT\" IS NULL) OR (\"BDISCOUNT\" = :Original_BDISCOUNT)) AND ((:IsNu" +
                "ll_FTAX = 1 AND \"FTAX\" IS NULL) OR (\"FTAX\" = :Original_FTAX)) AND ((:IsNull_TOTA" +
                "CCESAMOUNT = 1 AND \"TOTACCESAMOUNT\" IS NULL) OR (\"TOTACCESAMOUNT\" = :Original_TO" +
                "TACCESAMOUNT)) AND ((:IsNull_BDRUMS = 1 AND \"BDRUMS\" IS NULL) OR (\"BDRUMS\" = :Or" +
                "iginal_BDRUMS)) AND ((:IsNull_BTOTQTY = 1 AND \"BTOTQTY\" IS NULL) OR (\"BTOTQTY\" =" +
                " :Original_BTOTQTY)) AND ((:IsNull_BTOTAMT = 1 AND \"BTOTAMT\" IS NULL) OR (\"BTOTA" +
                "MT\" = :Original_BTOTAMT)) AND ((:IsNull_BTOTACCAMT = 1 AND \"BTOTACCAMT\" IS NULL)" +
                " OR (\"BTOTACCAMT\" = :Original_BTOTACCAMT)) AND ((:IsNull_BEDTRCH = 1 AND \"BEDTRC" +
                "H\" IS NULL) OR (\"BEDTRCH\" = :Original_BEDTRCH)) AND ((:IsNull_BEDTRAMT = 1 AND \"" +
                "BEDTRAMT\" IS NULL) OR (\"BEDTRAMT\" = :Original_BEDTRAMT)) AND ((:IsNull_BTOTPORLA" +
                "MT = 1 AND \"BTOTPORLAMT\" IS NULL) OR (\"BTOTPORLAMT\" = :Original_BTOTPORLAMT)) AN" +
                "D ((:IsNull_SERNO = 1 AND \"SERNO\" IS NULL) OR (\"SERNO\" = :Original_SERNO)) AND (" +
                "(:IsNull_DEPORECFLAG = 1 AND \"DEPORECFLAG\" IS NULL) OR (\"DEPORECFLAG\" = :Origina" +
                "l_DEPORECFLAG)) AND ((:IsNull_FCFLAG = 1 AND \"FCFLAG\" IS NULL) OR (\"FCFLAG\" = :O" +
                "riginal_FCFLAG)) AND ((:IsNull_COMMCODE = 1 AND \"COMMCODE\" IS NULL) OR (\"COMMCOD" +
                "E\" = :Original_COMMCODE)) AND ((:IsNull_AMTWORDS = 1 AND \"AMTWORDS\" IS NULL) OR " +
                "(\"AMTWORDS\" = :Original_AMTWORDS)) AND ((:IsNull_MCHELLAN = 1 AND \"MCHELLAN\" IS " +
                "NULL) OR (\"MCHELLAN\" = :Original_MCHELLAN)) AND ((:IsNull_SCHELLAN = 1 AND \"SCHE" +
                "LLAN\" IS NULL) OR (\"SCHELLAN\" = :Original_SCHELLAN)) AND ((:IsNull_SCHALL2 = 1 A" +
                "ND \"SCHALL2\" IS NULL) OR (\"SCHALL2\" = :Original_SCHALL2)) AND ((:IsNull_BEDAMTW " +
                "= 1 AND \"BEDAMTW\" IS NULL) OR (\"BEDAMTW\" = :Original_BEDAMTW)) AND ((:IsNull_TRA" +
                "NSITLOCID = 1 AND \"TRANSITLOCID\" IS NULL) OR (\"TRANSITLOCID\" = :Original_TRANSIT" +
                "LOCID)) AND ((:IsNull_CSGNPARTYID = 1 AND \"CSGNPARTYID\" IS NULL) OR (\"CSGNPARTYI" +
                "D\" = :Original_CSGNPARTYID)) AND ((:IsNull_PDOCID = 1 AND \"PDOCID\" IS NULL) OR (" +
                "\"PDOCID\" = :Original_PDOCID)) AND ((:IsNull_EXSTATUS = 1 AND \"EXSTATUS\" IS NULL)" +
                " OR (\"EXSTATUS\" = :Original_EXSTATUS)) AND ((:IsNull_STAXPER = 1 AND \"STAXPER\" I" +
                "S NULL) OR (\"STAXPER\" = :Original_STAXPER)) AND ((:IsNull_ADSCHEME = 1 AND \"ADSC" +
                "HEME\" IS NULL) OR (\"ADSCHEME\" = :Original_ADSCHEME)) AND ((:IsNull_PARTYMASTID =" +
                " 1 AND \"PARTYMASTID\" IS NULL) OR (\"PARTYMASTID\" = :Original_PARTYMASTID)) AND ((" +
                ":IsNull_SUBDITEMMID = 1 AND \"SUBDITEMMID\" IS NULL) OR (\"SUBDITEMMID\" = :Original" +
                "_SUBDITEMMID)) AND ((:IsNull_SUBDLOCID = 1 AND \"SUBDLOCID\" IS NULL) OR (\"SUBDLOC" +
                "ID\" = :Original_SUBDLOCID)) AND ((:IsNull_SUBDRATE = 1 AND \"SUBDRATE\" IS NULL) O" +
                "R (\"SUBDRATE\" = :Original_SUBDRATE)) AND ((:IsNull_LOCDETAILSID = 1 AND \"LOCDETA" +
                "ILSID\" IS NULL) OR (\"LOCDETAILSID\" = :Original_LOCDETAILSID)) AND ((:IsNull_BSGS" +
                "T = 1 AND \"BSGST\" IS NULL) OR (\"BSGST\" = :Original_BSGST)) AND ((:IsNull_BCGST =" +
                " 1 AND \"BCGST\" IS NULL) OR (\"BCGST\" = :Original_BCGST)) AND ((:IsNull_BIGST = 1 " +
                "AND \"BIGST\" IS NULL) OR (\"BIGST\" = :Original_BIGST)) AND ((:IsNull_TRANSP = 1 AN" +
                "D \"TRANSP\" IS NULL) OR (\"TRANSP\" = :Original_TRANSP)) AND ((:IsNull_TRANSMODE = " +
                "1 AND \"TRANSMODE\" IS NULL) OR (\"TRANSMODE\" = :Original_TRANSMODE)) AND ((:IsNull" +
                "_CUSTPO = 1 AND \"CUSTPO\" IS NULL) OR (\"CUSTPO\" = :Original_CUSTPO)) AND ((:IsNul" +
                "l_ROFF = 1 AND \"ROFF\" IS NULL) OR (\"ROFF\" = :Original_ROFF)) AND ((:IsNull_TCS =" +
                " 1 AND \"TCS\" IS NULL) OR (\"TCS\" = :Original_TCS)) AND ((:IsNull_LUTNO = 1 AND \"L" +
                "UTNO\" IS NULL) OR (\"LUTNO\" = :Original_LUTNO)) AND ((:IsNull_LUTDT = 1 AND \"LUTD" +
                "T\" IS NULL) OR (\"LUTDT\" = :Original_LUTDT)) AND ((:IsNull_SEZ = 1 AND \"SEZ\" IS N" +
                "ULL) OR (\"SEZ\" = :Original_SEZ)) AND ((:IsNull_BTCS = 1 AND \"BTCS\" IS NULL) OR (" +
                "\"BTCS\" = :Original_BTCS)) AND ((:IsNull_SALVAL = 1 AND \"SALVAL\" IS NULL) OR (\"SA" +
                "LVAL\" = :Original_SALVAL)) AND ((:IsNull_GSTNO = 1 AND \"GSTNO\" IS NULL) OR (\"GST" +
                "NO\" = :Original_GSTNO)) AND ((:IsNull_PANNO = 1 AND \"PANNO\" IS NULL) OR (\"PANNO\"" +
                " = :Original_PANNO)) AND ((:IsNull_TDIST = 1 AND \"TDIST\" IS NULL) OR (\"TDIST\" = " +
                ":Original_TDIST)) AND ((:IsNull_TRANSCHGSP = 1 AND \"TRANSCHGSP\" IS NULL) OR (\"TR" +
                "ANSCHGSP\" = :Original_TRANSCHGSP)) AND ((:IsNull_RECVAL = 1 AND \"RECVAL\" IS NULL" +
                ") OR (\"RECVAL\" = :Original_RECVAL)) AND ((:IsNull_PARTYGROUP = 1 AND \"PARTYGROUP" +
                "\" IS NULL) OR (\"PARTYGROUP\" = :Original_PARTYGROUP)) AND ((:IsNull_SALLIMIT = 1 " +
                "AND \"SALLIMIT\" IS NULL) OR (\"SALLIMIT\" = :Original_SALLIMIT)) AND ((:IsNull_ASAL" +
                "VAL = 1 AND \"ASALVAL\" IS NULL) OR (\"ASALVAL\" = :Original_ASALVAL)) AND ((:IsNull" +
                "_BSPLRATE = 1 AND \"BSPLRATE\" IS NULL) OR (\"BSPLRATE\" = :Original_BSPLRATE)) AND " +
                "((:IsNull_RATECODE = 1 AND \"RATECODE\" IS NULL) OR (\"RATECODE\" = :Original_RATECO" +
                "DE)) AND ((:IsNull_CRATECODE = 1 AND \"CRATECODE\" IS NULL) OR (\"CRATECODE\" = :Ori" +
                "ginal_CRATECODE)) AND ((:IsNull_ADDT = 1 AND \"ADDT\" IS NULL) OR (\"ADDT\" = :Origi" +
                "nal_ADDT)) AND ((:IsNull_SAVECTRL = 1 AND \"SAVECTRL\" IS NULL) OR (\"SAVECTRL\" = :" +
                "Original_SAVECTRL)) AND ((:IsNull_LIMITQ = 1 AND \"LIMITQ\" IS NULL) OR (\"LIMITQ\" " +
                "= :Original_LIMITQ)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PROFITDOC";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPROVAL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CANCEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "T1SOURCEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BRANCHID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "VTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "REFDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SYMBOL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SYMBOL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RECDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "RECDBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DESPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DESPBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INSPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INSPBY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DOCTHORUGH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DOCTHORUGH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CUSTACC";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CUSTACC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TEMPID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TEMPID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADTGMCONTROL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RNDOFF";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MOBILE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "MOBILE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GROSS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NET";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "NARRATION";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "NARRATION";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREDITLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITLIMIT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSLIMIT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYBALANCE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBALANCE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CREDITDAYS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITDAYS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FBED";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FBED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FCESS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCESS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FHSE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FHSE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INVTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INVTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BINYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PACKRND";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PACKRND";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "OTHCHAR";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHCHAR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EORDTYPE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "INVDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "INVDESC";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "VNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "VNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMTWORDSBED";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDSBED";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BFREIGHT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BFREIGHT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BDISCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDISCOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FTAX";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FTAX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TOTACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTACCESAMOUNT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BDRUMS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDRUMS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTQTY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTACCAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTACCAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDTRCH";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRCH";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDTRAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTOTPORLAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTPORLAMT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SERNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "SERNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "DEPORECFLAG";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DEPORECFLAG";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "FCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCFLAG";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "COMMCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "COMMCODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "AMTWORDS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "MCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 75;
            param.IsNullable = true;
            param.SourceColumn = "MCHELLAN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHELLAN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SCHALL2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHALL2";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BEDAMTW";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMTW";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSITLOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CSGNPARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSGNPARTYID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PDOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PDOCID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "EXSTATUS";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "STAXPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "STAXPER";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADSCHEME";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYMASTID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYMASTID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDITEMMID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDITEMMID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDLOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "SUBDLOCID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SUBDRATE";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LOCDETAILSID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILSID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BSGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BSGST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BCGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCGST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BIGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BIGST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSP";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSMODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSMODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CUSTPO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "CUSTPO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ROFF";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROFF";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LUTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LUTNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LUTDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LUTDT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SEZ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "SEZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BTCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTCS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALVAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "GSTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "GSTNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PANNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "PANNO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TDIST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDIST";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "TRANSCHGSP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSCHGSP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RECVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RECVAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "PARTYGROUP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "PARTYGROUP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SALLIMIT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALLIMIT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ASALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASALVAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "BSPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BSPLRATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "RATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RATECODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "CRATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "CRATECODE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ADDT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADDT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "SAVECTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SAVECTRL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "LIMITQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LIMITQ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXINVBASICID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXINVBASICID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PROFITDOC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PROFITDOC";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "PROFITDOC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_APPROVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_APPROVAL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "APPROVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_APPROVALSTATUS";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "APPROVALSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MAXAPPROVED";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAXAPPROVED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CANCEL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CANCEL";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Char;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "CANCEL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_T1SOURCEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_T1SOURCEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "T1SOURCEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LATEMPLATEID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LATEMPLATEID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BRANCHID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BRANCHID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BRANCHID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_VTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_VTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "VTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "DOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DOCDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "REFNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_REFDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REFDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "REFDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MAINCURRENCY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "MAINCURRENCY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SYMBOL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SYMBOL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SYMBOL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "SYMBOL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXRATE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYNAME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYNAME";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "PARTYNAME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RECDBY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "RECDBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RECDBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "RECDBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DESPBY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DESPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DESPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DESPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INSPBY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INSPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INSPBY";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INSPBY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DOCTHORUGH";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DOCTHORUGH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DOCTHORUGH";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 25;
            param.IsNullable = true;
            param.SourceColumn = "DOCTHORUGH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUSTACC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CUSTACC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUSTACC";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CUSTACC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TEMPID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TEMPID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TEMPID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TEMPID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADTGMCONTROL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADTGMCONTROL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "ADTGMCONTROL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RNDOFF";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RNDOFF";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RNDOFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MOBILE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "MOBILE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MOBILE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "MOBILE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = "TYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GROSS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GROSS";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "GROSS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NET";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NET";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "NET";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_NARRATION";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "NARRATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_NARRATION";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "NARRATION";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CREDITLIMIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CREDITLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSLIMIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSLIMIT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYBALANCE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBALANCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYBALANCE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYBALANCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CREDITDAYS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITDAYS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CREDITDAYS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CREDITDAYS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DUEDATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DUEDATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "DUEDATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FBED";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FBED";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FCESS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FCESS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCESS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FHSE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FHSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FHSE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FHSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INVTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INVTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INVTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "INVTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BINYN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BINYN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BINYN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PACKRND";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PACKRND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PACKRND";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PACKRND";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_OTHCHAR";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHCHAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_OTHCHAR";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "OTHCHAR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EORDTYPE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EORDTYPE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "EORDTYPE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_INVDESC";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "INVDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_INVDESC";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "INVDESC";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_VNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "VNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_VNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "VNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AMTWORDSBED";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDSBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AMTWORDSBED";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 100;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDSBED";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BFREIGHT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BFREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BFREIGHT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BFREIGHT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BDISCOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BDISCOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDISCOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FTAX";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FTAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FTAX";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FTAX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TOTACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TOTACCESAMOUNT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TOTACCESAMOUNT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BDRUMS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDRUMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BDRUMS";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BDRUMS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTQTY";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTQTY";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTQTY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTACCAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTACCAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTACCAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTACCAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDTRCH";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRCH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDTRCH";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRCH";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDTRAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDTRAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BEDTRAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTOTPORLAMT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTPORLAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTOTPORLAMT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTOTPORLAMT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SERNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "SERNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SERNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "SERNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_DEPORECFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DEPORECFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_DEPORECFLAG";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DEPORECFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_FCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FCFLAG";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FCFLAG";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_COMMCODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "COMMCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_COMMCODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "COMMCODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_AMTWORDS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_AMTWORDS";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "AMTWORDS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_MCHELLAN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 75;
            param.IsNullable = true;
            param.SourceColumn = "MCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_MCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 75;
            param.IsNullable = true;
            param.SourceColumn = "MCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SCHELLAN";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SCHELLAN";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHELLAN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SCHALL2";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHALL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SCHALL2";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 250;
            param.IsNullable = true;
            param.SourceColumn = "SCHALL2";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BEDAMTW";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMTW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BEDAMTW";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "BEDAMTW";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSITLOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSITLOCID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSITLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CSGNPARTYID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSGNPARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CSGNPARTYID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "CSGNPARTYID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PDOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PDOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PDOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "PDOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_EXSTATUS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXSTATUS";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int16;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXSTATUS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_STAXPER";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "STAXPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_STAXPER";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "STAXPER";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADSCHEME";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADSCHEME";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADSCHEME";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYMASTID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYMASTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYMASTID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PARTYMASTID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDITEMMID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDITEMMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDITEMMID";
            param.DbType = global::System.Data.DbType.Int64;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int64;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDITEMMID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDLOCID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "SUBDLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDLOCID";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 16;
            param.IsNullable = true;
            param.SourceColumn = "SUBDLOCID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SUBDRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SUBDRATE";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SUBDRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LOCDETAILSID";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILSID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LOCDETAILSID";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LOCDETAILSID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BSGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BSGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BSGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BSGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BCGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BCGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BCGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BIGST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BIGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BIGST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BIGST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSP";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TRANSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSMODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSMODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSMODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSMODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CUSTPO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "CUSTPO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CUSTPO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "CUSTPO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ROFF";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ROFF";
            param.DbType = global::System.Data.DbType.Single;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Single;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ROFF";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TCS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LUTNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LUTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LUTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "LUTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LUTDT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LUTDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LUTDT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "LUTDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SEZ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "SEZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SEZ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "SEZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BTCS";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BTCS";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "BTCS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SALVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_GSTNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "GSTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_GSTNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "GSTNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PANNO";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "PANNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PANNO";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "PANNO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TDIST";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDIST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TDIST";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "TDIST";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_TRANSCHGSP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSCHGSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_TRANSCHGSP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "TRANSCHGSP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RECVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RECVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RECVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "RECVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_PARTYGROUP";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "PARTYGROUP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PARTYGROUP";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "PARTYGROUP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SALLIMIT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SALLIMIT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "SALLIMIT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ASALVAL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ASALVAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ASALVAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_BSPLRATE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BSPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_BSPLRATE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 3;
            param.IsNullable = true;
            param.SourceColumn = "BSPLRATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_RATECODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_RATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "RATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_CRATECODE";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "CRATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_CRATECODE";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 15;
            param.IsNullable = true;
            param.SourceColumn = "CRATECODE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ADDT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ADDT";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ADDT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_SAVECTRL";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SAVECTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SAVECTRL";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "SAVECTRL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LIMITQ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LIMITQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIMITQ";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Double;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "LIMITQ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = "DATA SOURCE=192.168.0.7:1521/orcl;TNS_ADMIN=C:\\Users\\rames\\Oracle\\network\\admin;P" +
                "ERSIST SECURITY INFO=True;USER ID=TAAIERP";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT EXINVBASICID, PROFITDOC, APPROVAL, APPROVALSTATUS, MAXAPPROVED, CANCEL, T1SOURCEID, LATEMPLATEID, BRANCHID, VTYPE, DOCID, DOCDATE, REFNO, REFDATE, MAINCURRENCY, SYMBOL, EXRATE, PARTYID, PARTYNAME, RECDBY, DESPBY, INSPBY, DOCTHORUGH, CUSTACC, TEMPID, ADTGMCONTROL, RNDOFF, MOBILE, ""TYPE"", GROSS, NET, NARRATION, LOCID, CREDITLIMIT, TRANSLIMIT, PARTYBALANCE, CREDITDAYS, DUEDATE, FBED, FCESS, FHSE, INVTYPE, BINYN, PACKRND, OTHCHAR, EORDTYPE, INVDESC, VNO, AMTWORDSBED, BFREIGHT, BDISCOUNT, FTAX, TOTACCESAMOUNT, BDRUMS, BTOTQTY, BTOTAMT, BTOTACCAMT, BEDTRCH, BEDTRAMT, BTOTPORLAMT, SERNO, DEPORECFLAG, FCFLAG, COMMCODE, AMTWORDS, MCHELLAN, SCHELLAN, SCHALL2, BEDAMTW, TRANSITLOCID, CSGNPARTYID, PDOCID, EXSTATUS, STAXPER, ADSCHEME, PARTYMASTID, SUBDITEMMID, SUBDLOCID, SUBDRATE, LOCDETAILSID, BSGST, BCGST, BIGST, TRANSP, TRANSMODE, CUSTPO, ROFF, TCS, LUTNO, LUTDT, SEZ, BTCS, SALVAL, GSTNO, PANNO, TDIST, TRANSCHGSP, RECVAL, PARTYGROUP, SALLIMIT, ASALVAL, BSPLRATE, RATECODE, CRATECODE, ADDT, SAVECTRL, LIMITQ FROM TAAIERP.EXINVBASIC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Exinvbasic.EXINVBASICDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Exinvbasic.EXINVBASICDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Exinvbasic.EXINVBASICDataTable dataTable = new Exinvbasic.EXINVBASICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Exinvbasic.EXINVBASICDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Exinvbasic dataSet) {
            return this.Adapter.Update(dataSet, "EXINVBASIC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_EXINVBASICID, 
                    string Original_PROFITDOC, 
                    global::System.Nullable<decimal> Original_APPROVAL, 
                    string Original_APPROVALSTATUS, 
                    global::System.Nullable<short> Original_MAXAPPROVED, 
                    string Original_CANCEL, 
                    global::System.Nullable<decimal> Original_T1SOURCEID, 
                    global::System.Nullable<decimal> Original_LATEMPLATEID, 
                    global::System.Nullable<decimal> Original_BRANCHID, 
                    string Original_VTYPE, 
                    string Original_DOCID, 
                    global::System.Nullable<global::System.DateTime> Original_DOCDATE, 
                    string Original_REFNO, 
                    global::System.Nullable<global::System.DateTime> Original_REFDATE, 
                    global::System.Nullable<decimal> Original_MAINCURRENCY, 
                    string Original_SYMBOL, 
                    global::System.Nullable<decimal> Original_EXRATE, 
                    global::System.Nullable<decimal> Original_PARTYID, 
                    string Original_PARTYNAME, 
                    string Original_RECDBY, 
                    string Original_DESPBY, 
                    string Original_INSPBY, 
                    string Original_DOCTHORUGH, 
                    global::System.Nullable<decimal> Original_CUSTACC, 
                    global::System.Nullable<decimal> Original_TEMPID, 
                    string Original_ADTGMCONTROL, 
                    global::System.Nullable<long> Original_RNDOFF, 
                    string Original_MOBILE, 
                    string Original_TYPE, 
                    global::System.Nullable<decimal> Original_GROSS, 
                    global::System.Nullable<decimal> Original_NET, 
                    string Original_NARRATION, 
                    global::System.Nullable<decimal> Original_LOCID, 
                    global::System.Nullable<decimal> Original_CREDITLIMIT, 
                    global::System.Nullable<decimal> Original_TRANSLIMIT, 
                    global::System.Nullable<decimal> Original_PARTYBALANCE, 
                    global::System.Nullable<long> Original_CREDITDAYS, 
                    global::System.Nullable<global::System.DateTime> Original_DUEDATE, 
                    global::System.Nullable<double> Original_FBED, 
                    global::System.Nullable<double> Original_FCESS, 
                    global::System.Nullable<double> Original_FHSE, 
                    string Original_INVTYPE, 
                    string Original_BINYN, 
                    global::System.Nullable<float> Original_PACKRND, 
                    global::System.Nullable<float> Original_OTHCHAR, 
                    string Original_EORDTYPE, 
                    string Original_INVDESC, 
                    string Original_VNO, 
                    string Original_AMTWORDSBED, 
                    global::System.Nullable<decimal> Original_BFREIGHT, 
                    global::System.Nullable<decimal> Original_BDISCOUNT, 
                    global::System.Nullable<double> Original_FTAX, 
                    global::System.Nullable<decimal> Original_TOTACCESAMOUNT, 
                    global::System.Nullable<long> Original_BDRUMS, 
                    global::System.Nullable<decimal> Original_BTOTQTY, 
                    global::System.Nullable<decimal> Original_BTOTAMT, 
                    global::System.Nullable<decimal> Original_BTOTACCAMT, 
                    global::System.Nullable<float> Original_BEDTRCH, 
                    global::System.Nullable<decimal> Original_BEDTRAMT, 
                    global::System.Nullable<decimal> Original_BTOTPORLAMT, 
                    string Original_SERNO, 
                    global::System.Nullable<short> Original_DEPORECFLAG, 
                    global::System.Nullable<int> Original_FCFLAG, 
                    string Original_COMMCODE, 
                    string Original_AMTWORDS, 
                    string Original_MCHELLAN, 
                    string Original_SCHELLAN, 
                    string Original_SCHALL2, 
                    string Original_BEDAMTW, 
                    global::System.Nullable<decimal> Original_TRANSITLOCID, 
                    global::System.Nullable<decimal> Original_CSGNPARTYID, 
                    string Original_PDOCID, 
                    global::System.Nullable<short> Original_EXSTATUS, 
                    global::System.Nullable<float> Original_STAXPER, 
                    global::System.Nullable<decimal> Original_ADSCHEME, 
                    global::System.Nullable<long> Original_PARTYMASTID, 
                    global::System.Nullable<long> Original_SUBDITEMMID, 
                    string Original_SUBDLOCID, 
                    global::System.Nullable<float> Original_SUBDRATE, 
                    global::System.Nullable<decimal> Original_LOCDETAILSID, 
                    global::System.Nullable<double> Original_BSGST, 
                    global::System.Nullable<double> Original_BCGST, 
                    global::System.Nullable<double> Original_BIGST, 
                    global::System.Nullable<decimal> Original_TRANSP, 
                    string Original_TRANSMODE, 
                    string Original_CUSTPO, 
                    global::System.Nullable<float> Original_ROFF, 
                    global::System.Nullable<double> Original_TCS, 
                    string Original_LUTNO, 
                    global::System.Nullable<global::System.DateTime> Original_LUTDT, 
                    string Original_SEZ, 
                    global::System.Nullable<double> Original_BTCS, 
                    global::System.Nullable<double> Original_SALVAL, 
                    string Original_GSTNO, 
                    string Original_PANNO, 
                    global::System.Nullable<double> Original_TDIST, 
                    string Original_TRANSCHGSP, 
                    global::System.Nullable<double> Original_RECVAL, 
                    string Original_PARTYGROUP, 
                    global::System.Nullable<double> Original_SALLIMIT, 
                    global::System.Nullable<double> Original_ASALVAL, 
                    string Original_BSPLRATE, 
                    string Original_RATECODE, 
                    string Original_CRATECODE, 
                    global::System.Nullable<double> Original_ADDT, 
                    string Original_SAVECTRL, 
                    global::System.Nullable<double> Original_LIMITQ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_EXINVBASICID));
            if ((Original_PROFITDOC == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PROFITDOC));
            }
            if ((Original_APPROVAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_APPROVAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_APPROVALSTATUS == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_APPROVALSTATUS));
            }
            if ((Original_MAXAPPROVED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_MAXAPPROVED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_CANCEL == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CANCEL));
            }
            if ((Original_T1SOURCEID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_T1SOURCEID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_LATEMPLATEID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_LATEMPLATEID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_BRANCHID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_BRANCHID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_VTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_VTYPE));
            }
            if ((Original_DOCID == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_DOCID));
            }
            if ((Original_DOCDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_DOCDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_REFNO == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_REFNO));
            }
            if ((Original_REFDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_REFDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MAINCURRENCY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_MAINCURRENCY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_SYMBOL == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SYMBOL));
            }
            if ((Original_EXRATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_EXRATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_PARTYID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_PARTYNAME));
            }
            if ((Original_RECDBY == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_RECDBY));
            }
            if ((Original_DESPBY == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_DESPBY));
            }
            if ((Original_INSPBY == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_INSPBY));
            }
            if ((Original_DOCTHORUGH == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_DOCTHORUGH));
            }
            if ((Original_CUSTACC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_CUSTACC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_TEMPID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_TEMPID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_ADTGMCONTROL == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_ADTGMCONTROL));
            }
            if ((Original_RNDOFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((long)(Original_RNDOFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_MOBILE == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_MOBILE));
            }
            if ((Original_TYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_TYPE));
            }
            if ((Original_GROSS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_GROSS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_NET.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_NET.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_NARRATION == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_NARRATION));
            }
            if ((Original_LOCID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_LOCID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_CREDITLIMIT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((decimal)(Original_CREDITLIMIT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSLIMIT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((decimal)(Original_TRANSLIMIT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYBALANCE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((decimal)(Original_PARTYBALANCE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_CREDITDAYS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((long)(Original_CREDITDAYS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_DUEDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_DUEDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_FBED.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((double)(Original_FBED.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_FCESS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((double)(Original_FCESS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_FHSE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((double)(Original_FHSE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_INVTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_INVTYPE));
            }
            if ((Original_BINYN == null)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_BINYN));
            }
            if ((Original_PACKRND.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((float)(Original_PACKRND.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_OTHCHAR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((float)(Original_OTHCHAR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_EORDTYPE == null)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_EORDTYPE));
            }
            if ((Original_INVDESC == null)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_INVDESC));
            }
            if ((Original_VNO == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_VNO));
            }
            if ((Original_AMTWORDSBED == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_AMTWORDSBED));
            }
            if ((Original_BFREIGHT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((decimal)(Original_BFREIGHT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_BDISCOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((decimal)(Original_BDISCOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_FTAX.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((double)(Original_FTAX.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_TOTACCESAMOUNT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((decimal)(Original_TOTACCESAMOUNT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_BDRUMS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((long)(Original_BDRUMS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTQTY.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((decimal)(Original_BTOTQTY.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((decimal)(Original_BTOTAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTACCAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((decimal)(Original_BTOTACCAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDTRCH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((float)(Original_BEDTRCH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDTRAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((decimal)(Original_BEDTRAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTPORLAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((decimal)(Original_BTOTPORLAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_SERNO == null)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((string)(Original_SERNO));
            }
            if ((Original_DEPORECFLAG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((short)(Original_DEPORECFLAG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_FCFLAG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((int)(Original_FCFLAG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_COMMCODE == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_COMMCODE));
            }
            if ((Original_AMTWORDS == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_AMTWORDS));
            }
            if ((Original_MCHELLAN == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_MCHELLAN));
            }
            if ((Original_SCHELLAN == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_SCHELLAN));
            }
            if ((Original_SCHALL2 == null)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((string)(Original_SCHALL2));
            }
            if ((Original_BEDAMTW == null)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((string)(Original_BEDAMTW));
            }
            if ((Original_TRANSITLOCID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((decimal)(Original_TRANSITLOCID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((Original_CSGNPARTYID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((decimal)(Original_CSGNPARTYID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_PDOCID == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_PDOCID));
            }
            if ((Original_EXSTATUS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((short)(Original_EXSTATUS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_STAXPER.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((float)(Original_STAXPER.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_ADSCHEME.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((decimal)(Original_ADSCHEME.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYMASTID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((long)(Original_PARTYMASTID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBDITEMMID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((long)(Original_SUBDITEMMID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBDLOCID == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_SUBDLOCID));
            }
            if ((Original_SUBDRATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((float)(Original_SUBDRATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_LOCDETAILSID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((decimal)(Original_LOCDETAILSID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_BSGST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((double)(Original_BSGST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_BCGST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((double)(Original_BCGST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_BIGST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[164].Value = ((double)(Original_BIGST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[166].Value = ((decimal)(Original_TRANSP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSMODE == null)) {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[168].Value = ((string)(Original_TRANSMODE));
            }
            if ((Original_CUSTPO == null)) {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[170].Value = ((string)(Original_CUSTPO));
            }
            if ((Original_ROFF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[172].Value = ((float)(Original_ROFF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_TCS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[174].Value = ((double)(Original_TCS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            if ((Original_LUTNO == null)) {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[176].Value = ((string)(Original_LUTNO));
            }
            if ((Original_LUTDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[178].Value = ((System.DateTime)(Original_LUTDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            if ((Original_SEZ == null)) {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[180].Value = ((string)(Original_SEZ));
            }
            if ((Original_BTCS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[182].Value = ((double)(Original_BTCS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_SALVAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[184].Value = ((double)(Original_SALVAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_GSTNO == null)) {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[186].Value = ((string)(Original_GSTNO));
            }
            if ((Original_PANNO == null)) {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[188].Value = ((string)(Original_PANNO));
            }
            if ((Original_TDIST.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[190].Value = ((double)(Original_TDIST.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSCHGSP == null)) {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[192].Value = ((string)(Original_TRANSCHGSP));
            }
            if ((Original_RECVAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[194].Value = ((double)(Original_RECVAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYGROUP == null)) {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[196].Value = ((string)(Original_PARTYGROUP));
            }
            if ((Original_SALLIMIT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[198].Value = ((double)(Original_SALLIMIT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_ASALVAL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[200].Value = ((double)(Original_ASALVAL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_BSPLRATE == null)) {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[202].Value = ((string)(Original_BSPLRATE));
            }
            if ((Original_RATECODE == null)) {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[204].Value = ((string)(Original_RATECODE));
            }
            if ((Original_CRATECODE == null)) {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[206].Value = ((string)(Original_CRATECODE));
            }
            if ((Original_ADDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[208].Value = ((double)(Original_ADDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_SAVECTRL == null)) {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[210].Value = ((string)(Original_SAVECTRL));
            }
            if ((Original_LIMITQ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[212].Value = ((double)(Original_LIMITQ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal EXINVBASICID, 
                    string PROFITDOC, 
                    global::System.Nullable<decimal> APPROVAL, 
                    string APPROVALSTATUS, 
                    global::System.Nullable<short> MAXAPPROVED, 
                    string CANCEL, 
                    global::System.Nullable<decimal> T1SOURCEID, 
                    global::System.Nullable<decimal> LATEMPLATEID, 
                    global::System.Nullable<decimal> BRANCHID, 
                    string VTYPE, 
                    string DOCID, 
                    global::System.Nullable<global::System.DateTime> DOCDATE, 
                    string REFNO, 
                    global::System.Nullable<global::System.DateTime> REFDATE, 
                    global::System.Nullable<decimal> MAINCURRENCY, 
                    string SYMBOL, 
                    global::System.Nullable<decimal> EXRATE, 
                    global::System.Nullable<decimal> PARTYID, 
                    string PARTYNAME, 
                    string RECDBY, 
                    string DESPBY, 
                    string INSPBY, 
                    string DOCTHORUGH, 
                    global::System.Nullable<decimal> CUSTACC, 
                    global::System.Nullable<decimal> TEMPID, 
                    string ADTGMCONTROL, 
                    global::System.Nullable<long> RNDOFF, 
                    string MOBILE, 
                    string TYPE, 
                    global::System.Nullable<decimal> GROSS, 
                    global::System.Nullable<decimal> NET, 
                    string NARRATION, 
                    global::System.Nullable<decimal> LOCID, 
                    global::System.Nullable<decimal> CREDITLIMIT, 
                    global::System.Nullable<decimal> TRANSLIMIT, 
                    global::System.Nullable<decimal> PARTYBALANCE, 
                    global::System.Nullable<long> CREDITDAYS, 
                    global::System.Nullable<global::System.DateTime> DUEDATE, 
                    global::System.Nullable<double> FBED, 
                    global::System.Nullable<double> FCESS, 
                    global::System.Nullable<double> FHSE, 
                    string INVTYPE, 
                    string BINYN, 
                    global::System.Nullable<float> PACKRND, 
                    global::System.Nullable<float> OTHCHAR, 
                    string EORDTYPE, 
                    string INVDESC, 
                    string VNO, 
                    string AMTWORDSBED, 
                    global::System.Nullable<decimal> BFREIGHT, 
                    global::System.Nullable<decimal> BDISCOUNT, 
                    global::System.Nullable<double> FTAX, 
                    global::System.Nullable<decimal> TOTACCESAMOUNT, 
                    global::System.Nullable<long> BDRUMS, 
                    global::System.Nullable<decimal> BTOTQTY, 
                    global::System.Nullable<decimal> BTOTAMT, 
                    global::System.Nullable<decimal> BTOTACCAMT, 
                    global::System.Nullable<float> BEDTRCH, 
                    global::System.Nullable<decimal> BEDTRAMT, 
                    global::System.Nullable<decimal> BTOTPORLAMT, 
                    string SERNO, 
                    global::System.Nullable<short> DEPORECFLAG, 
                    global::System.Nullable<int> FCFLAG, 
                    string COMMCODE, 
                    string AMTWORDS, 
                    string MCHELLAN, 
                    string SCHELLAN, 
                    string SCHALL2, 
                    string BEDAMTW, 
                    global::System.Nullable<decimal> TRANSITLOCID, 
                    global::System.Nullable<decimal> CSGNPARTYID, 
                    string PDOCID, 
                    global::System.Nullable<short> EXSTATUS, 
                    global::System.Nullable<float> STAXPER, 
                    global::System.Nullable<decimal> ADSCHEME, 
                    global::System.Nullable<long> PARTYMASTID, 
                    global::System.Nullable<long> SUBDITEMMID, 
                    string SUBDLOCID, 
                    global::System.Nullable<float> SUBDRATE, 
                    global::System.Nullable<decimal> LOCDETAILSID, 
                    global::System.Nullable<double> BSGST, 
                    global::System.Nullable<double> BCGST, 
                    global::System.Nullable<double> BIGST, 
                    global::System.Nullable<decimal> TRANSP, 
                    string TRANSMODE, 
                    string CUSTPO, 
                    global::System.Nullable<float> ROFF, 
                    global::System.Nullable<double> TCS, 
                    string LUTNO, 
                    global::System.Nullable<global::System.DateTime> LUTDT, 
                    string SEZ, 
                    global::System.Nullable<double> BTCS, 
                    global::System.Nullable<double> SALVAL, 
                    string GSTNO, 
                    string PANNO, 
                    global::System.Nullable<double> TDIST, 
                    string TRANSCHGSP, 
                    global::System.Nullable<double> RECVAL, 
                    string PARTYGROUP, 
                    global::System.Nullable<double> SALLIMIT, 
                    global::System.Nullable<double> ASALVAL, 
                    string BSPLRATE, 
                    string RATECODE, 
                    string CRATECODE, 
                    global::System.Nullable<double> ADDT, 
                    string SAVECTRL, 
                    global::System.Nullable<double> LIMITQ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(EXINVBASICID));
            if ((PROFITDOC == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PROFITDOC));
            }
            if ((APPROVAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(APPROVAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((APPROVALSTATUS == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(APPROVALSTATUS));
            }
            if ((MAXAPPROVED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(MAXAPPROVED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CANCEL == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CANCEL));
            }
            if ((T1SOURCEID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(T1SOURCEID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((LATEMPLATEID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(LATEMPLATEID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BRANCHID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(BRANCHID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((VTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(VTYPE));
            }
            if ((DOCID == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DOCID));
            }
            if ((DOCDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(DOCDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((REFNO == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(REFNO));
            }
            if ((REFDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(REFDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MAINCURRENCY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(MAINCURRENCY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SYMBOL == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SYMBOL));
            }
            if ((EXRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(EXRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PARTYID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(PARTYID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PARTYNAME == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(PARTYNAME));
            }
            if ((RECDBY == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(RECDBY));
            }
            if ((DESPBY == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(DESPBY));
            }
            if ((INSPBY == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(INSPBY));
            }
            if ((DOCTHORUGH == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(DOCTHORUGH));
            }
            if ((CUSTACC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(CUSTACC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TEMPID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(TEMPID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ADTGMCONTROL == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ADTGMCONTROL));
            }
            if ((RNDOFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((long)(RNDOFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((MOBILE == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(MOBILE));
            }
            if ((TYPE == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(TYPE));
            }
            if ((GROSS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(GROSS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(NET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NARRATION == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(NARRATION));
            }
            if ((LOCID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(LOCID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CREDITLIMIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(CREDITLIMIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((TRANSLIMIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(TRANSLIMIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((PARTYBALANCE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(PARTYBALANCE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CREDITDAYS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((long)(CREDITDAYS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DUEDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(DUEDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((FBED.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(FBED.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((FCESS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(FCESS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((FHSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(FHSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((INVTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(INVTYPE));
            }
            if ((BINYN == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(BINYN));
            }
            if ((PACKRND.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((float)(PACKRND.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((OTHCHAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((float)(OTHCHAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((EORDTYPE == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(EORDTYPE));
            }
            if ((INVDESC == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(INVDESC));
            }
            if ((VNO == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(VNO));
            }
            if ((AMTWORDSBED == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(AMTWORDSBED));
            }
            if ((BFREIGHT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(BFREIGHT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((BDISCOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(BDISCOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((FTAX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(FTAX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((TOTACCESAMOUNT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(TOTACCESAMOUNT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((BDRUMS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((long)(BDRUMS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((BTOTQTY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(BTOTQTY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((BTOTAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(BTOTAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((BTOTACCAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(BTOTACCAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((BEDTRCH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((float)(BEDTRCH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((BEDTRAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(BEDTRAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((BTOTPORLAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(BTOTPORLAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((SERNO == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(SERNO));
            }
            if ((DEPORECFLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((short)(DEPORECFLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((FCFLAG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(FCFLAG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((COMMCODE == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(COMMCODE));
            }
            if ((AMTWORDS == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(AMTWORDS));
            }
            if ((MCHELLAN == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(MCHELLAN));
            }
            if ((SCHELLAN == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(SCHELLAN));
            }
            if ((SCHALL2 == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(SCHALL2));
            }
            if ((BEDAMTW == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(BEDAMTW));
            }
            if ((TRANSITLOCID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((decimal)(TRANSITLOCID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((CSGNPARTYID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((decimal)(CSGNPARTYID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((PDOCID == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(PDOCID));
            }
            if ((EXSTATUS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((short)(EXSTATUS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((STAXPER.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((float)(STAXPER.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((ADSCHEME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(ADSCHEME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((PARTYMASTID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((long)(PARTYMASTID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((SUBDITEMMID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((long)(SUBDITEMMID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((SUBDLOCID == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(SUBDLOCID));
            }
            if ((SUBDRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((float)(SUBDRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((LOCDETAILSID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((decimal)(LOCDETAILSID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((BSGST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((double)(BSGST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((BCGST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((double)(BCGST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((BIGST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((double)(BIGST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((TRANSP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((decimal)(TRANSP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((TRANSMODE == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(TRANSMODE));
            }
            if ((CUSTPO == null)) {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = ((string)(CUSTPO));
            }
            if ((ROFF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((float)(ROFF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((TCS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((double)(TCS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((LUTNO == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(LUTNO));
            }
            if ((LUTDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((System.DateTime)(LUTDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((SEZ == null)) {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(SEZ));
            }
            if ((BTCS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[91].Value = ((double)(BTCS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((SALVAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((double)(SALVAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((GSTNO == null)) {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = ((string)(GSTNO));
            }
            if ((PANNO == null)) {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = ((string)(PANNO));
            }
            if ((TDIST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((double)(TDIST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((TRANSCHGSP == null)) {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = ((string)(TRANSCHGSP));
            }
            if ((RECVAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((double)(RECVAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((PARTYGROUP == null)) {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = ((string)(PARTYGROUP));
            }
            if ((SALLIMIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((double)(SALLIMIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((ASALVAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((double)(ASALVAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((BSPLRATE == null)) {
                this.Adapter.InsertCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[101].Value = ((string)(BSPLRATE));
            }
            if ((RATECODE == null)) {
                this.Adapter.InsertCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[102].Value = ((string)(RATECODE));
            }
            if ((CRATECODE == null)) {
                this.Adapter.InsertCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[103].Value = ((string)(CRATECODE));
            }
            if ((ADDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[104].Value = ((double)(ADDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((SAVECTRL == null)) {
                this.Adapter.InsertCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[105].Value = ((string)(SAVECTRL));
            }
            if ((LIMITQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[106].Value = ((double)(LIMITQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal EXINVBASICID, 
                    string PROFITDOC, 
                    global::System.Nullable<decimal> APPROVAL, 
                    string APPROVALSTATUS, 
                    global::System.Nullable<short> MAXAPPROVED, 
                    string CANCEL, 
                    global::System.Nullable<decimal> T1SOURCEID, 
                    global::System.Nullable<decimal> LATEMPLATEID, 
                    global::System.Nullable<decimal> BRANCHID, 
                    string VTYPE, 
                    string DOCID, 
                    global::System.Nullable<global::System.DateTime> DOCDATE, 
                    string REFNO, 
                    global::System.Nullable<global::System.DateTime> REFDATE, 
                    global::System.Nullable<decimal> MAINCURRENCY, 
                    string SYMBOL, 
                    global::System.Nullable<decimal> EXRATE, 
                    global::System.Nullable<decimal> PARTYID, 
                    string PARTYNAME, 
                    string RECDBY, 
                    string DESPBY, 
                    string INSPBY, 
                    string DOCTHORUGH, 
                    global::System.Nullable<decimal> CUSTACC, 
                    global::System.Nullable<decimal> TEMPID, 
                    string ADTGMCONTROL, 
                    global::System.Nullable<long> RNDOFF, 
                    string MOBILE, 
                    string TYPE, 
                    global::System.Nullable<decimal> GROSS, 
                    global::System.Nullable<decimal> NET, 
                    string NARRATION, 
                    global::System.Nullable<decimal> LOCID, 
                    global::System.Nullable<decimal> CREDITLIMIT, 
                    global::System.Nullable<decimal> TRANSLIMIT, 
                    global::System.Nullable<decimal> PARTYBALANCE, 
                    global::System.Nullable<long> CREDITDAYS, 
                    global::System.Nullable<global::System.DateTime> DUEDATE, 
                    global::System.Nullable<double> FBED, 
                    global::System.Nullable<double> FCESS, 
                    global::System.Nullable<double> FHSE, 
                    string INVTYPE, 
                    string BINYN, 
                    global::System.Nullable<float> PACKRND, 
                    global::System.Nullable<float> OTHCHAR, 
                    string EORDTYPE, 
                    string INVDESC, 
                    string VNO, 
                    string AMTWORDSBED, 
                    global::System.Nullable<decimal> BFREIGHT, 
                    global::System.Nullable<decimal> BDISCOUNT, 
                    global::System.Nullable<double> FTAX, 
                    global::System.Nullable<decimal> TOTACCESAMOUNT, 
                    global::System.Nullable<long> BDRUMS, 
                    global::System.Nullable<decimal> BTOTQTY, 
                    global::System.Nullable<decimal> BTOTAMT, 
                    global::System.Nullable<decimal> BTOTACCAMT, 
                    global::System.Nullable<float> BEDTRCH, 
                    global::System.Nullable<decimal> BEDTRAMT, 
                    global::System.Nullable<decimal> BTOTPORLAMT, 
                    string SERNO, 
                    global::System.Nullable<short> DEPORECFLAG, 
                    global::System.Nullable<int> FCFLAG, 
                    string COMMCODE, 
                    string AMTWORDS, 
                    string MCHELLAN, 
                    string SCHELLAN, 
                    string SCHALL2, 
                    string BEDAMTW, 
                    global::System.Nullable<decimal> TRANSITLOCID, 
                    global::System.Nullable<decimal> CSGNPARTYID, 
                    string PDOCID, 
                    global::System.Nullable<short> EXSTATUS, 
                    global::System.Nullable<float> STAXPER, 
                    global::System.Nullable<decimal> ADSCHEME, 
                    global::System.Nullable<long> PARTYMASTID, 
                    global::System.Nullable<long> SUBDITEMMID, 
                    string SUBDLOCID, 
                    global::System.Nullable<float> SUBDRATE, 
                    global::System.Nullable<decimal> LOCDETAILSID, 
                    global::System.Nullable<double> BSGST, 
                    global::System.Nullable<double> BCGST, 
                    global::System.Nullable<double> BIGST, 
                    global::System.Nullable<decimal> TRANSP, 
                    string TRANSMODE, 
                    string CUSTPO, 
                    global::System.Nullable<float> ROFF, 
                    global::System.Nullable<double> TCS, 
                    string LUTNO, 
                    global::System.Nullable<global::System.DateTime> LUTDT, 
                    string SEZ, 
                    global::System.Nullable<double> BTCS, 
                    global::System.Nullable<double> SALVAL, 
                    string GSTNO, 
                    string PANNO, 
                    global::System.Nullable<double> TDIST, 
                    string TRANSCHGSP, 
                    global::System.Nullable<double> RECVAL, 
                    string PARTYGROUP, 
                    global::System.Nullable<double> SALLIMIT, 
                    global::System.Nullable<double> ASALVAL, 
                    string BSPLRATE, 
                    string RATECODE, 
                    string CRATECODE, 
                    global::System.Nullable<double> ADDT, 
                    string SAVECTRL, 
                    global::System.Nullable<double> LIMITQ, 
                    decimal Original_EXINVBASICID, 
                    string Original_PROFITDOC, 
                    global::System.Nullable<decimal> Original_APPROVAL, 
                    string Original_APPROVALSTATUS, 
                    global::System.Nullable<short> Original_MAXAPPROVED, 
                    string Original_CANCEL, 
                    global::System.Nullable<decimal> Original_T1SOURCEID, 
                    global::System.Nullable<decimal> Original_LATEMPLATEID, 
                    global::System.Nullable<decimal> Original_BRANCHID, 
                    string Original_VTYPE, 
                    string Original_DOCID, 
                    global::System.Nullable<global::System.DateTime> Original_DOCDATE, 
                    string Original_REFNO, 
                    global::System.Nullable<global::System.DateTime> Original_REFDATE, 
                    global::System.Nullable<decimal> Original_MAINCURRENCY, 
                    string Original_SYMBOL, 
                    global::System.Nullable<decimal> Original_EXRATE, 
                    global::System.Nullable<decimal> Original_PARTYID, 
                    string Original_PARTYNAME, 
                    string Original_RECDBY, 
                    string Original_DESPBY, 
                    string Original_INSPBY, 
                    string Original_DOCTHORUGH, 
                    global::System.Nullable<decimal> Original_CUSTACC, 
                    global::System.Nullable<decimal> Original_TEMPID, 
                    string Original_ADTGMCONTROL, 
                    global::System.Nullable<long> Original_RNDOFF, 
                    string Original_MOBILE, 
                    string Original_TYPE, 
                    global::System.Nullable<decimal> Original_GROSS, 
                    global::System.Nullable<decimal> Original_NET, 
                    string Original_NARRATION, 
                    global::System.Nullable<decimal> Original_LOCID, 
                    global::System.Nullable<decimal> Original_CREDITLIMIT, 
                    global::System.Nullable<decimal> Original_TRANSLIMIT, 
                    global::System.Nullable<decimal> Original_PARTYBALANCE, 
                    global::System.Nullable<long> Original_CREDITDAYS, 
                    global::System.Nullable<global::System.DateTime> Original_DUEDATE, 
                    global::System.Nullable<double> Original_FBED, 
                    global::System.Nullable<double> Original_FCESS, 
                    global::System.Nullable<double> Original_FHSE, 
                    string Original_INVTYPE, 
                    string Original_BINYN, 
                    global::System.Nullable<float> Original_PACKRND, 
                    global::System.Nullable<float> Original_OTHCHAR, 
                    string Original_EORDTYPE, 
                    string Original_INVDESC, 
                    string Original_VNO, 
                    string Original_AMTWORDSBED, 
                    global::System.Nullable<decimal> Original_BFREIGHT, 
                    global::System.Nullable<decimal> Original_BDISCOUNT, 
                    global::System.Nullable<double> Original_FTAX, 
                    global::System.Nullable<decimal> Original_TOTACCESAMOUNT, 
                    global::System.Nullable<long> Original_BDRUMS, 
                    global::System.Nullable<decimal> Original_BTOTQTY, 
                    global::System.Nullable<decimal> Original_BTOTAMT, 
                    global::System.Nullable<decimal> Original_BTOTACCAMT, 
                    global::System.Nullable<float> Original_BEDTRCH, 
                    global::System.Nullable<decimal> Original_BEDTRAMT, 
                    global::System.Nullable<decimal> Original_BTOTPORLAMT, 
                    string Original_SERNO, 
                    global::System.Nullable<short> Original_DEPORECFLAG, 
                    global::System.Nullable<int> Original_FCFLAG, 
                    string Original_COMMCODE, 
                    string Original_AMTWORDS, 
                    string Original_MCHELLAN, 
                    string Original_SCHELLAN, 
                    string Original_SCHALL2, 
                    string Original_BEDAMTW, 
                    global::System.Nullable<decimal> Original_TRANSITLOCID, 
                    global::System.Nullable<decimal> Original_CSGNPARTYID, 
                    string Original_PDOCID, 
                    global::System.Nullable<short> Original_EXSTATUS, 
                    global::System.Nullable<float> Original_STAXPER, 
                    global::System.Nullable<decimal> Original_ADSCHEME, 
                    global::System.Nullable<long> Original_PARTYMASTID, 
                    global::System.Nullable<long> Original_SUBDITEMMID, 
                    string Original_SUBDLOCID, 
                    global::System.Nullable<float> Original_SUBDRATE, 
                    global::System.Nullable<decimal> Original_LOCDETAILSID, 
                    global::System.Nullable<double> Original_BSGST, 
                    global::System.Nullable<double> Original_BCGST, 
                    global::System.Nullable<double> Original_BIGST, 
                    global::System.Nullable<decimal> Original_TRANSP, 
                    string Original_TRANSMODE, 
                    string Original_CUSTPO, 
                    global::System.Nullable<float> Original_ROFF, 
                    global::System.Nullable<double> Original_TCS, 
                    string Original_LUTNO, 
                    global::System.Nullable<global::System.DateTime> Original_LUTDT, 
                    string Original_SEZ, 
                    global::System.Nullable<double> Original_BTCS, 
                    global::System.Nullable<double> Original_SALVAL, 
                    string Original_GSTNO, 
                    string Original_PANNO, 
                    global::System.Nullable<double> Original_TDIST, 
                    string Original_TRANSCHGSP, 
                    global::System.Nullable<double> Original_RECVAL, 
                    string Original_PARTYGROUP, 
                    global::System.Nullable<double> Original_SALLIMIT, 
                    global::System.Nullable<double> Original_ASALVAL, 
                    string Original_BSPLRATE, 
                    string Original_RATECODE, 
                    string Original_CRATECODE, 
                    global::System.Nullable<double> Original_ADDT, 
                    string Original_SAVECTRL, 
                    global::System.Nullable<double> Original_LIMITQ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(EXINVBASICID));
            if ((PROFITDOC == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PROFITDOC));
            }
            if ((APPROVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(APPROVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((APPROVALSTATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(APPROVALSTATUS));
            }
            if ((MAXAPPROVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(MAXAPPROVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CANCEL == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CANCEL));
            }
            if ((T1SOURCEID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(T1SOURCEID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((LATEMPLATEID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(LATEMPLATEID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BRANCHID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(BRANCHID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((VTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(VTYPE));
            }
            if ((DOCID == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DOCID));
            }
            if ((DOCDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(DOCDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((REFNO == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(REFNO));
            }
            if ((REFDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(REFDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MAINCURRENCY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(MAINCURRENCY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SYMBOL == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SYMBOL));
            }
            if ((EXRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(EXRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PARTYID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(PARTYID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PARTYNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(PARTYNAME));
            }
            if ((RECDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(RECDBY));
            }
            if ((DESPBY == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(DESPBY));
            }
            if ((INSPBY == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(INSPBY));
            }
            if ((DOCTHORUGH == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(DOCTHORUGH));
            }
            if ((CUSTACC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(CUSTACC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TEMPID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(TEMPID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ADTGMCONTROL == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ADTGMCONTROL));
            }
            if ((RNDOFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(RNDOFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((MOBILE == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(MOBILE));
            }
            if ((TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(TYPE));
            }
            if ((GROSS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(GROSS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(NET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NARRATION == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(NARRATION));
            }
            if ((LOCID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(LOCID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CREDITLIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(CREDITLIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((TRANSLIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(TRANSLIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((PARTYBALANCE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(PARTYBALANCE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CREDITDAYS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((long)(CREDITDAYS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((DUEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(DUEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((FBED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(FBED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((FCESS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(FCESS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((FHSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(FHSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((INVTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(INVTYPE));
            }
            if ((BINYN == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(BINYN));
            }
            if ((PACKRND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((float)(PACKRND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((OTHCHAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((float)(OTHCHAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((EORDTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(EORDTYPE));
            }
            if ((INVDESC == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(INVDESC));
            }
            if ((VNO == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(VNO));
            }
            if ((AMTWORDSBED == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(AMTWORDSBED));
            }
            if ((BFREIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(BFREIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((BDISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(BDISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((FTAX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(FTAX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((TOTACCESAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(TOTACCESAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((BDRUMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((long)(BDRUMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((BTOTQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(BTOTQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((BTOTAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(BTOTAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((BTOTACCAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(BTOTACCAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((BEDTRCH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((float)(BEDTRCH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((BEDTRAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(BEDTRAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((BTOTPORLAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(BTOTPORLAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((SERNO == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(SERNO));
            }
            if ((DEPORECFLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((short)(DEPORECFLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((FCFLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(FCFLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((COMMCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(COMMCODE));
            }
            if ((AMTWORDS == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(AMTWORDS));
            }
            if ((MCHELLAN == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(MCHELLAN));
            }
            if ((SCHELLAN == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(SCHELLAN));
            }
            if ((SCHALL2 == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(SCHALL2));
            }
            if ((BEDAMTW == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(BEDAMTW));
            }
            if ((TRANSITLOCID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(TRANSITLOCID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((CSGNPARTYID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(CSGNPARTYID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((PDOCID == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(PDOCID));
            }
            if ((EXSTATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((short)(EXSTATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((STAXPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((float)(STAXPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((ADSCHEME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(ADSCHEME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((PARTYMASTID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((long)(PARTYMASTID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((SUBDITEMMID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((long)(SUBDITEMMID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((SUBDLOCID == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(SUBDLOCID));
            }
            if ((SUBDRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((float)(SUBDRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((LOCDETAILSID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(LOCDETAILSID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((BSGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(BSGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((BCGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((double)(BCGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((BIGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(BIGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((TRANSP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(TRANSP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((TRANSMODE == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(TRANSMODE));
            }
            if ((CUSTPO == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(CUSTPO));
            }
            if ((ROFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((float)(ROFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((TCS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(TCS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((LUTNO == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(LUTNO));
            }
            if ((LUTDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(LUTDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((SEZ == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(SEZ));
            }
            if ((BTCS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((double)(BTCS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((SALVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((double)(SALVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((GSTNO == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(GSTNO));
            }
            if ((PANNO == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(PANNO));
            }
            if ((TDIST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(TDIST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((TRANSCHGSP == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(TRANSCHGSP));
            }
            if ((RECVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((double)(RECVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((PARTYGROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(PARTYGROUP));
            }
            if ((SALLIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(SALLIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((ASALVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((double)(ASALVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((BSPLRATE == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(BSPLRATE));
            }
            if ((RATECODE == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(RATECODE));
            }
            if ((CRATECODE == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(CRATECODE));
            }
            if ((ADDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((double)(ADDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((SAVECTRL == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(SAVECTRL));
            }
            if ((LIMITQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((double)(LIMITQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(Original_EXINVBASICID));
            if ((Original_PROFITDOC == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_PROFITDOC));
            }
            if ((Original_APPROVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((decimal)(Original_APPROVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_APPROVALSTATUS == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_APPROVALSTATUS));
            }
            if ((Original_MAXAPPROVED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((short)(Original_MAXAPPROVED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_CANCEL == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_CANCEL));
            }
            if ((Original_T1SOURCEID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((decimal)(Original_T1SOURCEID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_LATEMPLATEID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_LATEMPLATEID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_BRANCHID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((decimal)(Original_BRANCHID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((Original_VTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_VTYPE));
            }
            if ((Original_DOCID == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_DOCID));
            }
            if ((Original_DOCDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((System.DateTime)(Original_DOCDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((Original_REFNO == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_REFNO));
            }
            if ((Original_REFDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((System.DateTime)(Original_REFDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_MAINCURRENCY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((decimal)(Original_MAINCURRENCY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_SYMBOL == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_SYMBOL));
            }
            if ((Original_EXRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((decimal)(Original_EXRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((decimal)(Original_PARTYID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_PARTYNAME));
            }
            if ((Original_RECDBY == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_RECDBY));
            }
            if ((Original_DESPBY == null)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_DESPBY));
            }
            if ((Original_INSPBY == null)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_INSPBY));
            }
            if ((Original_DOCTHORUGH == null)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_DOCTHORUGH));
            }
            if ((Original_CUSTACC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((decimal)(Original_CUSTACC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_TEMPID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((decimal)(Original_TEMPID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_ADTGMCONTROL == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_ADTGMCONTROL));
            }
            if ((Original_RNDOFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((long)(Original_RNDOFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_MOBILE == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_MOBILE));
            }
            if ((Original_TYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_TYPE));
            }
            if ((Original_GROSS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((decimal)(Original_GROSS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_NET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((decimal)(Original_NET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_NARRATION == null)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((string)(Original_NARRATION));
            }
            if ((Original_LOCID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((decimal)(Original_LOCID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_CREDITLIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((decimal)(Original_CREDITLIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSLIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((decimal)(Original_TRANSLIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYBALANCE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((decimal)(Original_PARTYBALANCE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_CREDITDAYS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((long)(Original_CREDITDAYS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_DUEDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((System.DateTime)(Original_DUEDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_FBED.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((double)(Original_FBED.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_FCESS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((double)(Original_FCESS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_FHSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((double)(Original_FHSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_INVTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_INVTYPE));
            }
            if ((Original_BINYN == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_BINYN));
            }
            if ((Original_PACKRND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((float)(Original_PACKRND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_OTHCHAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((float)(Original_OTHCHAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_EORDTYPE == null)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((string)(Original_EORDTYPE));
            }
            if ((Original_INVDESC == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_INVDESC));
            }
            if ((Original_VNO == null)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((string)(Original_VNO));
            }
            if ((Original_AMTWORDSBED == null)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((string)(Original_AMTWORDSBED));
            }
            if ((Original_BFREIGHT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((decimal)(Original_BFREIGHT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((Original_BDISCOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((decimal)(Original_BDISCOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_FTAX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((double)(Original_FTAX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_TOTACCESAMOUNT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((decimal)(Original_TOTACCESAMOUNT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            if ((Original_BDRUMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((long)(Original_BDRUMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTQTY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((decimal)(Original_BTOTQTY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((decimal)(Original_BTOTAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTACCAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((decimal)(Original_BTOTACCAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDTRCH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((float)(Original_BEDTRCH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((Original_BEDTRAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((decimal)(Original_BEDTRAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            if ((Original_BTOTPORLAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((decimal)(Original_BTOTPORLAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            if ((Original_SERNO == null)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((string)(Original_SERNO));
            }
            if ((Original_DEPORECFLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((short)(Original_DEPORECFLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            if ((Original_FCFLAG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((int)(Original_FCFLAG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            if ((Original_COMMCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((string)(Original_COMMCODE));
            }
            if ((Original_AMTWORDS == null)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((string)(Original_AMTWORDS));
            }
            if ((Original_MCHELLAN == null)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((string)(Original_MCHELLAN));
            }
            if ((Original_SCHELLAN == null)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((string)(Original_SCHELLAN));
            }
            if ((Original_SCHALL2 == null)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((string)(Original_SCHALL2));
            }
            if ((Original_BEDAMTW == null)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((string)(Original_BEDAMTW));
            }
            if ((Original_TRANSITLOCID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((decimal)(Original_TRANSITLOCID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            if ((Original_CSGNPARTYID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((decimal)(Original_CSGNPARTYID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            if ((Original_PDOCID == null)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((string)(Original_PDOCID));
            }
            if ((Original_EXSTATUS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((short)(Original_EXSTATUS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_STAXPER.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((float)(Original_STAXPER.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            if ((Original_ADSCHEME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[255].Value = ((decimal)(Original_ADSCHEME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYMASTID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[257].Value = ((long)(Original_PARTYMASTID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBDITEMMID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[259].Value = ((long)(Original_SUBDITEMMID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            if ((Original_SUBDLOCID == null)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((string)(Original_SUBDLOCID));
            }
            if ((Original_SUBDRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((float)(Original_SUBDRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            if ((Original_LOCDETAILSID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((decimal)(Original_LOCDETAILSID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            if ((Original_BSGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((double)(Original_BSGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            if ((Original_BCGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((double)(Original_BCGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            if ((Original_BIGST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[271].Value = ((double)(Original_BIGST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[271].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[273].Value = ((decimal)(Original_TRANSP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[272].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[273].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSMODE == null)) {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[275].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[274].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[275].Value = ((string)(Original_TRANSMODE));
            }
            if ((Original_CUSTPO == null)) {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[277].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[276].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[277].Value = ((string)(Original_CUSTPO));
            }
            if ((Original_ROFF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[279].Value = ((float)(Original_ROFF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[278].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[279].Value = global::System.DBNull.Value;
            }
            if ((Original_TCS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[281].Value = ((double)(Original_TCS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[280].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[281].Value = global::System.DBNull.Value;
            }
            if ((Original_LUTNO == null)) {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[283].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[282].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[283].Value = ((string)(Original_LUTNO));
            }
            if ((Original_LUTDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[285].Value = ((System.DateTime)(Original_LUTDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[284].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[285].Value = global::System.DBNull.Value;
            }
            if ((Original_SEZ == null)) {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[287].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[286].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[287].Value = ((string)(Original_SEZ));
            }
            if ((Original_BTCS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[289].Value = ((double)(Original_BTCS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[288].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[289].Value = global::System.DBNull.Value;
            }
            if ((Original_SALVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[291].Value = ((double)(Original_SALVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[290].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[291].Value = global::System.DBNull.Value;
            }
            if ((Original_GSTNO == null)) {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[293].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[292].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[293].Value = ((string)(Original_GSTNO));
            }
            if ((Original_PANNO == null)) {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[295].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[294].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[295].Value = ((string)(Original_PANNO));
            }
            if ((Original_TDIST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[297].Value = ((double)(Original_TDIST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[296].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[297].Value = global::System.DBNull.Value;
            }
            if ((Original_TRANSCHGSP == null)) {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[299].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[298].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[299].Value = ((string)(Original_TRANSCHGSP));
            }
            if ((Original_RECVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[301].Value = ((double)(Original_RECVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[300].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[301].Value = global::System.DBNull.Value;
            }
            if ((Original_PARTYGROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[303].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[302].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[303].Value = ((string)(Original_PARTYGROUP));
            }
            if ((Original_SALLIMIT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[305].Value = ((double)(Original_SALLIMIT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[304].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[305].Value = global::System.DBNull.Value;
            }
            if ((Original_ASALVAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[307].Value = ((double)(Original_ASALVAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[306].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[307].Value = global::System.DBNull.Value;
            }
            if ((Original_BSPLRATE == null)) {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[309].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[308].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[309].Value = ((string)(Original_BSPLRATE));
            }
            if ((Original_RATECODE == null)) {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[311].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[310].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[311].Value = ((string)(Original_RATECODE));
            }
            if ((Original_CRATECODE == null)) {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[313].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[312].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[313].Value = ((string)(Original_CRATECODE));
            }
            if ((Original_ADDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[314].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[315].Value = ((double)(Original_ADDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[314].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[315].Value = global::System.DBNull.Value;
            }
            if ((Original_SAVECTRL == null)) {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[317].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[316].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[317].Value = ((string)(Original_SAVECTRL));
            }
            if ((Original_LIMITQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[318].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[319].Value = ((double)(Original_LIMITQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[318].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[319].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PROFITDOC, 
                    global::System.Nullable<decimal> APPROVAL, 
                    string APPROVALSTATUS, 
                    global::System.Nullable<short> MAXAPPROVED, 
                    string CANCEL, 
                    global::System.Nullable<decimal> T1SOURCEID, 
                    global::System.Nullable<decimal> LATEMPLATEID, 
                    global::System.Nullable<decimal> BRANCHID, 
                    string VTYPE, 
                    string DOCID, 
                    global::System.Nullable<global::System.DateTime> DOCDATE, 
                    string REFNO, 
                    global::System.Nullable<global::System.DateTime> REFDATE, 
                    global::System.Nullable<decimal> MAINCURRENCY, 
                    string SYMBOL, 
                    global::System.Nullable<decimal> EXRATE, 
                    global::System.Nullable<decimal> PARTYID, 
                    string PARTYNAME, 
                    string RECDBY, 
                    string DESPBY, 
                    string INSPBY, 
                    string DOCTHORUGH, 
                    global::System.Nullable<decimal> CUSTACC, 
                    global::System.Nullable<decimal> TEMPID, 
                    string ADTGMCONTROL, 
                    global::System.Nullable<long> RNDOFF, 
                    string MOBILE, 
                    string TYPE, 
                    global::System.Nullable<decimal> GROSS, 
                    global::System.Nullable<decimal> NET, 
                    string NARRATION, 
                    global::System.Nullable<decimal> LOCID, 
                    global::System.Nullable<decimal> CREDITLIMIT, 
                    global::System.Nullable<decimal> TRANSLIMIT, 
                    global::System.Nullable<decimal> PARTYBALANCE, 
                    global::System.Nullable<long> CREDITDAYS, 
                    global::System.Nullable<global::System.DateTime> DUEDATE, 
                    global::System.Nullable<double> FBED, 
                    global::System.Nullable<double> FCESS, 
                    global::System.Nullable<double> FHSE, 
                    string INVTYPE, 
                    string BINYN, 
                    global::System.Nullable<float> PACKRND, 
                    global::System.Nullable<float> OTHCHAR, 
                    string EORDTYPE, 
                    string INVDESC, 
                    string VNO, 
                    string AMTWORDSBED, 
                    global::System.Nullable<decimal> BFREIGHT, 
                    global::System.Nullable<decimal> BDISCOUNT, 
                    global::System.Nullable<double> FTAX, 
                    global::System.Nullable<decimal> TOTACCESAMOUNT, 
                    global::System.Nullable<long> BDRUMS, 
                    global::System.Nullable<decimal> BTOTQTY, 
                    global::System.Nullable<decimal> BTOTAMT, 
                    global::System.Nullable<decimal> BTOTACCAMT, 
                    global::System.Nullable<float> BEDTRCH, 
                    global::System.Nullable<decimal> BEDTRAMT, 
                    global::System.Nullable<decimal> BTOTPORLAMT, 
                    string SERNO, 
                    global::System.Nullable<short> DEPORECFLAG, 
                    global::System.Nullable<int> FCFLAG, 
                    string COMMCODE, 
                    string AMTWORDS, 
                    string MCHELLAN, 
                    string SCHELLAN, 
                    string SCHALL2, 
                    string BEDAMTW, 
                    global::System.Nullable<decimal> TRANSITLOCID, 
                    global::System.Nullable<decimal> CSGNPARTYID, 
                    string PDOCID, 
                    global::System.Nullable<short> EXSTATUS, 
                    global::System.Nullable<float> STAXPER, 
                    global::System.Nullable<decimal> ADSCHEME, 
                    global::System.Nullable<long> PARTYMASTID, 
                    global::System.Nullable<long> SUBDITEMMID, 
                    string SUBDLOCID, 
                    global::System.Nullable<float> SUBDRATE, 
                    global::System.Nullable<decimal> LOCDETAILSID, 
                    global::System.Nullable<double> BSGST, 
                    global::System.Nullable<double> BCGST, 
                    global::System.Nullable<double> BIGST, 
                    global::System.Nullable<decimal> TRANSP, 
                    string TRANSMODE, 
                    string CUSTPO, 
                    global::System.Nullable<float> ROFF, 
                    global::System.Nullable<double> TCS, 
                    string LUTNO, 
                    global::System.Nullable<global::System.DateTime> LUTDT, 
                    string SEZ, 
                    global::System.Nullable<double> BTCS, 
                    global::System.Nullable<double> SALVAL, 
                    string GSTNO, 
                    string PANNO, 
                    global::System.Nullable<double> TDIST, 
                    string TRANSCHGSP, 
                    global::System.Nullable<double> RECVAL, 
                    string PARTYGROUP, 
                    global::System.Nullable<double> SALLIMIT, 
                    global::System.Nullable<double> ASALVAL, 
                    string BSPLRATE, 
                    string RATECODE, 
                    string CRATECODE, 
                    global::System.Nullable<double> ADDT, 
                    string SAVECTRL, 
                    global::System.Nullable<double> LIMITQ, 
                    decimal Original_EXINVBASICID, 
                    string Original_PROFITDOC, 
                    global::System.Nullable<decimal> Original_APPROVAL, 
                    string Original_APPROVALSTATUS, 
                    global::System.Nullable<short> Original_MAXAPPROVED, 
                    string Original_CANCEL, 
                    global::System.Nullable<decimal> Original_T1SOURCEID, 
                    global::System.Nullable<decimal> Original_LATEMPLATEID, 
                    global::System.Nullable<decimal> Original_BRANCHID, 
                    string Original_VTYPE, 
                    string Original_DOCID, 
                    global::System.Nullable<global::System.DateTime> Original_DOCDATE, 
                    string Original_REFNO, 
                    global::System.Nullable<global::System.DateTime> Original_REFDATE, 
                    global::System.Nullable<decimal> Original_MAINCURRENCY, 
                    string Original_SYMBOL, 
                    global::System.Nullable<decimal> Original_EXRATE, 
                    global::System.Nullable<decimal> Original_PARTYID, 
                    string Original_PARTYNAME, 
                    string Original_RECDBY, 
                    string Original_DESPBY, 
                    string Original_INSPBY, 
                    string Original_DOCTHORUGH, 
                    global::System.Nullable<decimal> Original_CUSTACC, 
                    global::System.Nullable<decimal> Original_TEMPID, 
                    string Original_ADTGMCONTROL, 
                    global::System.Nullable<long> Original_RNDOFF, 
                    string Original_MOBILE, 
                    string Original_TYPE, 
                    global::System.Nullable<decimal> Original_GROSS, 
                    global::System.Nullable<decimal> Original_NET, 
                    string Original_NARRATION, 
                    global::System.Nullable<decimal> Original_LOCID, 
                    global::System.Nullable<decimal> Original_CREDITLIMIT, 
                    global::System.Nullable<decimal> Original_TRANSLIMIT, 
                    global::System.Nullable<decimal> Original_PARTYBALANCE, 
                    global::System.Nullable<long> Original_CREDITDAYS, 
                    global::System.Nullable<global::System.DateTime> Original_DUEDATE, 
                    global::System.Nullable<double> Original_FBED, 
                    global::System.Nullable<double> Original_FCESS, 
                    global::System.Nullable<double> Original_FHSE, 
                    string Original_INVTYPE, 
                    string Original_BINYN, 
                    global::System.Nullable<float> Original_PACKRND, 
                    global::System.Nullable<float> Original_OTHCHAR, 
                    string Original_EORDTYPE, 
                    string Original_INVDESC, 
                    string Original_VNO, 
                    string Original_AMTWORDSBED, 
                    global::System.Nullable<decimal> Original_BFREIGHT, 
                    global::System.Nullable<decimal> Original_BDISCOUNT, 
                    global::System.Nullable<double> Original_FTAX, 
                    global::System.Nullable<decimal> Original_TOTACCESAMOUNT, 
                    global::System.Nullable<long> Original_BDRUMS, 
                    global::System.Nullable<decimal> Original_BTOTQTY, 
                    global::System.Nullable<decimal> Original_BTOTAMT, 
                    global::System.Nullable<decimal> Original_BTOTACCAMT, 
                    global::System.Nullable<float> Original_BEDTRCH, 
                    global::System.Nullable<decimal> Original_BEDTRAMT, 
                    global::System.Nullable<decimal> Original_BTOTPORLAMT, 
                    string Original_SERNO, 
                    global::System.Nullable<short> Original_DEPORECFLAG, 
                    global::System.Nullable<int> Original_FCFLAG, 
                    string Original_COMMCODE, 
                    string Original_AMTWORDS, 
                    string Original_MCHELLAN, 
                    string Original_SCHELLAN, 
                    string Original_SCHALL2, 
                    string Original_BEDAMTW, 
                    global::System.Nullable<decimal> Original_TRANSITLOCID, 
                    global::System.Nullable<decimal> Original_CSGNPARTYID, 
                    string Original_PDOCID, 
                    global::System.Nullable<short> Original_EXSTATUS, 
                    global::System.Nullable<float> Original_STAXPER, 
                    global::System.Nullable<decimal> Original_ADSCHEME, 
                    global::System.Nullable<long> Original_PARTYMASTID, 
                    global::System.Nullable<long> Original_SUBDITEMMID, 
                    string Original_SUBDLOCID, 
                    global::System.Nullable<float> Original_SUBDRATE, 
                    global::System.Nullable<decimal> Original_LOCDETAILSID, 
                    global::System.Nullable<double> Original_BSGST, 
                    global::System.Nullable<double> Original_BCGST, 
                    global::System.Nullable<double> Original_BIGST, 
                    global::System.Nullable<decimal> Original_TRANSP, 
                    string Original_TRANSMODE, 
                    string Original_CUSTPO, 
                    global::System.Nullable<float> Original_ROFF, 
                    global::System.Nullable<double> Original_TCS, 
                    string Original_LUTNO, 
                    global::System.Nullable<global::System.DateTime> Original_LUTDT, 
                    string Original_SEZ, 
                    global::System.Nullable<double> Original_BTCS, 
                    global::System.Nullable<double> Original_SALVAL, 
                    string Original_GSTNO, 
                    string Original_PANNO, 
                    global::System.Nullable<double> Original_TDIST, 
                    string Original_TRANSCHGSP, 
                    global::System.Nullable<double> Original_RECVAL, 
                    string Original_PARTYGROUP, 
                    global::System.Nullable<double> Original_SALLIMIT, 
                    global::System.Nullable<double> Original_ASALVAL, 
                    string Original_BSPLRATE, 
                    string Original_RATECODE, 
                    string Original_CRATECODE, 
                    global::System.Nullable<double> Original_ADDT, 
                    string Original_SAVECTRL, 
                    global::System.Nullable<double> Original_LIMITQ) {
            return this.Update(Original_EXINVBASICID, PROFITDOC, APPROVAL, APPROVALSTATUS, MAXAPPROVED, CANCEL, T1SOURCEID, LATEMPLATEID, BRANCHID, VTYPE, DOCID, DOCDATE, REFNO, REFDATE, MAINCURRENCY, SYMBOL, EXRATE, PARTYID, PARTYNAME, RECDBY, DESPBY, INSPBY, DOCTHORUGH, CUSTACC, TEMPID, ADTGMCONTROL, RNDOFF, MOBILE, TYPE, GROSS, NET, NARRATION, LOCID, CREDITLIMIT, TRANSLIMIT, PARTYBALANCE, CREDITDAYS, DUEDATE, FBED, FCESS, FHSE, INVTYPE, BINYN, PACKRND, OTHCHAR, EORDTYPE, INVDESC, VNO, AMTWORDSBED, BFREIGHT, BDISCOUNT, FTAX, TOTACCESAMOUNT, BDRUMS, BTOTQTY, BTOTAMT, BTOTACCAMT, BEDTRCH, BEDTRAMT, BTOTPORLAMT, SERNO, DEPORECFLAG, FCFLAG, COMMCODE, AMTWORDS, MCHELLAN, SCHELLAN, SCHALL2, BEDAMTW, TRANSITLOCID, CSGNPARTYID, PDOCID, EXSTATUS, STAXPER, ADSCHEME, PARTYMASTID, SUBDITEMMID, SUBDLOCID, SUBDRATE, LOCDETAILSID, BSGST, BCGST, BIGST, TRANSP, TRANSMODE, CUSTPO, ROFF, TCS, LUTNO, LUTDT, SEZ, BTCS, SALVAL, GSTNO, PANNO, TDIST, TRANSCHGSP, RECVAL, PARTYGROUP, SALLIMIT, ASALVAL, BSPLRATE, RATECODE, CRATECODE, ADDT, SAVECTRL, LIMITQ, Original_EXINVBASICID, Original_PROFITDOC, Original_APPROVAL, Original_APPROVALSTATUS, Original_MAXAPPROVED, Original_CANCEL, Original_T1SOURCEID, Original_LATEMPLATEID, Original_BRANCHID, Original_VTYPE, Original_DOCID, Original_DOCDATE, Original_REFNO, Original_REFDATE, Original_MAINCURRENCY, Original_SYMBOL, Original_EXRATE, Original_PARTYID, Original_PARTYNAME, Original_RECDBY, Original_DESPBY, Original_INSPBY, Original_DOCTHORUGH, Original_CUSTACC, Original_TEMPID, Original_ADTGMCONTROL, Original_RNDOFF, Original_MOBILE, Original_TYPE, Original_GROSS, Original_NET, Original_NARRATION, Original_LOCID, Original_CREDITLIMIT, Original_TRANSLIMIT, Original_PARTYBALANCE, Original_CREDITDAYS, Original_DUEDATE, Original_FBED, Original_FCESS, Original_FHSE, Original_INVTYPE, Original_BINYN, Original_PACKRND, Original_OTHCHAR, Original_EORDTYPE, Original_INVDESC, Original_VNO, Original_AMTWORDSBED, Original_BFREIGHT, Original_BDISCOUNT, Original_FTAX, Original_TOTACCESAMOUNT, Original_BDRUMS, Original_BTOTQTY, Original_BTOTAMT, Original_BTOTACCAMT, Original_BEDTRCH, Original_BEDTRAMT, Original_BTOTPORLAMT, Original_SERNO, Original_DEPORECFLAG, Original_FCFLAG, Original_COMMCODE, Original_AMTWORDS, Original_MCHELLAN, Original_SCHELLAN, Original_SCHALL2, Original_BEDAMTW, Original_TRANSITLOCID, Original_CSGNPARTYID, Original_PDOCID, Original_EXSTATUS, Original_STAXPER, Original_ADSCHEME, Original_PARTYMASTID, Original_SUBDITEMMID, Original_SUBDLOCID, Original_SUBDRATE, Original_LOCDETAILSID, Original_BSGST, Original_BCGST, Original_BIGST, Original_TRANSP, Original_TRANSMODE, Original_CUSTPO, Original_ROFF, Original_TCS, Original_LUTNO, Original_LUTDT, Original_SEZ, Original_BTCS, Original_SALVAL, Original_GSTNO, Original_PANNO, Original_TDIST, Original_TRANSCHGSP, Original_RECVAL, Original_PARTYGROUP, Original_SALLIMIT, Original_ASALVAL, Original_BSPLRATE, Original_RATECODE, Original_CRATECODE, Original_ADDT, Original_SAVECTRL, Original_LIMITQ);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EXINVBASICTableAdapter _eXINVBASICTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EXINVBASICTableAdapter EXINVBASICTableAdapter {
            get {
                return this._eXINVBASICTableAdapter;
            }
            set {
                this._eXINVBASICTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._eXINVBASICTableAdapter != null) 
                            && (this._eXINVBASICTableAdapter.Connection != null))) {
                    return this._eXINVBASICTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._eXINVBASICTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(Exinvbasic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eXINVBASICTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXINVBASIC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXINVBASICTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(Exinvbasic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eXINVBASICTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXINVBASIC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXINVBASICTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(Exinvbasic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._eXINVBASICTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXINVBASIC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXINVBASICTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(Exinvbasic dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._eXINVBASICTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXINVBASICTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._eXINVBASICTableAdapter != null)) {
                    revertConnections.Add(this._eXINVBASICTableAdapter, this._eXINVBASICTableAdapter.Connection);
                    this._eXINVBASICTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._eXINVBASICTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._eXINVBASICTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXINVBASICTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXINVBASICTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._eXINVBASICTableAdapter != null)) {
                    this._eXINVBASICTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._eXINVBASICTableAdapter]));
                    this._eXINVBASICTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591