@model AccClass

@{
    ViewData["Title"] = "AccClass";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Master</a> </li>
            <li class="active"> <strong> AccClass </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">

                    <hr>
                    @using (Html.BeginForm("AccClass", "AccClass", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>

                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Account Class<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Accountclass, new { @id = "txtAccountclass", @class = "form-control",autocomplete="off" , @TabIndex = 2, @size="30" })<br>

                                            @* for edit & delete*@
                                            @Html.HiddenFor(C => C.ID) 
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group"> 

                                        <label for="inputName3" class="col-sm-4 control-label">Class Code<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
@*                                            @Html.DropDownListFor(C => C.Accounttype, Model.ATypelst," -- Please Select -- ", new { @id = "ddlAccounttype", @Class = "form-control _select", @TabIndex = 1 })
*@
                                            @Html.TextBoxFor(C => C.Accounttype, new { @id = "txtAccounttype", @class = "form-control",autocomplete="off" , @TabIndex = 2, @size="30",@onkeydown = "return isNumeric2(event.keyCode,this.value)" })<br>

                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <a button class="btn btn-danger" type="submit" href="@Url.Action("ListAccClass", "AccClass")">Cancel</a>




                        </form>


                    }
                </div>

            </div>

        </div>

    </div>

</div>



<script>
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
</script>

<script>

    $(function () {
        $('._select').select2();
    });

    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;


            if (document.getElementById("txtAccountclass").value == "") {
                isValid = false;
                $(txtAccountclass).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Accountclass");
                return false;
            }
            else {
                $(txtAccountclass).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtAccounttype").value == "") {
                isValid = false;
                $(txtAccounttype).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Account Type");
                return false;
            }
            else {
                $(txtAccounttype).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtStatus").value == "") {
                isValid = false;
                $(txtStatus).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Status");
                return false;
            }
            else {
                $(txtStatus).css({
                    "border": "",
                    "background": ""
                });
            }


            if (isValid == false)
                e.preventDefault();

        });

    });

</script>