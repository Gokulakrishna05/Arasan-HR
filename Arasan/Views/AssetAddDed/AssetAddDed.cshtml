@model Arasan.Models.AssetAddDed
@{
    ViewData["Title"] = "Asset Addition/Deduction";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Stores Management</a> </li>
            <li class="active"> <strong> Asset Addition/Deduction</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Asset Addition/Deduction</h5>
                    <hr>
                    @using (Html.BeginForm("AssetAddDed", "AssetAddDed", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                               
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                            @Html.DropDownListFor(C => C.Location, Model.Loc, new { @id = "ddlLocation", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                                 <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                            @Html.DropDownListFor(C => C.Type, Model.Typelst,"---Please Select---" ,new { @id = "ddlType", @Class = "form-control _select", @TabIndex = 2 , onchange = "changedoc(this.value)"})

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Doc ID<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "txtDocId", @class = "form-control", @TabIndex = 3 ,@readonly=true})
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.Branch)
                                            @Html.HiddenFor(C => C.Entered)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />    <label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.Docdate, new { @id = "Docdate", @class = "form-control", @TabIndex = 4,@size="31",@readonly=true  })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                              
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Reason<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Reason, new { @id = "txtReason", @class = "form-control", @TabIndex = 5, onchange = "changenarr(this.value)" })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Bin Y/N<label class="mandatory">*</label></label>
                                        <div class="input-group">

                                            @Html.RadioButtonFor(C => C.bin, "YES", new { @TabIndex = 2 })
                                            <label id="mt-radio">Yes</label>&emsp;
                                            @Html.RadioButtonFor(C => C.bin, "NO", new { @TabIndex = 3 })
                                            <label id="mt-radio">No</label>


                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    @* <div class="ibox float-e-margins">*@

                                    <!-- / ibox-title -->
                                    @* <div id="demo3" class="ibox-content collapse in">
                                <div class="borderedTable">
                                <div class="table-scrollable">*@
                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                               
                                                <th> Item </th>
                                                <th> Unit </th>
                                                
                                                <th>  Stock </th>
                                              
                                                <th> Qty </th>
                                                <th> Rate </th>
                                                <th> Amount </th>
                                                

                                            </tr>

                                        </thead>
                                        <tbody id="tbBooks">

                                            @{

                                                int i = 0;
                                                int j = 1;
                                                foreach (var item in Model.Itlst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        

                                                        <td>
                                                            @Html.DropDownListFor(o => o.Itlst[i].ItemId, Model.Itlst[i].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItem(this.value," + i + ")" })
                                                            @Html.HiddenFor(o => o.Itlst[i].saveItemId)
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 90px;" , @readonly = "readonly"})
                                                        </td>
                                                        
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i].Stock, new { @id = "txtStock" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 90px;", @readonly = "readonly" })
                                                        </td>
                                                        
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Quantity, new { @id = "txtQuantity" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 90px;" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. rate, new { @id = "txtRate" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 90px;" ,@readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.Itlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Amount, new { @id = "txtAmount" + i , @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 90px;" ,@readonly = "readonly" })
                                                        </td>           

                                                        <td>
                                                            @Html.HiddenFor(o => o.Itlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Suplst.Index" type="hidden" value="@(i)" />
                                                        </td>

                                                    </tr>

                                                    i = i + 1;
                                                    j = j + 1;
                                                }
                                            }

                                        </tbody>




                                    </table>
                                </div>
                            </div>
                            <div style="height:30px;"></div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Gross<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Gro, new { @id = "gross", @class = "form-control", @TabIndex = 2 ,@readonly = "readonly"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Net<label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Net, new { @id = "net", @class = "form-control", @TabIndex = 2 ,@readonly = "readonly"})
                                            <br />
                                        </div>

                                    </div>
                                </div>

                            </div>
                            <div style="height:15px;"></div>
                            <div class="row">
                                
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Narration<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextAreaFor(C => C.Narr, new { @id = "txtNarr", @class = "form-control", @TabIndex = 1 })
                                            <br />
                                        </div>
                                    </div>
                                </div>

                            </div>


                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListAssetAddDed", "AssetAddDed")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $(".chosen-select").chosen();

    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    $(function () {
        $('._select').select2();
    });
    $(".chosen-select").chosen();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function changedoc(ItemId) {
        $.ajax({
            url: 'GetDocDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtDocId").value = result.seq;


            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
   
    $("#btnSave").click(function () {
        var i = 0;
        var type = document.getElementById("ddlType").value;

       
        var cl = document.getElementById("txtStock" + i).value;
        
        var qty = document.getElementById("txtQuantity" + i).value;
        
        var isValid = true;
        if (type == "DIRECT DEDUCTION") {
        if (eval(cl) < eval(qty)) {
            alert("Qty is Maximum in Stock");
            return false;
        }
        }



    });
    function changeItem(ItemId, i) {
        var loc = document.getElementById("ddlLocation").value;
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId, "loc": loc },
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;
               
                document.getElementById("txtRate" + i).value = result.purrate;
                document.getElementById("txtStock" + i).value = result.totalstock;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {
            var qty = document.getElementById("txtQuantity" + i).value;
            var up = document.getElementById("txtRate" + i).value;
           

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

            if (up > 0) {
                var tot = eval(qty) * eval(up) ;
                document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            } else {
                document.getElementById("txtAmount" + i).value = 0;
            }



            var GTot = 0;
            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var unit = $(this).find('#txtQuantity' + j.toString()).val();
                    var qtys = $(this).find('#txtRate' + j.toString()).val();
                    
                    if (qtys == "")
                        qtys = 0;

                    

                    if (unit == "")
                        unit = 0;
                    var tots = eval(qtys) * eval(unit) ;
                    GTot = eval(tots) + eval(GTot);
                }
                j += 1;
            });

            document.getElementById("gross").value = GTot;
            document.getElementById("net").value = GTot;
            // document.getElementById('words').value = inWords(GTot);


        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function changenarr(item) {
        try {
           
            var type = document.getElementById("ddlType").value;

            if (type == "DIRECT ADDITION") {
            var narr="Upward Stock Adjustment owing to :"+item;
    
             }
             if (type == "DIRECT DEDUCTION") {
            var narr="Downward Stock Adjustment owing to :"+item;
    
             }
            document.getElementById("txtNarr").value = narr;
             


        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow() {
        var opt = "";
       

        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
               
                        AppendRow(opt);
                   
            }
        })
    }
    @* function AddRow() {
        var opt = "";
        $.ajax({
        type: "POST",
        url: 'GetItemGrpJSON',
        success: function (data) {
        $.each(data, function () {
        opt += "<option value=" + this.value + ">" + this.text + "</option>";
        });
        AppendRow(opt);
        });
        }
        })
        }*@
        $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0,
    @*  defaultDate: $.now(),*@
    @*   minDate: new Date(),
        maxDate:maxdate,*@
        });
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;


        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='Itemlst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>"+ opt +"</select></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='Itlst[" + index + "].Unit'  style='width: 90px;' type='text'  readonly='True' /></td>";

        var Stock = "<td><input class='form-control' id='txtStock" + index + "' name='Itlst[" + index + "].Stock'  style='width: 90px;' type='text' readonly='True'  /></td>";


        

            var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='Itlst[" + index + "].Quantity'  style='width: 90px;' type='text'  value='0' onkeyup = 'changeQty(this," + index + ")' /></td>"

        var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='Itlst[" + index + "].Rate'  style='width: 90px;' type='text' readonly='True'  value='0' onkeyup = 'changeQty(this," + index + ")' /></td>"

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='Itlst[" + index + "].Amount'  style='width: 90px;'  value='0' type='text' readonly='True' /></td>"

  
            var removeCell = "<td><input id='Isvalid" + index + "' name='Itlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='Itlst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Item + Unit + Stock  + Quantity + Rate + Amount + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
</script>
<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("txtDocId").value == "") {
                isValid = false;
                $(txtDocId).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Doc ID");
                return false;
            }
            else {
                $(txtDocId).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("Docdate").value == "") {
                isValid = false;
                $(Docdate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Doc Date");
                return false;
            }
            else {
                $(Docdate).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlType").value == "") {
                isValid = false;
                $(ddlType).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Type");
                return false;
            }
            else {
                $(ddlType).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlLocation").value == "") {
                isValid = false;
                $(ddlLocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Location");
                return false;
            }
            else {
                $(ddlLocation).css({
                    "border": "",
                    "background": ""
                });
            }

        });

    });
</script>