@model Arasan.Models.CreditorDebitNote

@{
    ViewData["Title"] = "Credit/DebitNote";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Account</a> </li>
            <li class="active"> <strong> Credit/Debit Note </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Credit/Debit Note </h5>
                    <hr>
                    @using (Html.BeginForm("CreditorDebitNotes", "CreditorDebitNotes", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <br>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label"> Voucher Type <label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.VType, Model.VTypelst,"--Please select--", new { @id = "ddlVType", @Class = "form-control  _select", @TabIndex = 1,onchange="changeCRDP(this.value)" })   
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Credit/Debit No <label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.number, new { @id = "txtnumber", @class = "form-control", @TabIndex = 2, @size="30" })<br>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label"> Ref No <label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Ref, new { @id = "txtRef", @class = "form-control", @TabIndex = 2, @size="30" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Ref Date <label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Refdate, new { @id = "txtRefdate", @class = "form-control", @TabIndex = 2, @size="30" })<br>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label"> Transaction Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.TDate, new { @id = "TDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>


                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Transaction amount<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.amount, new { @id = "txtamount", @class = "form-control", @TabIndex = 2, @size="30" })<br>

                                        </div>


                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label"> Account Group<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Group, Model.Grouplst,"--Please select--", new { @id = "ddlGroup", @Class = "form-control  _select", @TabIndex = 1, @onchange = "changeGroup(this.value)"  })
                                            @Html.HiddenFor(C => C.ID)
                                            

                                        </div>


                                    </div>
                                </div>
                          
                            
                                <div class="col-md-6">
                                    <div class="form-group"> 

                                        <label for="inputName3" class="col-sm-4 control-label">Account Ledger<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Ledger, Model.Ledgerlst,"--Please select--", new { @id = "ddlLedger", @Class = "form-control  _select", @TabIndex = 1  })

                                        
                                        </div>


                                    </div>
                                </div>
                                
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">


                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th> Account Group </th>
                                                <th> Account Ledger</th>
                                                <th> Transaction amount </th>

                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;

                                                foreach (var item in Model.NoteLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                        <td>
                                                            @Html.DropDownListFor(o => o.NoteLst[i].Grp, Model.NoteLst[i].Grplst, "-- Please Select --", new { @class = "form-control _select newcss", @id = "ddlGrp" + i, style = "width: 200px;" , onchange = "Grup_Change(this.value," + i + ")"})
                                                            @Html.HiddenFor(o => o.NoteLst[i].saveGrp)
                                                            

                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.NoteLst[i].Led, Model.NoteLst[i].Ledlst, "-- Please Select --", new { @class = "form-control _select newcss", @id = "ddlLed" + i, style = "width: 200px;" })

                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.NoteLst[i].Tamount, new { @id = "txtTamount"+ i , @class = "form-control", style = "width: 80px;" , @TabIndex = 2,onkeyup = "changeQty(this, " + i + ")"})

                                                        </td>



                                                        <td>
                                                            @Html.HiddenFor(o => o.NoteLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="NoteLst.Index" type="hidden" value="@(i)" />

                                                        </td>

                                                    </tr>
                                                    i = i + 1;


                                                }

                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <br>
                          <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Voucher Memo<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(C => C.Voucher, new { @id = "txtVoucher", @class = "form-control", @TabIndex = 2, @size="30" })<br>
                                    </div>
                                </div>
                            </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Total Amount<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Total, new { @id = "txtTotal", @class = "form-control", @TabIndex = 2, @size="30"/*,onkeyup = "checkEquality(this, " + i + ")"*/ })<br>
                                        </div>
                                    </div>
                                </div>
                          </div>
                            

                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs"  id="btnSave">Submit</button>
                            <a button class="btn btn-danger" type="submit" href="@Url.Action("ListCreditorDebitNote", "CreditorDebitNotes")">Cancel</a>

                        </form>

                    }
                </div>

            </div>

        </div>

    </div>

</div>

<script>

   

    $('._select').select2();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var Grp = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlGrp" + index + "' name='NoteLst[" + index + "].Grp' onchange = 'Grup_Change(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";


        var Led = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlLed" + index + "' name='Ledlst[" + index + "].Led' ><option value=''>Please select</option></select></td>";

        var Tamount = "<td><input class='form-control' id='txtTamount" + index + "' name='NoteLst[" + index + "].Tamount'  onkeyup = 'changeQty(this, " + index + ")'  style='width: 80px;' type='text'  /></td>";


        var removeCell = "<td><input id='Isvalid" + index + "' name='NoteLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='NoteLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Grp + Led + Tamount + removeCell + "</tr>";

        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }

    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetGrpitemJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }

        //    $(".chosen-select").chosen();
        //    function removeRow(id) {
        //        var table = document.getElementById("dataTable");
        //        var rowCount = table.rows.length;
        //        var row = document.getElementById('trBook' + id);
        //        var j = 0;
        //        $('tr.chkitemlst').each(function () {
        //            if ($(this).css('display') !== 'none') {
        //                j += 1;
        //            }
        //        });
        //        if (j > 1) {
        //            row.style.display = "none";
        //            document.getElementById('Isvalid' + id).value = "N";
        //        }
        //        else {
        //            alert("Cannot delete all the rows.")
        //        }
        //    }

        //    //function changeAdact(typeid, i) {
        //    //    if (typeid == "Dr") {
        //    //        document.getElementById("txtCreditAmount" + i).readOnly = true;
        //    //        document.getElementById("txtDepitAmount" + i).readOnly = false;
        //    //    }

        //    //    else (typeid == "Cr") {
        //    //        document.getElementById("txtDepitAmount" + i).readOnly = true;
        //    //        document.getElementById("txtCreditAmount" + i).readOnly = false;
        //    //    }
        //    //}

        //</script>

<script>

          $(function () {
              $('._select').select2();
          });

          $(document).ready(function () {
              $('#btnSave').click(function (e) {
                  var isValid = true;


            if (document.getElementById("ddlVType").value == "") {
                      isValid = false;
                $(ddlVType).css({
                          "border": "1px solid red",
                          "background": "#FFCECE"
                      });

                      alert("Please Select Voucher Type");
                      return false;
                  }
                  else {
                $(ddlVType).css({
                          "border": "",
                          "background": ""
                      });
                  }
                  if (document.getElementById("txtamount").value == "") {
                      isValid = false;
                $(txtamount).css({
                          "border": "1px solid red",
                          "background": "#FFCECE"
                      });

                alert("Please Enter amount");
                      return false;
                  }
                  else {
                      $(txtamount).css({
                          "border": "",
                          "background": ""
                      });
                  }
            if (document.getElementById("ddlGroup").value == "") {
                      isValid = false;
                      $(ddlGroup).css({
                          "border": "1px solid red",
                          "background": "#FFCECE"
                      });

                      alert("Please Enter Account Group");
                      return false;
                  }
                  else {
                $(ddlGroup).css({
                          "border": "",
                          "background": ""
                      });
                  }
                  if (document.getElementById("ddlLedger").value == "") {
                      isValid = false;
                      $(ddlLedger).css({
                          "border": "1px solid red",
                          "background": "#FFCECE"
                      });

                      alert("Please Enter Ledger");
                      return false;
                  }
                  else {
                      $(txtVoucher).css({
                          "border": "",
                          "background": ""
                      });
                  }if (document.getElementById("txtVoucher").value == "") {
                      isValid = false;
                      $(txtVoucher).css({
                          "border": "1px solid red",
                          "background": "#FFCECE"
                      });

                      alert("Please Enter Voucher");
                      return false;
                  }
                  else {
                      $(ddlLedger).css({
                          "border": "",
                          "background": ""
                      });
                  }if (document.getElementById("txtTotal").value == "") {
                      isValid = false;
                      $(txtTotal).css({
                          "border": "1px solid red",
                          "background": "#FFCECE"
                      });

                      alert("Please EnterTotal Amount");
                      return false;
                  }
                  else {
                $(txtTotal).css({
                          "border": "",
                          "background": ""
                      });
                  }



                  if (isValid == false)
                      e.preventDefault();

              });

          });


          function changeCRDP(ItemId) {
                $.ajax({
                    url: 'GetcrdeoDetail',
                    data: { "ItemId": ItemId },
                    type: "GET",
                    success: function (result) {

                  document.getElementById("txtnumber").value = result.sequnce;

                      
                    },
                    error: function () {
                    }
                });
            }

         

      function Grup_Change(itemid, i) {
        
          $.ajax({
              url: "GetGrpJSON",
              type: "post",
              data: { 'itemid': itemid },
              cache: false,
              success: function (response) {
                  var newlist;
                  //alert(JSON.stringify(response));
                  newlist = response.Ilst;
                  PopulateDropDown("#ddlLed" + i, response);
              },
              error: function () {
                  debugger;
                  alert("Please Select Ledger");
              }
          });
      }

      function changeQty(_this, i) {
          try {

              var j = 0;
              var tot = 0;
              var qty = 0;


              $('tr.chkitemlst').each(function () {
                  if ($(this).css('display') !== 'none') {

                      qty = $(this).find('#txtTamount' + j.toString()).val();
                      if (qty == "")
                          qty = 0;

                      tot += eval(qty);
                  }
                  j += 1;
              });
              document.getElementById("txtTotal").value = tot.toFixed(2);
           
           
           
          }
          catch (ex) {
              alert(ex.message);
          }
      }
    $(document).ready(function () {
            $('#btnSave').click(function (e) {
                var isValid = true;


               var ttot = document.getElementById("txtTotal").value;
              var atot = document.getElementById("txtamount").value;
              alert(ttot);
            alert(atot);

             if(ttot==atot)
             {
                  alert("Amount and Total are Same.")
             }
             else{
                  alert("Amount and Total aren't Same.")
             }
          
            });

     });




    //$(function () {
    //    $('._select').select2();
    //});
    //$(document).ready(function () {
    //    $('#btnSave').click(function (e) {
    //        var isValid = true;
            
    //        var ttot = document.getElementById("txtTotal").value;
    //          var atot = document.getElementById("txtamount").value;
    //          alert(ttot);
    //        alert(atot);

    //         if(ttot==atot)
    //         {
                 
    //         }
    //         else{
    //              alert("Amount and Total aren't Same.")
    //         }
    //              catch (ex) {
    //            alert(ex.message);
    //        }
    //    }
    // }
   
    //function changeCrAmount(_this, i) {
    //    try {

    //        var j = 0;
    //        var qty = 0;
    //        var tot = 0;
    //        $('tr.chkitemlst').each(function () {
    //            if ($(this).css('display') !== 'none') {
    //                qty = $(this).find('#txtCreditAmount' + j.toString()).val();
    //                if (qty == "")
    //                    qty = 0;

    //                tot += eval(qty);
    //            }
    //            j += 1;
    //        });
    //        document.getElementById("txtTotalCrAmount").value = tot.toFixed(2);
    //        var dtot = document.getElementById("txtTotalDeAmount").value;
    //        if (dtot == "")
    //            dtot = 0;
    //        var totclaim = eval(dtot) - eval(tot);
    //        document.getElementById("txtClaimAmount").value = totclaim.toFixed(2);
    //    }
    //    catch (ex) {
    //        alert(ex.message);
    //    }
    //}
     


      $(".chosen-select").chosen();
      function removeRow(id) {
          var table = document.getElementById("dataTable");
          var rowCount = table.rows.length;
          var row = document.getElementById('trBook' + id);
          var j = 0;
          $('tr.chkitemlst').each(function () {
              if ($(this).css('display') !== 'none') {
                  j += 1;
              }
          });
          if (j > 1) {
              row.style.display = "none";
              document.getElementById('Isvalid' + id).value = "N";
          }
          else {
              alert("Cannot delete all the rows.")
          }
      }

      $(function () {
          $('._select').select2();
      });
      function PopulateDropDown(dropDownId, list) {
          //alert(list);
          $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
          if (list != null && list.length > 0) {
              $(dropDownId).removeAttr("disabled");
              $.each(list, function () {
                  $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
              });
          }
          $(dropDownId).trigger("liszt:updated");
      }
      function changeGroup(ItemId) {

          $.ajax({
              url: 'GetLedgerJSON',
              data: { "ItemId": ItemId },
              type: "post",
              success: function (response) {
                  var newlist;
                  newlist = response.Itemlst;
                  PopulateDropDown("#ddlLedger", response);
              },
              error: function () {
                  debugger;
                  alert("Please Select Ledger");
              }
          });
      }


      
</script>

