@model Arasan.Models.Currency

@{
    ViewData["Title"] = "Index";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
 </style>

 <script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>

<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a href="@Url.Action("ListCurrency", "Currency")">Currency</a> </li>
            <li class="active"> <strong>Currency </strong> </li>
        </ol>
    </div>
</div>


<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                  
                    <hr>
                    @using (Html.BeginForm("Currency", "Currency", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                    <form>
                        <div class="row">
                            
                            <div class="col-md-6">
                                <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Symbol<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.CurrencyCode, new { @id = "txtCurrencyCode", @class = "form-control", @TabIndex = 1 })<br />
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.createby)
                                           
                                    </div>
                                </div>
                            </div>
                           
                            <div class="col-md-6">
                                <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Currency Name<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.CurrencyName, new { @id = "txtCurrencyName", @class = "form-control", @TabIndex = 1 })<br />
                                           
                                    </div>

                                </div>
                            </div>
                        </div>


                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Currency Code<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.CurrencyCodes, new { @id = "CurrencyCodes", @class = "form-control", @TabIndex = 1 })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Currency Integer<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.CurrencyInteger, new { @id = "CurrencyInteger", @class = "form-control", @TabIndex = 1 , onkeydown = "return isNumeric2(event.keyCode,this.value)"})
                                        </div>

                                    </div>
                                </div>



                            </div>


                        @*     table *@

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    <table class="table table-striped table-hover" id="dataTable1">
                                        <thead>
                                            <tr>

                                                <th>ConCode </th>
                                                <th>Country</th>

                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int j = 0;

                                                foreach (var item in Model.Currencylst.ToList())
                                                {

                                                    <tr id="trBook@(j)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                        <td>
                                                            @Html.DropDownListFor(o => o.Currencylst[j].ConCode, Model.Currencylst[j].Currencylst, "Please Select", new { @class = "form-control _select newcss", @id = "ConCode" + j, style = "width: 200px;", onchange = "changeItem(value,"+j+")" })

                                                        </td>
                                                       
                                                        <td>


                                                            @Html.TextBoxFor(o => o.Currencylst[j].Country, new { @id = "Country" + j, @class = "form-control", style = "width: 90px;",@readonly="readonly" })

                                                        </td>


                                                        <td>
                                                            @Html.HiddenFor(o => o.Currencylst[j].Isvalid, new { @id = "Isvalid" + j })
                                                            <img onclick="removeRow(@(j));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Complst.Index" type="hidden" value="@(j)" />
                                                        </td>
                                                    </tr>
                                                    j = j + 1;

                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>


                                            
                        <div style="height:30px;"></div>
                        <div class="col-lg-8"></div>

                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListCurrency", "Currency")'">Cancel</button>

                   

                    </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>


    function changeItem(ItemId, i) {

        $.ajax({
            url: 'GetCountry',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("Country" + i).value = result.country;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }

    function AddRow1() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetCItemJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow1(opt);
            }
        })
    }









    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("txtCurrencyCode").value == "" || document.getElementById("txtCurrencyCode").value == 0) {
                isValid = false;
                $(txtCurrencyCode).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Symbol");
                return false;
            }
            else {
                $(txtCurrencyCode).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("CurrencyCodes").value == "" || document.getElementById("txtCurrencyCode").value == 0) {
                isValid = false;
                $(CurrencyCodes).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Currency Code");
                return false;
            }
            else {
                $(CurrencyCodes).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("CurrencyInteger").value == "" || document.getElementById("txtCurrencyCode").value == 0) {
                isValid = false;
                $(CurrencyInteger).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Currency Integer");
                return false;
            }
            else {
                $(CurrencyInteger).css({
                    "border": "",
                    "background": ""
                });
            }


            if (isValid == false)
                e.preventDefault();

        });

    });
</script>