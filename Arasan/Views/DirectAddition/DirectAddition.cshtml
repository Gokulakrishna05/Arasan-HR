@model Arasan.Models.DirectAddition
@{
    ViewData["Title"] = "Direct Addition";
}
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Stores Management</a> </li>
            <li class="active"> <strong> Direct Addition</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Direct Addition</h5>
                    <hr>
                    @using (Html.BeginForm("DirectAddition", "DirectAddition", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                    <form>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Branch <label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Branch, Model.Brlst, new { @id = "ddlBranch", @Class = "form-control chosen-select", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Location<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">

                                            @Html.DropDownListFor(C => C.Location, Model.Loc, new { @id = "ddlLocation", @Class = "form-control chosen-select", @TabIndex = 1 })
                                            <br />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Document ID<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "txtDocId", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Document Date<label class="Mandatory"></label></label>


                                            <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy" ,@readonly=true>
                                            @Html.TextBoxFor(C => C.Docdate, new { @id = "Docdate", @class = "form-control", @TabIndex = 2,@size="31" })
                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                            <br />
                                            </div>
                                    
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Challan No<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ChellanNo, new { @id = "txtChellanNo", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Reason<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Reason, new { @id = "txtReason", @class = "form-control", @TabIndex = 1 })<br />

                                    </div>
                                </div>
                            </div>
                        </div>



                           <div style="height:30px;"></div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="btn-group">
                                            <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                        </div>
                                    </div>
                                </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    @* <div class="ibox float-e-margins">*@

                                    <!-- / ibox-title -->
                                    @* <div id="demo3" class="ibox-content collapse in">
                                <div class="borderedTable">
                                <div class="table-scrollable">*@
                                    <table class="table table-striped table-hover" id="dataTable">
                                                    <thead>
                                                        <tr>

                                                           
                                                            <th> Item </th>
                                                            <th> Unit </th>
                                                            <th>  Bin ID </th>
                                                            @*<th> Batch </th>
                                                            <th>serial</th>*@
                                                            @*<th>Expiry</th>*@
                                                            <th> Quantity </th>
                                                            <th> Cost.Rate </th>
                                                            <th> Amount </th>
                                                            @*<th> Work Center</th>*@
                                                            <th>Process ID</th>
                                                           



                                                        </tr>

                                                    </thead>
                                                    <tbody id="tbBooks">

                                                          @{

                                                            int i = 0;

                                                            foreach (var item in Model.Itlst.ToList())
                                                            {
                                                        <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">


                                                        <td>
                                                            @Html.DropDownListFor(o => o.Itlst[i].ItemId, Model.Itlst[i].Itlst, "Please Select", new { @class = "form-control chosen-select newcss", @id = "ddlItemGrp" + i, style = "width: 200px;", onchange = "Grup_Change(this.value," + i + ")"})
                                                            @Html.HiddenFor(o => o.Itlst[i].saveItemId)
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i].Unit,  new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. BinID, new { @id = "txtBinID" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" })
                                                        </td>
                                                        @* <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Batch, new { @id = "txtBatch" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. serial, new { @id = "txtserial" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Expiry, new { @id = "txtExpiry" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>*@
                                                         <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Quantity, new { @id = "txtQuantity" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" })
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Rate, new { @id = "txtRate" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" ,@readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.Itlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Amount, new { @id = "txtAmount" + i , @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" ,@readonly = "readonly" })
                                                        </td>
                                                       @* <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Center, new { @id = "txtCenter" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>*@
                                                        <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. Process, new { @id = "txtProcess" + i,@class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" })
                                                        </td>
                                                        

                                                        <td>
                                                            @Html.HiddenFor(o => o.Itlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Suplst.Index" type="hidden" value="@(i)" />
                                                        </td>

                                                        </tr>

                                                    i = i + 1;

                                                }
                                            }

                                                    </tbody>




                                    </table>
                                </div>
                            </div>
                                    

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Gross<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Gro, new { @id = "txtGro", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Amount in Words<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                             <input class="form-control" id="inputEmail3" placeholder="" type="text"><br />
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Entered By<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Entered, new { @id = "txtEntered", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Narration<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Narr, new { @id = "txtNarr", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>

                        </div>


                        
                            <div style="height:30px;"></div>
                            <button type="submit" name="submit" class="btn btn-success" id="btnSave" value="Save" tabindex="18">Insert</button>
                            <a button class="btn btn-danger" type="submit" href="@Url.Action("ListDirectAddition", "DirectAddition")">Cancel</a>
                    </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $(".chosen-select").chosen();

    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    $(".chosen-select").chosen();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function changeItem(ItemId, i) {
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;

                document.getElementById("txtConFac" + i).value = result.cf;
                document.getElementById("txtRate" + i).value = result.price;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {
            var qty = document.getElementById("txtQty" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var CF = document.getElementById("txtConFac" + i).value;
            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

            if (CF == "")
                CF = 0;

            if (up > 0) {
                var tot = eval(qty) * eval(up) * eval(CF);
                document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            } else {
                document.getElementById("txtAmount" + i).value = 0;
            }



            var GTot = 0;
            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var unit = $(this).find('#txtQty' + j.toString()).val();
                    var qtys = $(this).find('#txtRate' + j.toString()).val();
                    var CFs = $(this).find('#txtConFac' + j.toString()).val();
                    if (CFs == "")
                        CFs = 0;

                    var tots = eval(qtys) * eval(unit) * eval(CFs);
                    GTot = eval(tots) + eval(GTot);
                }
                j += 1;
            });

            //document.getElementById("gross").value = GTot;
            //document.getElementById("net").value = GTot;
            // document.getElementById('words').value = inWords(GTot);


        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var Itlst = "<td><select style = 'width: 200px;' class='form-control chosen-select newcss' id='Itlst" + index + "' name='Itlst[" + index + "].ItemId' onchange = 'Grup_Change(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='Itlst[" + index + "].Unit'  style='width: 80px;' type='text'onkeydown='return isNumeric2(event.keyCode,this.value)'  onchange = 'changeQty(this.value," + index + ")'  readonly='True' /></td>";

        var BinID = "<td><input class='form-control' id='txtBinID" + index + "' name='Itlst[" + index + "].BinID'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)'  type='text'    /></td>";

        @*var Batch = "<td><input class='form-control' id='txtBatch" + index + "' name='Itlst[" + index + "].Batch'  style='width: 90px;' type='text'   /></td>"

        var serial = "<td><input class='form-control' id='txtserial" + index + "' name='Itlst[" + index + "].serial'  style='width: 90px;' type='text'   /></td>"

        var Expiry = "<td><input class='form-control' id='txtExpiry" + index + "' name='Itlst[" + index + "].Expiry'  style='width: 90px;' type='text'   /></td>"*@

        var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='Itlst[" + index + "].Quantity'  style='width: 90px;' type='text'/></td>"

        var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='Itlst[" + index + "].Rate'  style='width: 90px;' type='text'/></td>"

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='Itlst[" + index + "].Amount'  style='width: 90px;' type='text'/></td>"

        @*var Center = "<td><input class='form-control' id='txtCenter" + index + "' name='Itlst[" + index + "].Center'  style='width: 90px;' type='text'/></td>"*@

        var Process = "<td><input class='form-control' id='txtProcess" + index + "' name='Itlst[" + index + "].Process'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)'  type='text'/></td>"

        var removeCell = "<td><input id='Isvalid" + index + "' name='Itlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='Itlst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Itlst + Unit + BinID + Quantity + Rate + Amount + Process + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(".chosen-select").chosen();
    }
</script>