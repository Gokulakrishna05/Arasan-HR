@model Arasan.Models.DirectDeduction
@{
    ViewData["Title"] = "Direct Deduction";
}
<style>
    .newwidth {
        width: 120px;

    }
     .mandatory{
	color: red;
	position:relative;
	top:2px;
	left:5px;
}
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="@Url.Action("PurchaseDash", "Home")">Home</a> </li>
            <li> <a>Stores Management</a> </li>
            <li class="active"> <strong>  Direct Deduction</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Direct Deduction </h5>
                    <hr>
                    @using (Html.BeginForm("DirectDeduction","DirectDeduction", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                    <form>
                        <div class="row">
                            @*<div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Branch <label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Branch, Model.Brlst, new { @id = "ddlBranch", @Class = "form-control _select", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>*@
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">

                                            @Html.DropDownListFor(C => C.Location, Model.Loc,"---Please Select---", new { @id = "ddlLocation", @Class = "form-control _select", @TabIndex = 1 ,@onchange="changeItemDet(this.value)" })<br />

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div style="height:15px;"></div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <br /><label for="inputName3" class="col-sm-4 control-label">Document No<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "txtDocId", @class = "form-control", @TabIndex = 1 ,@readonly=true})
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.Branch)
                                            @Html.HiddenFor(C => C.user)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">


                                  <br />   <label for="inputName3" class="col-sm-4 control-label">Document Date<label class="mandatory">*</label></label>
                                          <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy" >

                                            @Html.TextBoxFor(C => C.Docdate, new { @id = "Docdate", @class = "form-control", @TabIndex = 2,@size="31" ,@readonly=true})
                                                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                          <br />
                                          </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">D.C.No<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Dcno, new { @id = "txtDcno", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                          @*  <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Material Supply<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Material, new { @id = "txtMaterial", @class = "form-control", @TabIndex = 1 })<br />

                                    </div>
                                </div>
                            </div>*@
                        
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Reason<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Reason, new { @id = "txtReason", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>

                        </div>


                            <div style="height:30px;"></div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="btn-group">
                                                <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                            </div>
                                        </div>
                                    </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    @* <div class="ibox float-e-margins">*@

                                    <!-- / ibox-title -->
                                    @* <div id="demo3" class="ibox-content collapse in">
                                <div class="borderedTable">
                                <div class="table-scrollable">*@
                                    <table class="table table-striped table-hover" id="dataTable">
                                                    <thead>
                                                        <tr>

                                                           
                                                            
                                                            <th> Item </th>
                                                            <th> Lot </th>
                                                            <th> Unit </th>
                                                            @* <th>Con.Fac</th>
                                                            <th> Bin ID </th>
                                                           <th> Batch </th>
                                                            <th> Serial </th>*@
                                                            <th>  Stock </th>
                                                            <th> Qty </th>
                                                            <th> Rate </th>
                                                            <th> Amount </th>
                                                            @*<th> Drum serial Number </th>
                                                            <th> Serial Number </th>
                                                            <th> Process ID</th>*@

                                                            @*<th>Batch</th>*@
                                                        </tr>

                                                    </thead>
                                        <tbody id="tbBooks">

                                            
                                                          @{

                                            int i = 0;

                                            foreach (var item in Model.Itlst.ToList())
                                            {

                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">


                                                        
                                                        <td>
                                                                    @Html.DropDownListFor(o => o.Itlst[i].ItemId, Model.Itlst[i].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItem(this.value," + i + ")" })
                                                                    @Html.HiddenFor(o => o.Itlst[i].saveItemId)
                                                                    @Html.HiddenFor(o => o.Itlst[i].dqty,new{@id="dqty" + i})
                                                                                @Html.HiddenFor(o => o.Itlst[i].drate,new{@id="drate" + i})
                                                                                @Html.HiddenFor(o => o.Itlst[i].Lotno, new { @id = "lotno" + i })
                                                                                @Html.HiddenFor(o => o.Itlst[i].ddrum, new { @id = "ddrum" + i })
                                                                                @Html.HiddenFor(o => o.Itlst[i].damount, new { @id = "damount" + i })
                                                                                @Html.HiddenFor(o => o.Itlst[i].dstock, new { @id = "dstock" + i })
                                                        </td>
                                                         <td><label id="lot@(i)"></label></td>
                                                        <td>
                                                                    @Html.TextBoxFor(o => o.Itlst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;" , @readonly = "readonly"})@Html.HiddenFor(o => o.Itlst[i].ConFac, new { @id = "txtConFac" + i, @class = "form-control", style = "width: 80px;" , @readonly = "readonly"})
                                                        </td>
                                                        @* <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i].ConFac, new { @id = "txtConFac" + i, @class = "form-control", style = "width: 80px;" , @readonly = "readonly"})
                                                 </td>
                                                <td>
                                                            @Html.TextBoxFor(o => o.Itlst[i]. BinID, new { @id = "txtBinID" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @readonly = "readonly" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(o => o.Itlst[i]. Batch, new { @id = "txtBatch" + i, @class = "form-control", style = "width: 90px;"})
                                                </td>*@
                                                        @*<td>
                                                    @Html.TextBoxFor(o => o.Itlst[i]. serial, new { @id = "txtserial" + i, @class = "form-control", style = "width: 90px;"})
                                                </td>*@
                                                        @*<td>
                                                    @Html.TextBoxFor(o => o.Itlst[i]. CurrentStock, new { @id = "txtCurrentStock" + i, @class = "form-control", style = "width: 90px;"})
                                                </td>*@
                                                         <td>
                                                                    @Html.TextBoxFor(o => o.Itlst[i]. CurrentStock, new { @id = "txtCurrentStock" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                                    @Html.TextBoxFor(o => o.Itlst[i]. Quantity, new { @id = "txtQuantity" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" })
                                                        </td>
                                                        <td>
                                                                    @Html.TextBoxFor(o => o.Itlst[i].rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px;",@readonly="readonly",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                                    @Html.TextBoxFor(o => o.Itlst[i].Amount, new { @id = "txtAmount" + i , @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" ,@readonly = "readonly" })
                                                        </td>
                                                        @*<td>
                                                    @Html.TextBoxFor(o => o.Itlst[i]. Number, new { @id = "txtNumber" + i, @class = "form-control", style = "width: 90px;"})
                                                </td>*@
                                                       @* <td>
                                                    @Html.TextBoxFor(o => o.Itlst[i]. SerialNumber, new { @id = "txtSerialNumber" + i, @class = "form-control", style = "width: 90px;"})
                                                </td>
                                                 <td>
                                                            @Html.DropDownListFor(o => o.Itlst[i].Process, Model.Itlst[i].Processlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlProcess" + i, style = "width: 200px;" })
                                                           
                                                 </td>*@


                                                        <td>
                                                            @Html.HiddenFor(o => o.Itlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Suplst.Index" type="hidden" value="@(i)" />
                                                        </td>


                                                                </tr>
                                            i = i + 1;

                                            }
                                            }

                                        </tbody>




                                     </table>
                                 </div>
                            </div>
                                   
                           <div style="height:30px;"></div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                  <br />  <label for="inputName3" class="col-sm-4 control-label">Gross<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Gro, new { @id = "gross", @class = "form-control", @TabIndex = 1,@readonly=true })

                                    </div>
                                </div>
                            </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                         <br /> <label for="inputName3" class="col-sm-4 control-label">Net<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.net, new { @id = "net", @class = "form-control", @TabIndex = 2,@readonly=true })  <br />
                                        </div>

                                    </div>
                                </div>

                        </div>
                         <div style="height:15px;"></div>
                        @*<div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Entered By<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Entered, Model.assignList, new { @id = "ddlEnterd", @Class = "form-control _select", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>
                         </div>*@

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Narration<label class="mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextAreaFor(C => C.Narr, new { @id = "txtNarr", @class = "form-control", @TabIndex = 1 })
                                    </div>
                                </div>
                            </div>

                        </div>



                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <a button class="btn btn-danger" type="submit" href="@Url.Action("ListDirectDeduction", "DirectDeduction")">Cancel</a>
                    </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $(function () {
        $('._select').select2();
    });
</script>
<script>
    $(function () {
        $('._select').select2();
    });

    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
     function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    $(".chosen-select").chosen();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
     function changeItemDet(ItemId) {
    
        $.ajax({
            url: "GetStockItemJSON",
            type: "post",
            data: { 'ItemId': ItemId },
            cache: false,
            success: function (response) {
                var newlist;
                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                var i = 0;
                $('tr.chkitemlst').each(function () {
                    if ($(this).css('display') !== 'none') {
                        PopulateDropDownn("#ddlItem" + i, response);
                        i += 1;
                    }
                });
            },
            error: function () {
                debugger;
                alert("Please Select Location");
            }
        });
    }
    function Grup_Change(itemid, i) {
        //alert(itemid);
        //debugger;
        $.ajax({
            url: "GetItemJSON",
            type: "post",
            data: { 'itemid': itemid },
            cache: false,
            success: function (response) {
                var newlist;

                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                PopulateDropDown("#ddlItem" + i, response);

            },
            error: function () {
                debugger;
                alert("Please Select Item Group");
            }
        });
    }
    function changeItem(ItemId, i) {
         var loc = document.getElementById("ddlLocation").value;
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId ,"loc":loc},
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;
                document.getElementById("txtConFac" + i).value = result.cf; 
                
                document.getElementById("txtCurrentStock" + i).value = result.stock;
                if(result.type=="YES")
                {
              document.getElementById("lot" + i).innerHTML=" <a href=LotSelection?ItemId=" + ItemId + "&loc="+loc+"&rowid="+i+" class='fancybox' data-fancybox-type='iframe'> <img src='../Images/view_icon.png' /></a>";

                }
                else{
                    document.getElementById("lot" + i).innerHTML="";
                    document.getElementById("txtRate" + i).value = result.price;

                }
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {
            var qty = document.getElementById("txtQuantity" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var CF = document.getElementById("txtConFac" + i).value;
            var stock = document.getElementById("txtCurrentStock" + i).value;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

            if (CF == "")
                CF = 0;
          
                if(eval(qty) > eval(stock) )
                {
                    alert("Qty is Greaterthen for Stock");
               document.getElementById("txtQuantity" + i).value = 0;
               document.getElementById("txtAmount" + i).value = 0;
                }
            if (up > 0) {
                var tot = eval(qty) * eval(up) * eval(CF);
                document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            } else {
                document.getElementById("txtAmount" + i).value = 0;
            }



            var GTot = 0;
            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var tamt = $(this).find('#txtAmount' + j.toString()).val();
                     
                    
                    if (tamt == "")
                        tamt = 0;

                     

                     
                    GTot += eval(tamt);
                
                }
                j += 1;
            });

            document.getElementById("gross").value = GTot;
            document.getElementById("net").value = GTot;
            // document.getElementById('words').value = inWords(GTot);


        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow() {
        var opt = "";
        var remopt = "";
        var ItemId = document.getElementById("ddlLocation").value;
        $.ajax({
            type: "POST",
            url: 'GetStockItemJSON',
               data: { "ItemId":ItemId },
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                $.ajax({
                    type: "POST",
                    url: 'GetItemProcessJSON',
                    success: function (data) {
                        $.each(data, function () {
                            remopt += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                        AppendRow(opt, remopt);
                    }
                })

            }
        })
    }
    $(".chosen-select").chosen();
    function removeRow(i) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + i);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + i).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
         try {
            var qty = document.getElementById("txtQuantity" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var CF = document.getElementById("txtConFac" + i).value;
            var stock = document.getElementById("txtCurrentStock" + i).value;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

            if (CF == "")
                CF = 0;
          
                if(eval(qty) > eval(stock) )
                {
                    alert("Qty is Greaterthen for Stock");

               document.getElementById("txtQuantity" + i).value = 0;
             
                }
            if (up > 0) {
                var tot = eval(qty) * eval(up) * eval(CF);
                document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            } else {
                document.getElementById("txtAmount" + i).value = 0;
            }



            var GTot = 0;
            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var tamt = $(this).find('#txtAmount' + j.toString()).val();
                     
                    
                    if (tamt == "")
                        tamt = 0;

                     

                     
                    GTot += eval(tamt);
                
                }
                j += 1;
            });

            document.getElementById("gross").value = GTot;
            document.getElementById("net").value = GTot;
            // document.getElementById('words').value = inWords(GTot);


        }
        catch (ex) {
            alert(ex.message);
        }
    }
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function AppendRow(opt,remopt) {
        var index = $("#tbBooks").children("tr").length;

 

        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='Itemlst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var lot = "<td><lable id='lot"+index+"'></lable></td>";
        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='Itlst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' value='0' /><input class='form-control' id='txtConFac" + index + "' name='Itlst[" + index + "].ConFac'  style='width: 80px;' type='hidden' readonly='True' value='0'  /><input class='form-control' id='dqty" + index + "' name='Itlst[" + index + "].dqty' type='hidden' /><input class='form-control' id='lotno" + index + "' name='Itlst[" + index + "].Lotno' type='hidden' /><input class='form-control' id='drate" + index + "' name='Itlst[" + index + "].drate' type='hidden' /><input class='form-control' id='dstock" + index + "' name='Itlst[" + index + "].dstock' type='hidden' /><input class='form-control' id='damount" + index + "' name='Itlst[" + index + "].damount' type='hidden' /><input class='form-control' id='ddrum" + index + "' name='Itlst[" + index + "].ddrum' type='hidden' /></td>";

        var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='Itlst[" + index + "].ConFac'  style='width: 80px;' type='text' readonly='True' value='0'  /></td>";

        var BinID = "<td><input class='form-control' id='txtBinID" + index + "' name='Itlst[" + index + "].BinID'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)' value='0'  readonly='True' type='text'    /></td>";

      @* var Batch = "<td><input class='form-control' id='txtBatch" + index + "' name='Itlst[" + index + "].Batch'  style='width: 90px;' type='text'   /></td>"

        var serial = "<td><input class='form-control' id='txtserial" + index + "' name='Itlst[" + index + "].serial'  style='width: 90px;' type='text'   /></td>"

        var CurrentStock = "<td><input class='form-control' id='txtCurrentStock" + index + "' name='Itlst[" + index + "].CurrentStock'  style='width: 90px;' type='text'   /></td>"*@

        var stock = "<td><input class='form-control' id='txtCurrentStock" + index + "' name='Itlst[" + index + "].CurrentStock'  style='width: 80px;' type='text' value='0' onkeyup = 'changeQty(this," + index + ")' readonly='True' /></td>"
        var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='Itlst[" + index + "].Quantity'  style='width: 80px;' type='text' value='0' onkeyup = 'changeQty(this," + index + ")'  /></td>"

        var rate = "<td><input class='form-control' id='txtRate" + index + "' name='Itlst[" + index + "].rate'  style='width: 80px;' type='text'  readonly='True' value='0' onkeyup = 'changeQty(this," + index + ")'  /></td>"

            var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='Itlst[" + index + "].Amount'  style='width: 80px;' type='text'  readonly='True' value='0' /></td>"


       @* var Number = "<td><input class='form-control' id='txtNumber" + index + "' name='Itlst[" + index + "].Number'  style='width: 90px;' type='text'   /></td>"

        var SerialNumber = "<td><input class='form-control' id='txtSerialNumber" + index + "' name='Itlst[" + index + "].SerialNumber'  style='width: 90px;' type='text'   /></td>" *@
@*
        var Process = "<td><input class='form-control' id='txtProcess" + index + "' name='Itlst[" + index + "].Process'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)'  type='text'    /></td>";
*@
        var Process = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlProcess" + index + "' name='Itlst[" + index + "].Process' ><option value=''>Please select</option>" + remopt + "</select></td>";


       @* var Bat = "<td><input class='form-control' id='txtBat" + index + "' name='Itlst[" + index + "].Bat'  style='width: 90px;' type='text'   /></td>"*@


        var removeCell = "<td><input id='Isvalid" + index + "' name='Itlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='Itlst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>"  + Item + lot + Unit  + stock + Quantity + rate + Amount  + removeCell + "</tr>";

        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
</script>
<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
              if (document.getElementById("ddlLocation").value == "") {
                isValid = false;
                $(ddlLocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Location");
                return false;
            }
            else {
                $(ddlLocation).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtDocId").value == "") {
                isValid = false;
                $(txtDocId).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Doc ID");
                return false;
            }
            else {
                $(txtDocId).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("Docdate").value == "") {
                isValid = false;
                $(Docdate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Doc Date");
                return false;
            }
            else {
                $(Docdate).css({
                    "border": "",
                    "background": ""
                });
            }

          

            if (document.getElementById("txtReason").value == "") {
                isValid = false;
                $(txtReason).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Reason");
                return false;
            }
            else {
                $(txtReason).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtgross").value == "") {
                isValid = false;
                $(txtgross).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Gross");
                return false;
            }
            else {
                $(txtgross).css({
                    "border": "",
                    "background": ""
                });
            }
            if (isValid == false)
                e.preventDefault();

        });

    });
</script>

                
<a class="fancybox1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<a class="fancyboxe1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<link rel="stylesheet" href="@Url.Content("~/css/jquery.fancybox.css?v=2.1.5")" type="text/css" media="screen" />
<script type="text/javascript" src="@Url.Content("~/css/jquery.fancybox.pack.js?v=2.1.5")"></script>
<script type="text/javascript">
    var fancybox123;
    jQuery(document).ready(function ($) {
        $(".fancybox").fancybox({
            width: '80%',
            height: '10%',
            arrows: false,
            
        });
        fancybox123 = $.fancybox;
    });

    function close_popup() {
        fancybox123.close();
        $(".fancybox1").fancybox({
            width: '100%',
            height: '100%',
            arrows: false,
        });
        $(".fancybox1").eq(0).trigger('click');
    }


            //function changeStatus(status) {
            //    var url = "/PurchaseQuo/ListPurchaseQuo?status=" + status;
            //    window.location.href = url;
            //    //$.ajax({
            //    //    url: 'AssignSession',
            //    //    data: { "status": status },
            //    //    type: "GET",
            //    //    success: function (result) {
            //    //        document.getElementById("hdstatus").value = result;
            //    //    },
            //    //    error: function () {
            //    //        alert("Data Not Found");
            //    //    }
            //    //});
            //    //window.location.reload();
</script>