@model Arasan.Models.DirectPurchase
@{
    ViewData["Title"] = " Direct Purchase";
}
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">
        <style>
            .newwidth {
                width: 90px;
            }

            .mandatory {
                color: red;
                position: relative;
                top: 2px;
                left: 5px;
            }
        </style>
        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Purchase</a> </li>
            <li class="active"> <strong> Direct Purchase </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Direct Purchase</h5>
                    <hr>
 
                    @using (Html.BeginForm("DirectPurchase", "DirectPurchase", FormMethod.Post))
 
                    {
                        @Html.AntiForgeryToken()

                        <form>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Purchase Type <label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Purtype, Model.putypelst," -- Please Select -- ", new { @id = "ddlputype", @Class = "form-control _select", @TabIndex = 1 ,@onchange="getputype(this.value)"})
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Supplier <label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Supplier, Model.Suplst," -- Please Select -- ", new { @id = "ddlSupplier", @Class = "form-control _select", @TabIndex = 1 ,@onchange="getsuptype(this.value)"})
                                            @Html.HiddenFor(c=>c.statetype,new { @id="hdstate"})
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Loclst," -- Please Select -- ", new { @id = "ddllocation", @Class = "form-control _select", @TabIndex = 4 ,@onchange="locchange(this.value)"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Doc No<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocNo, new { @id = "txtDocNo", @class = "form-control", @TabIndex = 2, @readonly = "readonly" })
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.user)
                                            @Html.HiddenFor(C => C.Branch)


                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Doc. Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                        <input type="hidden" id="dtp_input2" value="" />

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Currency<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Currency, Model.Curlst," -- Please Select -- ", new { @id = "ddlCurrency", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">

                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Ref. No<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.RefNo, new { @id = "txtRefNo", @class = "form-control", @TabIndex = 2 })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Ref. Date<label class="Mandatory"></label></label>

                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.RefDate, new { @id = "RefDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>


                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Voucher Type<label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Voucher, new { @id = "txtVoucher", @class = "form-control", @TabIndex = 2 ,@readonly=true})
                                            @* @Html.DropDownListFor(C => C.Voucher, Model.Vocherlst," -- Please Select -- ", new { @id = "ddlVoucher", @Class = "form-control _select", @TabIndex = 1 })*@
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div id="divindent" style="display:none;">
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                            <a href="@Url.Action("IndentSelection", "DirectPurchase")" class='fancybox' data-fancybox-type='iframe' id="hdrumselection"><img src='../Images/view_icon.png' /> Select Indent</a>
                            </div>
                            </div>
                            </div>

                            <div id="divitem" style="display:none;">
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> 
                                            <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                                </div>
                            
                            </div>
                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">
                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th>Indent No</th>
                                                <th>Indent Date</th>
                                                <th> Item </th>
                                                <th>Tariff Id</th>
                                                <th> Unit </th>
                                                 <th>Bin Id</th>
                                                <th>Conv. Factor</th>
                                                 @*<th> Purchase Type </th>*@
                                                 <th> Indent Qty </th>
                                            <th> Pending Qty </th>
                                                <th> Qty </th>
                                                <th>Rate </th>
                                                <th> Amount</th>
                                                <th> Disc %</th>
                                                <th> Disc amount</th>
                                                 <th> Freight charges</th>
                                                   <th> Packing charges</th>
                                                <th> Other charges</th>
                                                <th> SplDiscount</th>
                                              <th> Cost Rate</th>
                                                <th>CGSTP</th>
                                                <th>SGSTP</th>
                                                <th>IGSTP</th>
                                                <th>CGST</th>
                                                <th>SGST</th>
                                                <th>IGST</th>
                                                <th>Total Amount</th>
                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;
                                                int j = 1;

                                                foreach (var item in Model.DirLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        <td>
                                                            @Html.DisplayFor(o => o.DirLst[i].IndentId)
                                                            @Html.HiddenFor(o => o.DirLst[i].IndentId)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(o => o.DirLst[i].IndentDate)
                                                            @Html.HiddenFor(o => o.DirLst[i].IndentDate)
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.DirLst[i].ItemId, Model.DirLst[i].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItem(this.value," + i + ")" })
                                                            @Html.HiddenFor(o => o.DirLst[i].saveItemId)
                                                    @Html.HiddenFor(o => o.DirLst[i].ConvQty,new{@id="txtPriqty" +i})
                                                            @Html.HiddenFor(o => o.DirLst[i].inddetid,new{@id="txtInddetid"+i})
                                                         </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.DirLst[i].gst, Model.DirLst[i].gstlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlgst" + i, style = "width: 150px;", onchange = "changeGst(this.value," + i + ")" })

                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;" , @readonly = "readonly"})
                                                        </td>
                                                        <td>@Html.DisplayFor(o => o.DirLst[i].BinId)</td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].ConFac, new { @id = "txtConFac" + i, @class = "form-control", style = "width: 80px;" , @readonly = "readonly"})
                                                        </td>
                                                       
                                                        @*  <td>
                                            @Html.DropDownListFor(o => o.DirLst[i].PurType, Model.DirLst[i].PURLst, "Please Select", new { @class = "form-control chosen-select newcss", @id = "ddlPurtype" + i, style = "width: 170px;"})
                                            </td>*@
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].Indqty, new { @id = "txtIndqty" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" ,@readonly="true"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].pendqty, new { @id = "txtpendqty" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" ,@readonly="true"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].Quantity, new { @id = "txtQuantity" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].rate, new { @id = "txtrate" + i, @class = "form-control", style = "width: 80px;",@readonly="readonly",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].Disc, new { @id = "txtDisc" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].DiscAmount, new { @id = "txtDiscAmount" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].FrigCharge, new { @id = "txtFrigCharge" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
 
 
                                                         <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].packn, new { @id = "txtpackn" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].otherch, new { @id = "txtotherch" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].spldic, new { @id = "txtspldic" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].costrate, new { @id = "txtCostRate" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
 
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].CGSTP, new { @id = "txtCGSTP" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", @readonly = "readonly"})
                                                            @Html.HiddenFor(o => o.DirLst[i].Percentage,new{@id="txtPercentage" +i})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].SGSTP, new { @id = "txtSGSTP" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", @readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].IGSTP, new { @id = "txtIGSTP" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", @readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].CGST, new { @id = "txtCGST" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].SGST, new { @id = "txtSGST" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].IGST, new { @id = "txtIGST" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.DirLst[i].TotalAmount, new { @id = "txtTotalAmount" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                        </td>


                                                        <td>
                                                            @Html.HiddenFor(o => o.DirLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="DirLst.Index" type="hidden" value="@(i)" />
                                                        </td>
                                                    </tr>
                                                i = i + 1;
                                                j = j + 1;
 

                                            }
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div style="height:30px;"></div>
                        <div class="row">
                            <div class="col-md-4" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                <table class="table table-striped table-hover" id="dataTable">
                                    <thead>
                                    </thead>
                                    <tbody id="tbBooks">
                                        @{
                                            <tr>

                                                <th>GROSS</th>
                                                <td>
                                                    @Html.TextBoxFor(o => o.Gross, new { @id = "txtGross"  , @class = "form-control", style = "width: 150px;text-align:right", @readonly = "readonly"})
                                                </td>
                                            </tr>
                                            <tr>
                                                <th>DISCOUNT</th>
                                                <td>
                                                    @Html.TextBoxFor(o => o. Disc, new { @id = "txtTDisc"  , @class = "form-control", style = "width: 150px;text-align:right" , @onkeyup = "changeTot(this)"})
                                                </td>
                                            </tr>
                                            <tr>
                                                <th>Fright</th>
                                                <td>

                                                    @Html.TextBoxFor(o => o. Frieghtcharge, new { @id = "txtFrieghtcharge"  , @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right", @onkeyup = "changeTot(this)"})
                                                </td>
                                            </tr>
                                            <tr>
                                                <th>Packing and Forwarding ( + )</th>
                                                <td>

                                                    @Html.TextBoxFor(o => o. Packingcharges, new { @id = "txtPackingcharges"  , @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right", @onkeyup = "changeTot(this)"})
                                                </td>
                                            </tr>

                                            <tr>
                                                <th>CGST @Html.DisplayFor(o => o. CGSTDISP) %</th>
                                                <td>

                                                    @Html.TextBoxFor(o => o. CGST, new { @id = "txtCGST"  , @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right",@readonly="readonly"})
                                                </td>
                                            </tr>
                                            <tr>
                                                <th>SGST @Html.DisplayFor(o => o. SGSTDISP) %</th>
                                                <td>
                                                    @Html.TextBoxFor(o => o. SGST, new { @id = "txtSGST"  , @class = "form-control", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <th>IGST @Html.DisplayFor(o => o. IGSTDISP) %</th>
                                                <td>
                                                    @Html.TextBoxFor(o => o. IGST, new { @id = "txtIGST"  , @class = "form-control", style = "width: 150px;text-align:right", @readonly = "readonly" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <th> ROUND OFF</th>
                                                <td>
                                                    @Html.TextBoxFor(o => o. Round, new { @id = "txtRound"  , @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right"  , @onkeyup = "changeTot(this)"})
                                                </td>
                                            </tr>
                                            <tr>
                                                <th> TOTAL </th>
                                                <td>
                                                    <input type="hidden" id="hidnet" />
                                                    @Html.TextBoxFor(o => o. Net, new { @id = "txtNet"  , @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 150px;text-align:right",@readonly="readonly"})
                                                </td>


                                            </tr>

                                        }


                                    </tbody>
                                </table>
                            </div>

                            
                    



                     
                            <div class="col-md-8">
                                <div class="tabs-container">
                                    <ul class="nav nav-tabs">
                                        @*<li class="active"><a href="#tab-1" data-toggle="tab">Despatch Address</a></li>*@
                                        <li class="active"><a href="#tab-1" data-toggle="tab">Despatch Address</a></li>

                                    
                                    </ul>
                                    <div class="tab-content">

 
                                        <div class="tab-pane active" id="tab-1">

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group">

 
                                        <div class="tab-pane active" id="tab-1">

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group">

                                                         <br /> <label for="inputName3" class="col-sm-2 control-label">Truck No<label class="Mandatory"></label></label>
                                                        <div class="col-sm-10">
                                                            @Html.TextBoxFor(C => C.truckno, new { @id = "txttruckno", @class = "form-control", @TabIndex = 1})
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group">

                                                        <br /> <label for="inputName3" class="col-sm-2 control-label">Narration<label class="Mandatory"></label></label>
                                                        <div class="col-sm-10">
                                                            @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control",@value="Invoice to", @TabIndex = 1 })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">

                                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Transporter<label class="Mandatory"></label></label>
                                                        <div class="col-sm-8">

                                                            @Html.TextBoxFor(C => C.drivername, new { @id = "txtdrivername", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <br /> <label for="inputName3" class="col-sm-4 control-label">LR.No<label class="Mandatory"></label></label>

                                                        <div class="col-sm-8">
                                                            @Html.TextBoxFor(C => C.LRno, new { @id = "txtLRno", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">

                                                        <br /><label for="inputName3" class="col-sm-4 control-label">LR.Date<label class="Mandatory"></label></label>
                                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                            @Html.TextBoxFor(C => C.LRdate, new { @id = "LRdate", @class = "form-control", @TabIndex = 2,@size="32",@readonly=true })
                                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Place Of Dispatch<label class="Mandatory"></label></label>

                                                        <div class="col-sm-8">
                                                            @Html.TextBoxFor(C => C.dispatchname, new { @id = "txtdispatchname", @class = "form-control", @TabIndex = 1 })
                                                        </div>

                                                    </div>
                                                </div>
                                             </div>
                                            @*1st tab*@
                                             <div class="row">
                                        </div>
                                            <div class="col-md-12">
                                                <div class="form-group">

                                                    <br /> <label for="inputName3" class="col-sm-2 control-label">Amount In Words<label class="Mandatory"></label></label>
                                                    <div class="col-sm-10">
                                                        @Html.TextBoxFor(C => C.Amountinwords, new { @id = "txtAmountinw", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly=true})
                                                    </div>
                                                </div>
                                            </div>
                                             </div>
                                            @*1st tab*@

                                         </div>

 
                                    </div>
                                    </div>
                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div style="height:30px;"></div>
                        <div class="col-lg-10"></div>
                        <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                        <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListDirectPurchase", "DirectPurchase")'">Cancel</button>


                    </form>
        }
                </div>

            </div>
        </div>

    </div>
</div>
<script>
    $(function () {
        $('._select').select2();
    });
    $(".chosen-select").chosen();
 
</script>

<script>

    $(function () {
        $('._select').select2();

    });

    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("ddlBranch").value == "" || document.getElementById("ddlBranch").value == 0) {
                isValid = false;
                $(ddlBranch).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Branch");
                return false;
            }
            else {
                $(ddlBranch).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("DocDate").value == "") {
                isValid = false;
                $(DocDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select  Date");
                return false;
            }
            else {
                $(DocDate).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtDocNo").value == "") {
                isValid = false;
                $(txtDocNo).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Doc No");
                return false;
            }
            else {
                $(txtDocNo).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("ddlCurrency").value == "" || document.getElementById("ddlCurrency").value == 0) {
                isValid = false;
                $(ddlCurrency).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Currency");
                return false;
            }
            else {
                $(ddlCurrency).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddllocation").value == "" || document.getElementById("ddllocation").value == 0) {
                isValid = false;
                $(ddllocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Loacation");
                return false;
            }
            else {
                $(ddllocation).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlSupplier").value == "" || document.getElementById("ddlSupplier").value == 0) {
                isValid = false;
                $(ddlSupplier).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Supplier");
                return false;
            }
            else {
                $(ddlSupplier).css({
                    "border": "",
                    "background": ""
                });
            }

            if (isValid == false)
                e.preventDefault();
        });

    });
</script>

<script>

    function locchange(locid) {

        $.ajax({
            url: 'GetDocidDetail',
            data: { "locid": locid },
            type: "GET",
            success: function (result) {

                document.getElementById("txtDocNo").value = result.doc;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function fetchindent(indentid){
        document.getElementById("tbBooks").innerHTML="";
        var supid = document.getElementById("ddlSupplier").value;
        $.ajax({
            url: 'GetIndentDetail',
            data: { "indentid": indentid, "supid": supid },
            type: "GET",
            success: function (list) {
                if (list != null && list.length > 0) {

                    list.forEach((item) => {


                        var opt = "";
                        $.ajax({
                            url: 'GetGSTItemJSON',
                            data: { "itemid": item.saveitemid, "custid": supid },
                            type: "GET",
                            success: function (data) {

                                $.each(data, function () {
                                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                                });

                                loadindent(item, opt)
                            },
                            error: function () {
                                alert("Data Not Found");
                            }
                        });
                       
                    });

                }
                //document.getElementById("txtDocNo").value = result.doc;
            },
            error: function () {
                alert("Data Not Found");
            }
        }); 
    }
  function loadindent(item,opt){
        var index = $("#tbBooks").children("tr").length;

        var indentno = "<td><label style='width:110px;'>" + item.indentno + "</label><input class='form-control' id='txtindentno" + index + "' name='DirLst[" + index + "].indentno'  style='width: 80px;' value='"+ item.indentno +"'   type='hidden'  /></td>";

        var indentdate = "<td><label style='width:110px;'>" + item.indentdate + "</label><input class='form-control' id='txtindentno" + index + "' name='DirLst[" + index + "].indentdate'  style='width: 80px;' value='"+ item.indentdate +"'   type='hidden'  /><input class='form-control' id='txtindentno" + index + "' name='DirLst[" + index + "].inddetid'  style='width: 80px;' value='"+ item.inddetid +"'   type='hidden'  /></td>";

        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='DirLst[" + index + "].ItemId' readonly><option value='" + item.saveitemid + "'>" + item.itemid + "</option></select></td>";

        var tarrif = "<td><select style = 'width: 150px;' class='form-control _select newcss' id='ddlgst" + index + "' name='DirLst[" + index + "].gst' onchange = 'changeGst(this.value," + index + ")'>" + opt + "</select></td>";

        

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='DirLst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' value=" + item.unit + "  /></td>";

        var BinId = "<td><label style='width:110px;'>" + item.binid + "</label></td>";

        var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='DirLst[" + index + "].ConFac'  style='width: 80px;' type='text' readonly='True' value="+ item.cf +" /></td>";

        var IndQty = "<td><input class='form-control' id='txtIndqty" + index + "' name='DirLst[" + index + "].Indqty'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value=" + item.indentqty + " onchonkeyupange = 'changeQty(this.value," + index + ")' readonly='True' /></td>";

        var Pendqty = "<td><input class='form-control' id='txtpendqty" + index + "' name='DirLst[" + index + "].pendqty'   style='width: 80px;' type='text' value=" + item.ordqty + "  readonly='True' /></td>";

        var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='DirLst[" + index + "].Quantity'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var rate = "<td><input class='form-control' id='txtrate" + index + "' name='DirLst[" + index + "].rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text'   value='0' onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='DirLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text'  readonly='True' value='0' /></td>";

        var Disc = "<td><input class='form-control' id='txtDisc" + index + "' name='DirLst[" + index + "].Disc'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' onkeyup = 'changeQty(this.value," + index + ")'   /></td>";

        var DiscAmount = "<td><input class='form-control' id='txtDiscAmount" + index + "' name='DirLst[" + index + "].DiscAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'   /></td>";

        var FrigCharge = "<td><input class='form-control' id='txtFrigCharge" + index + "' name='DirLst[" + index + "].FrigCharge'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var packchar = "<td><input class='form-control' id='txtpackn" + index + "' name='DirLst[" + index + "].packn'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var othcharg = "<td><input class='form-control' id='txtotherch" + index + "' name='DirLst[" + index + "].otherch'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var spldic = "<td><input class='form-control' id='txtspldic" + index + "' name='DirLst[" + index + "].spldic'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var costrate = "<td><input class='form-control' id='txtCostRate" + index + "' name='DirLst[" + index + "].costrate'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";


        var CGSTP = "<td><input class='form-control' id='txtCGSTP" + index + "' name='DirLst[" + index + "].CGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var SGSTP = "<td><input class='form-control' id='txtSGSTP" + index + "' name='DirLst[" + index + "].SGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'  /></td>";

        var IGSTP = "<td><input class='form-control' id='txtIGSTP" + index + "' name='DirLst[" + index + "].IGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'   /></td>";

        var CGST = "<td><input class='form-control' id='txtCGST" + index + "' name='DirLst[" + index + "].CGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True'   onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var SGST = "<td><input class='form-control' id='txtSGST" + index + "' name='DirLst[" + index + "].SGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'   /></td>";

        var IGST = "<td><input class='form-control' id='txtIGST" + index + "' name='DirLst[" + index + "].IGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'    /></td>";

        var TotalAmount = "<td><input class='form-control' id='txtTotalAmount" + index + "' name='DirLst[" + index + "].TotalAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'  /></td>";

        var removeCell = "<td><input id='Isvalid" + index + "' name='DirLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='DirLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + indentno + indentdate + Item + tarrif + Unit + BinId + ConFac + IndQty + Pendqty + Quantity + rate + Amount + Disc + DiscAmount + FrigCharge + packchar + othcharg + spldic + costrate + CGSTP + SGSTP + IGSTP + CGST + SGST + IGST + TotalAmount + removeCell + "</tr>";

        $("#tbBooks").append(newRow);
        
        var tarriffid = document.getElementById("ddlgst" + index).value;
        changeGst(tarriffid, index);

        $(function () {
            $('._select').select2();
        });
  }
    @* function getnarr(party){

        $.ajax({
        url: 'GetNarrDetail',
        data: { "party": party },
        type: "GET",
        success: function (result) {

        document.getElementById("Narration").value = result.type;
        },
        error: function () {
        alert("Data Not Found");
        }
        });
        }*@
        function Grup_Change(itemid, i) {
            //alert(itemid);
            //debugger;
            $.ajax({
                url: "GetItemJSON",
                type: "post",
                data: { 'itemid': itemid },
                cache: false,
                success: function (response) {
                    var newlist;
                    //alert(JSON.stringify(response));
                    newlist = response.Ilst;
                    PopulateDropDown("#ddlItem" + i, response);
                },
                error: function () {
                    debugger;
                    alert("Please Select Item Group");
                }
            });
        }
    function Indent_Change(indentid, i) {
        var puid = document.getElementById("ddlputype").value;
        $.ajax({
            url: "GetItemJSON",
            type: "post",
            data: { "indid": indentid, "puid": puid },
            cache: false,
            success: function (response) {

                PopulateDropDown("#ddlItem" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select Indent No");
            }
        });
    }
    function getsuptype(supid) {
        @*var puid=document.getElementById("ddlputype").value;
            var i = 0;
            $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
            (function (index) {

            $.ajax({
            url: 'GetIndentJSON',
            data: { "puid": puid,"supid":supid},
            type: "GET",
            success: function (response) {
            PopulateDropDown("#ddlIndent" + index, response);
            },
            error: function () {
            alert("Data Not Found");
            }
            });

            })(i);
            i += 1;
            }
            });*@
 

            $.ajax({
                url: 'GetNarrDetail',
                data: { "supid": supid },
                type: "GET",
                success: function (result) {

                    document.getElementById("txtNarration").value = result.type;
                },
                error: function () {
                    alert("Data Not Found");
                }
            });
   
        }
    function getputype(puid) {
        var supid = document.getElementById("ddlSupplier").value;
        $.ajax({
            url: "GetSupJSON",
            type: "post",
            data: { "puid": puid },
            cache: false,
            success: function (response) {
                PopulateDropDown("#ddlSupplier", response);
            },
            error: function () {
                debugger;
                alert("Please Select Item Group");
            }
        });
        if (puid == "AGAINST CONSUMABLES RETURN") {
            document.getElementById('txtVoucher').value = "Credit Note";
            document.getElementById("tbBooks").innerHTML="";
            var i = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    (function (index) {

                        $.ajax({
                            url: 'GetCItemJSON',

                            type: "GET",
                            success: function (response) {
                                PopulateDropDown("#ddlItem" + index, response);
                            },
                            error: function () {
                                alert("Data Not Found");
                            }
                        });

                    })(i);
                    i += 1;
                }
            });
            document.getElementById("divindent").style.display = "none";
            document.getElementById("divitem").style.display = "block";
        }
        else {
            document.getElementById('txtVoucher').value = "Purchase";
            document.getElementById("divindent").style.display="block";
            document.getElementById("divitem").style.display = "none";
            document.getElementById("tbBooks").innerHTML = "";
        //    var i = 0;
        //    $('tr.chkitemlst').each(function () {
        //        if ($(this).css('display') !== 'none') {
        //            (function (index) {
        //                $("#ddlItem" + index).val(null).trigger("change");
        //            })(i);
        //            i += 1;
        //        }
        //    });
        //}

        //var j = 0;
        //$('tr.chkitemlst').each(function () {
        //    if ($(this).css('display') !== 'none') {
        //        (function (index) {

        //            $.ajax({
        //                url: 'GetIndentJSON',
        //                data: { "puid": puid, "supid": supid },
        //                type: "GET",
        //                success: function (response) {
        //                    PopulateDropDown("#ddlIndent" + index, response);
        //                },
        //                error: function () {
        //                    alert("Data Not Found");
        //                }
        //            });
        //            $("#ddlIndent" + index).val(null).trigger("change");
        //        })(j);
        //        j += 1;
        //    }
        //});
        }
    }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function PopulateDropDown1(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty();
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function changeItem(ItemId, i) {
        //var indent = document.getElementById("ddlIndent" + i).value;
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId},
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;

                document.getElementById("txtConFac" + i).value = result.cf;
                document.getElementById("txtrate" + i).value = result.price;
                document.getElementById("lblbin" + i).innerHTML = result.bin;
                //document.getElementById("txtIndqty" + i).value = result.indqty;
                //document.getElementById("txtInddetid" + i).value = result.inddetid;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
        var cutid = document.getElementById("ddlSupplier").value;
        @* alert(cutid);*@
            @* $.ajax({
            url: 'GetGSTDetail',
            data: { "ItemId": ItemId, "custid": cutid },
            type: "GET",
            success: function (result) {
            document.getElementById("hdstate").value = result.type;

            document.getElementById("txtPercentage" + i).value = result.per;
 
            if (result.type == "GST") {
            document.getElementById("txtCGSTP" + i).value = eval(result.per) / 2;
            document.getElementById("txtSGSTP" +i).value = eval(result.per) / 2;
            document.getElementById("txtIGSTP" + i).value = "0";
            }
            else {
            document.getElementById("txtIGSTP" + i).value = eval(result.per);
            document.getElementById("txtCGSTP" + i).value = "0";
            document.getElementById("txtSGSTP" +i).value = "0";
            }
            changeQty(0, i);

 
            if (result.type == "GST") {
            document.getElementById("txtCGSTP" + i).value = eval(result.per) / 2;
            document.getElementById("txtSGSTP" +i).value = eval(result.per) / 2;
            document.getElementById("txtIGSTP" + i).value = "0";
            }
            else {
            document.getElementById("txtIGSTP" + i).value = eval(result.per);
            document.getElementById("txtCGSTP" + i).value = "0";
            document.getElementById("txtSGSTP" +i).value = "0";
            }
            changeQty(0, i);

             },
            error: function () {
            alert("Data Not Found");
            }
            });*@

                           var i = 0;
 
                           
   
        $.ajax({
            url: "GetGSTItemJSON",
            type: "post",
            data: { 'itemid': ItemId, "custid": cutid },
            cache: false,
            success: function (response) {
                var newlist;

                newlist = response.gstlst;
                var i = 0;
                $('tr.chkitemlst').each(function () {
                    if ($(this).css('display') !== 'none') {
                        PopulateDropDownn("#ddlgst" + i, response);
                        //$("#ddlgst" + i).val(null).trigger("change");
                        i += 1;
                    }
                });
            },
            error: function () {
                debugger;
                alert("Please Select From Location");
            }
        });
        //var i = 0;
        //$('tr.chkitemlst').each(function () {
        //    if ($(this).css('display') !== 'none') {
        //        (function (index) {
        //            $("#ddlItem" + index).val(null).trigger("change");
        //        })(i);
        //        i += 1;
        //    }
        //});
    }
    function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('');
        var fvalue="";
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                fvalue = this['value'];
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).select2().val(fvalue).trigger("change");
    }
    function changeGst(tarriffid, i) {
        $.ajax({
            url: 'GetGSTPerDetail',
            data: { "tarriffid": tarriffid },
            type: "GET",
            success: function (result) {

                document.getElementById("txtCGSTP" + i).value = eval(result.cgst);
                document.getElementById("txtSGSTP" + i).value = eval(result.sgst);
                document.getElementById("txtIGSTP" + i).value = eval(result.igst);

                changeQty(0, i);

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    @*function roundtorupee(amt) {
        if(amt - round_decimals(amt,0) > 0.5)
        return pad_with_zeros(round_decimals(amt + 1, 0));
        return pad_with_zeros(round_decimals(amt , 0));
        }*@
        function changeQty(_this, i) {
            try {
                var GTot = 0;
                var j = 0;
                var qty = 0;
                var tot = 0;
                var totfrieght = 0;
                var cgsttotamt = 0;
                var sgsttotamt = 0;
                var igsttotamt = 0;
                var totdis = 0;
 
                var tpknc = 0;
                var tochr = 0;
                var tsdis = 0;
                 var totamt = 0;
                var totamount = 0;
                var qty = document.getElementById("txtQuantity" + i).value;
                var up = document.getElementById("txtrate" + i).value;
                var CF = document.getElementById("txtConFac" + i).value;
                var frieght = document.getElementById("txtFrigCharge" + i).value;
 
                var packnf = document.getElementById("txtpackn" + i).value;
                var otherch = document.getElementById("txtotherch" + i).value;
                var spldis = document.getElementById("txtspldic" + i).value;
                 var IGST = document.getElementById("txtIGSTP" + i).value;

                var CGST = document.getElementById("txtCGSTP" + i).value;

                var SGST = document.getElementById("txtSGSTP" + i).value;
                var Disc = document.getElementById("txtDisc" + i).value;
                @*var Specialdiscount = document.getElementById("txtSpDisc").value;*@

                    @*alert(Specialdiscount);*@

                if (qty == "")
                    qty = 0;

                if (up == "")
                    up = 0;

                if (CF == "")
                    CF = 1;

                if (IGST == "")
                    IGST = 0;


                if (CGST == "")
                    CGST = 0;


                if (SGST == "")
                    SGST = 0;

                if (Disc == "")
                    Disc = 0;

                if (frieght == "")
                    frieght = 0;
 
                if (packnf == "")
                    packnf = 0;
                     if (otherch == "")
                    otherch = 0;
                if (spldis == "")
                    spldis = 0;

                var tot = eval(qty) * eval(up) * eval(CF);
                document.getElementById("txtAmount" + i).value = tot.toFixed(2);
                //                    var conqty = eval(qty) * eval(CF);
                //document.getElementById("txtPriqty" + i).value = conqty.toFixed(2);

                var igstperc = (eval(tot) / 100) * eval(IGST);
                var cgstperc = (eval(tot) / 100) * eval(CGST);
                var sgstperc = (eval(tot) / 100) * eval(SGST);
                var Discperc = (eval(tot) / 100) * eval(Disc);
                @* var specperc = (eval(tot) / 100) * eval(Specialdiscount);*@

                    document.getElementById("txtCGST" + i).value = cgstperc.toFixed(2);
                document.getElementById("txtSGST" + i).value = sgstperc.toFixed(2);
                document.getElementById("txtIGST" + i).value = igstperc.toFixed(2);
                document.getElementById("txtDiscAmount" + i).value = Discperc.toFixed(2);

 
                var tottax = eval(tot) + eval(igstperc) + eval(cgstperc) + eval(sgstperc) + eval(frieght);
                var totdisc = eval(tottax) - eval(Discperc);


                document.getElementById("txtTotalAmount" + i).value = totdisc.toFixed(2);

                                  var tottax = eval(tot) + eval(igstperc) + eval(cgstperc) + eval(sgstperc) + eval(frieght) + eval(otherch) + eval(packnf);
                var totdisc = eval(tottax) - eval(Discperc) - eval(spldis);

                var crate = eval(up) + eval(frieght) + eval(packnf) + eval(otherch);
                document.getElementById("txtCostRate" + i).value = crate.toFixed(2);
                document.getElementById("txtTotalAmount" + i).value = totdisc.toFixed(2);

                  $('tr.chkitemlst').each(function () {
                      if ($(this).css('display') !== 'none') {
                          frieght = $(this).find('#txtFrigCharge' + j.toString()).val();
                          if (frieght == "")
                              frieght = 0;
                          var amt = $(this).find('#txtAmount' + j.toString()).val();
                          if (amt == "")
                              amt = 0;

                          totamt += eval(amt);
                          totfrieght += eval(frieght);

                           var tamt = $(this).find('#txtTotalAmount' + j.toString()).val();
                          if (tamt == "")
                              tamt = 0;

                          totamount += eval(tamt);
                          var pknc = $(this).find('#txtpackn' + j.toString()).val();
                          if (pknc == "")
                              pknc = 0;

                          tpknc += eval(pknc);
                          var ochr = $(this).find('#txtotherch' + j.toString()).val();
                          if (ochr == "")
                              ochr = 0;

                          tochr += eval(ochr);
                          var sdis = $(this).find('#txtspldic' + j.toString()).val();
                          if (sdis == "")
                              sdis = 0;

                          tsdis += eval(sdis);

                          var cgst = $(this).find('#txtCGST' + j.toString()).val();
                          if (cgst == "")
                              cgst = 0;

                          cgsttotamt += eval(cgst);


                          var sgst = $(this).find('#txtSGST' + j.toString()).val();
                          if (sgst == "")
                              sgst = 0;

                          sgsttotamt += eval(sgst);

                          var igst = $(this).find('#txtIGST' + j.toString()).val();
                          if (igst == "")
                              igst = 0;

                          igsttotamt += eval(igst);


                          var dsf = $(this).find('#txtDiscAmount' + j.toString()).val();
                          if (dsf == "")
                              dsf = 0;

                          totdis += eval(dsf);

                      }
                      j += 1;
                  });
                  var roundamount = Math.ceil(totamount);

                  var round = eval(roundamount) - eval(totamount);


                  document.getElementById("txtFrieghtcharge").value = totfrieght.toFixed(2);
                  document.getElementById("txtGross").value = totamt.toFixed(2);
                  document.getElementById("txtNet").value = roundamount.toFixed(2);
                  document.getElementById("hidnet").value = roundamount.toFixed(2);

                  document.getElementById("txtPackingcharges").value = tpknc.toFixed(2);
                 // document.getElementById("txtOther").value = tochr.toFixed(2);
                  //document.getElementById("txtSpDisc").value = tsdis.toFixed(2);
                   document.getElementById("txtRound").value = round.toFixed(2);
    @*document.getElementById("hidround").value = round.toFixed(2);*@
                      document.getElementById("txtCGST").value = cgsttotamt.toFixed(2);
                  document.getElementById("txtSGST").value = sgsttotamt.toFixed(2);
                  document.getElementById("txtIGST").value = igsttotamt.toFixed(2);
                  document.getElementById("txtTDisc").value = totdis.toFixed(2);
                    document.getElementById("txtAmountinw").value = withDecimal(roundamount.toFixed(2));


            }
            catch (ex) {
                alert(ex.message);
            }
        }
    function roundtorupee(amt) {
        if (amt - round_decimals(amt, 0) > 0.5)
            return pad_with_zeros(round_decimals(amt + 1, 0));
        return pad_with_zeros(round_decimals(amt, 0));
    }

  
    function changeTot(_this) {

        var netamt = document.getElementById("hidnet").value;
        var spedisc = document.getElementById("txtSpDisc").value;
        var delchar = document.getElementById("txtDelCh").value;
        var roundoff = document.getElementById("hidround").value;
        var other = document.getElementById("txtOther").value;
        var lrcharge = document.getElementById("txtLRCha").value;

        var totamount = 0;
        var rotamt = 0;
        if (spedisc == "")
            spedisc = 0;

        if (delchar == "")
            delchar = 0;

        @*if (roundoff == "")
            roundoff = 0;
            *@
                             if (other == "")
            other = 0;

        if (lrcharge == "")
            lrcharge = 0;

        @* if (roundoffminus == "")
            roundoffminus = 0;*@

            totamount = eval(delchar) + eval(other) + eval(roundoff) + eval(lrcharge) + eval(netamt);
        rotamt = eval(totamount) - eval(spedisc);
        document.getElementById("net").value = rotamt.toFixed(2);

    }

 
    function convertNumberToWords(amount) {
        var words = new Array();
        words[0] = '';
        words[1] = 'One';
        words[2] = 'Two';
        words[3] = 'Three';
        words[4] = 'Four';
        words[5] = 'Five';
        words[6] = 'Six';
        words[7] = 'Seven';
        words[8] = 'Eight';
        words[9] = 'Nine';
        words[10] = 'Ten';
        words[11] = 'Eleven';
        words[12] = 'Twelve';
        words[13] = 'Thirteen';
        words[14] = 'Fourteen';
        words[15] = 'Fifteen';
        words[16] = 'Sixteen';
        words[17] = 'Seventeen';
        words[18] = 'Eighteen';
        words[19] = 'Nineteen';
        words[20] = 'Twenty';
        words[30] = 'Thirty';
        words[40] = 'Forty';
        words[50] = 'Fifty';
        words[60] = 'Sixty';
        words[70] = 'Seventy';
        words[80] = 'Eighty';
        words[90] = 'Ninety';
        amount = amount.toString();
        var atemp = amount.split(".");
        var number = atemp[0].split(",").join("");
        var n_length = number.length;
        var words_string = "";
        if (n_length <= 9) {
            var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var received_n_array = new Array();
            for (var i = 0; i < n_length; i++) {
                received_n_array[i] = number.substr(i, 1);
            }
            for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
                n_array[i] = received_n_array[j];
            }
            for (var i = 0, j = 1; i < 9; i++, j++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    if (n_array[i] == 1) {
                        n_array[j] = 10 + parseInt(n_array[j]);
                        n_array[i] = 0;
                    }
                }
            }
            value = "";
            for (var i = 0; i < 9; i++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    value = n_array[i] * 10;
                } else {
                    value = n_array[i];
                }
                if (value != 0) {
                    words_string += words[value] + " ";
                }
                if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Crores ";
                }
                if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Lakhs ";
                }
                if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Thousand ";
                }
                if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                    words_string += "Hundred and ";
                } else if (i == 6 && value != 0) {
                    words_string += "Hundred ";
                }
            }
            words_string = words_string.split("  ").join(" ");
        }
        return words_string;
    }
    function withDecimal(n) {
        var nums = n.toString().split('.')
        var whole = convertNumberToWords(nums[0])
        if (nums.length == 2) {
            var fraction = convertNumberToWords(nums[1])
            return whole + ' ' + fraction;
        } else {
            return whole;
        }
    }

    function changeTot(_this) {

        var netamt = document.getElementById("hidnet").value;
        var spedisc = document.getElementById("txtSpDisc").value;
        //var delchar = document.getElementById("txtDelCh").value;
        var pack = document.getElementById("txtPackingcharges").value;
        var roundoff = document.getElementById("txtRound").value;
        var other = document.getElementById("txtOther").value;
       // var lrcharge = document.getElementById("txtLRCha").value;

        var totamount = 0;
        var rotamt = 0;
        if (spedisc == "")
            spedisc = 0;

        if (delchar == "")
            delchar = 0;

        if (pack == "")
            pack = 0;

        @*if (roundoff == "")
            roundoff = 0;
            *@
                             if (other == "")
            other = 0;

        if (lrcharge == "")
            lrcharge = 0;

        @* if (roundoffminus == "")
            roundoffminus = 0;*@

            totamount = eval(pack) + eval(other) + eval(roundoff) + eval(lrcharge) + eval(netamt);
        rotamt = eval(totamount) - eval(spedisc);
        document.getElementById("net").value = rotamt.toFixed(2);
        document.getElementById("txtAmount").value = withDecimal(roundamount.toFixed(2));

    }

     @*  function roundtorupee(amt) {
        if (amt - round_decimals(amt, 0) > 0.5)
        return pad_with_zeros(round_decimals(amt + 1, 0));
        return pad_with_zeros(round_decimals(amt, 0));
        }*@
        function AddRow() {
           
            var opt = "";
            $.ajax({
                url: 'GetCItemJSON',
                type: "POST",
                success: function (data) {
                    $.each(data, function () {
                        opt += "<option value=" + this.value + ">" + this.text + "</option>";
                    });
                    AppendRow(opt);
                }

            });


        }
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var indentno = "<td></td>";
        var indentdate = "<td></td>";

        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='Itemlst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var tarrif = "<td><select style = 'width: 150px;' class='form-control _select newcss' id='ddlgst" + index + "' name='Itemlst[" + index + "].gst' onchange = 'changeGst(this.value," + index + ")'><option value=''>Please select</option></select></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='DirLst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' /></td>";

        var BinId = "<td><label style='width:110px;' id='lblbin" + index + "'></label></td>";

        var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='DirLst[" + index + "].ConFac'  style='width: 80px;' type='text' readonly='True'  /></td>";
        
        var IndQty = "<td><input class='form-control' id='txtIndqty" + index + "' name='DirLst[" + index + "].Indqty'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' onkeyup = 'changeQty(this.value," + index + ")' readonly='True' /></td>";

        var Pendqty = "<td><input class='form-control' id='txtpendqty" + index + "' name='DirLst[" + index + "].pendqty'   style='width: 80px;' type='text' value='0'  readonly='True' /></td>";

        var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='DirLst[" + index + "].Quantity'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value='0' onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var rate = "<td><input class='form-control' id='txtrate" + index + "' name='DirLst[" + index + "].rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text'   value='0'  onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='DirLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text'  readonly='True' value='0' /></td>";

        var Disc = "<td><input class='form-control' id='txtDisc" + index + "' name='DirLst[" + index + "].Disc'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' onkeyup = 'changeQty(this.value," + index + ")'   /></td>";

        var DiscAmount = "<td><input class='form-control' id='txtDiscAmount" + index + "' name='DirLst[" + index + "].DiscAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'   /></td>";

          var FrigCharge = "<td><input class='form-control' id='txtFrigCharge" + index + "' name='DirLst[" + index + "].FrigCharge'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        
        var packchar = "<td><input class='form-control' id='txtpackn" + index + "' name='DirLst[" + index + "].packn'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var othcharg = "<td><input class='form-control' id='txtotherch" + index + "' name='DirLst[" + index + "].otherch'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var spldic = "<td><input class='form-control' id='txtspldic" + index + "' name='DirLst[" + index + "].spldic'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
        var costrate = "<td><input class='form-control' id='txtCostRate" + index + "' name='DirLst[" + index + "].costrate'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' value='0' type='text'  onkeyup = 'changeQty(this.value," + index + ")'  /></td>";

        var CGSTP = "<td><input class='form-control' id='txtCGSTP" + index + "' name='DirLst[" + index + "].CGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var SGSTP = "<td><input class='form-control' id='txtSGSTP" + index + "' name='DirLst[" + index + "].SGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'  /></td>";

        var IGSTP = "<td><input class='form-control' id='txtIGSTP" + index + "' name='DirLst[" + index + "].IGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'   /></td>";

        var CGST = "<td><input class='form-control' id='txtCGST" + index + "' name='DirLst[" + index + "].CGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True'   onkeyup = 'changeQty(this.value," + index + ")' /></td>";

        var SGST = "<td><input class='form-control' id='txtSGST" + index + "' name='DirLst[" + index + "].SGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'   /></td>";

        var IGST = "<td><input class='form-control' id='txtIGST" + index + "' name='DirLst[" + index + "].IGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'    /></td>";

        var TotalAmount = "<td><input class='form-control' id='txtTotalAmount" + index + "' name='DirLst[" + index + "].TotalAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value='0' readonly='True' onkeyup = 'changeQty(this.value," + index + ")'  /></td>";
 
        var removeCell = "<td><input id='Isvalid" + index + "' name='Itemlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='DirLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + indentno + indentdate + Item + tarrif + Unit + BinId + ConFac + IndQty + Pendqty + Quantity + rate + Amount + Disc + DiscAmount + FrigCharge + packchar + othcharg + spldic + costrate + CGSTP + SGSTP + IGSTP + CGST + SGST + IGST + TotalAmount + removeCell + "</tr>";

        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }

</script> 
<a class="fancybox1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<a class="fancyboxe1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<link rel="stylesheet" href="@Url.Content("~/css/jquery.fancybox.css?v=2.1.5")" type="text/css" media="screen" />
<script type="text/javascript" src="@Url.Content("~/css/jquery.fancybox.pack.js?v=2.1.5")"></script>
<script type="text/javascript">
    var fancybox123;
    jQuery(document).ready(function ($) {
        $(".fancybox").fancybox({
            width: '80%',
            height: '10%',
            arrows: false,

        });
        fancybox123 = $.fancybox;
    });
    function close_popup() {
        fancybox123.close();
        $(".fancybox1").fancybox({
            width: '100%',
            height: '100%',
            arrows: false,
        });
        $(".fancybox1").eq(0).trigger('click');
    }
</script>