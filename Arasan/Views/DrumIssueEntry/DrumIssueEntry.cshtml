@model Arasan.Models.DrumIssueEntry
@{
    ViewData["Title"] = "Drum Issue Entry";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<div class="page-content-wrapper animated fadeInRight">
    <div class="row wrapper border-bottom page-heading">
        <div class="col-lg-12">

            <ol class="breadcrumb">
                <li> <a href="#">Home</a> </li>
                <li> <a>Production</a> </li>
                <li class="active"> <strong> Drum Issue Entry </strong> </li>
            </ol>
        </div>
    </div>
    <div class="wrapper-content ">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="widgets-container">
                        <h5 style="font-size:14px"> Drum Issue Entry</h5>
                        <hr>
                        @using (Html.BeginForm("DrumIssueEntry", "DrumIssueEntry", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <br /><label for="inputName3" class="col-sm-4 control-label">Branch<label class="mandatory">*</label></label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(C => C.Branch, Model.Brlst, new { @id = "ddlBranch", @Class = "form-control _select", @TabIndex = 1 })
                                            </div>
                                        </div>
                                    </div> 
                                    </div>
                                      <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <br /> <label for="inputName3" class="col-sm-4 control-label">Doc No<label class="mandatory">*</label></label>
                                            <div class="col-sm-8">
                                                @Html.HiddenFor(C => C.ID)
                                                @Html.TextBoxFor(C => C.Docid, new { @id = "txtDocid", @class = "form-control", @TabIndex = 1 })<br />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                    <div class="form-group">


                                            <br />  <label for="inputName3" class="col-sm-4 control-label">DOC Date<label class="mandatory">*</label></label>
                                            <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                @Html.TextBoxFor(C => C.Docdate, new { @id = "Docdate", @class = "form-control", @TabIndex = 2,@size="32",@readonly=true })
                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                            </div>
                                           
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                              
                                <div class="col-md-6">
                                    <div class="form-group">

                                      <br />  <label for="inputName3" class="col-sm-4 control-label">Item ID<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                                @Html.DropDownListFor(C => C.Itemid, Model.Itemlst," -- Please Select -- ", new { @id = "ddlItemid", @Class = "form-control _select", @TabIndex = 1 ,onchange = "changeItem(value)" })
                                        </div>




                                    </div>
                                </div>
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <br /> <label for="inputName3" class="col-sm-4 control-label">Unit<label class="mandatory"> </label></label>
                                            <div class="col-sm-8">

                                                @Html.TextBoxFor(C => C.Unit, new { @id = "txtUnit", @class = "form-control", @TabIndex = 1,@readonly="readonly" })<br />
                                            </div>
                                        </div>
                                    </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                       <br /> <label for="inputName3" class="col-sm-4 control-label">From Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                           @{
                                            int k=0;
                                                    @Html.DropDownListFor(C => C.FromLoc, Model.Loc," -- Please Select -- ", new { @id = "ddlFromLoc", @Class = "form-control _select", @TabIndex = 1, @onchange = "changeDrum(this.value," + k + ")" })
                                                    k = k + 1;     
                                                }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">To Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                                @Html.DropDownListFor(C => C.Toloc, Model.ToLoc," -- Please Select -- ", new { @id = "ddlToloc", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                            </div>
                        @*    <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <br /> <label for="inputName3" class="col-sm-4 control-label">From BinID<label class="Mandatory"></label></label>
                                            <div class="col-sm-8">

                                                @Html.TextBoxFor(C => C.Frombin, new { @id = "txtFrombin", @class = "form-control", @TabIndex = 1 })<br />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <br /> <label for="inputName3" class="col-sm-4 control-label">To BinID<label class="Mandatory"></label></label>
                                            <div class="col-sm-8">

                                                @Html.TextBoxFor(C => C.Tobin, new { @id = "txtTobin", @class = "form-control", @TabIndex = 1 })<br />
                                            </div>
                                        </div>
                                    </div>*@
                               @* <div class="col-md-6">
                                    <div class="form-group">
                                            <br /> <label for="inputName3" class="col-sm-4 control-label">From BinId<label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                                @Html.DropDownListFor(C => C.Frombin, Model.Bin, new { @id = "ddlFrombin", @Class = "form-control _select", @TabIndex = 1 })


                                        </div>

                                    </div>
                                </div>*@
                               @* <div class="col-md-6">
                                    <div class="form-group">

                                      <br />  <label for="inputName3" class="col-sm-4 control-label">To BinId<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                                @Html.DropDownListFor(C => C.Tobin, Model.ToBin, new { @id = "ddlTobin", @Class = "form-control _select", @TabIndex = 1 })
                                        </div>
                                    </div>
                                    </div>*@
                          @*  </div>*@
                            <div class="row">
                                
                                <div class="col-md-6">
                                    <div class="form-group">

                                          <br />   <label for="inputName3" class="col-sm-4 control-label">Available Stock<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                                @Html.TextBoxFor(C => C.Stock, new { @id = "txtStock", @class = "form-control", @TabIndex = 1,onkeydown = "return isNumeric2(event.keyCode,this.value)" })<br />
                                        </div>
                                    </div>
                                </div>
                           
                                <div class="col-md-6">
                                    <div class="form-group">

                                            <br />    <label for="inputName3" class="col-sm-4 control-label">Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                                @Html.DropDownListFor(C => C.type, Model.Type," -- Please Select -- ", new { @id = "ddltype", @Class = "form-control _select", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>
                                </div>
                                <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                           <label for="inputName3" class="col-sm-4 control-label">Drum Stock<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                                @Html.TextBoxFor(C => C.Drum, new { @id = "txtDrum", @class = "form-control", @TabIndex = 1,onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                             <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                           <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                           <div class="col-lg-12">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">
                                    <!-- / ibox-title -->
                                    <table class="table table-striped table-hover" id="dataTable">
                                                        <thead>
                                                            <tr>
                                                               
                                                               
                                                                <th> Drum No</th>
                                                                 <th>Batch No</th>
                                                                <th>Qty</th>
                                                                <th>Rate</th>
                                                                 <th>Amount</th>
                                                    @*<th>From BinId </th>
                                                <th>To BinId</th>*@

                                                            </tr>
                                                        </thead>
                                                        <tbody id="tbBooks">

                                                             @{

                                                int i = 0;
                                         

                                                    foreach (var item in Model.Drumlst.ToList())
                                                {
                                                            <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                    
                                                    <td>
                                                                @Html.DropDownListFor(o => o.Drumlst[i].Drum, Model.Drumlst[i].drumlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlDrum" + i, style = "width: 200px;", onchange = "changeDrumDetail(this.value," + i + ")"})
                                                               
                                                    </td>
                                                            <td>
                                                                @Html.TextBoxFor(o => o.Drumlst[i].Batch, new { @id = "txtBatch" + i, @class = "form-control", style = "width: 120px;" })
                                                            </td>
                                                    <td>
                                                                @Html.HiddenFor(o => o.Drumlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                @Html.TextBoxFor(o => o.Drumlst[i].Qty, new { @id = "txtQty" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)",@onkeyup = "changeQty(this," + i + ")"})
                                                               
                                                    </td>
                                                    <td>

                                                                @Html.TextBoxFor(o => o.Drumlst[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)",@onkeyup = "changeRate(this," + i + ")" })
                                                               
                                                    </td>
                                                      <td>
                                                         
                                                                @Html.TextBoxFor(o => o.Drumlst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)",@onkeyup = "changeAmount(this," + i + ")" })
                                                               
                                                    </td>
                                                            @*<td>
                                                                @Html.TextBoxFor(o => o.Drumlst[i].FBinId, new { @id = "txtFBinId" + i, @class = "form-control", style = "width: 120px;" })

                                                            </td>
                                                            <td>
                                                                @Html.TextBoxFor(o => o.Drumlst[i].TBinid, new { @id = "txtTBinid" + i, @class = "form-control", style = "width: 120px;" })

                                                            </td>*@
                                                    <td>
                                                                @Html.HiddenFor(o => o.Drumlst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="EnqLst.Index" type="hidden" value="@(i)" />
                                                    </td>

                                                            </tr>
                                                        i = i + 1;
                                                      

                                                    }
                                                }
                                                        </tbody>
                                    </table>
                                </div>
                           </div>
                                       
                                    
                               
                          
                           
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                          <br /><label for="inputName3" class="col-sm-4 control-label">Total Qty<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                                @Html.TextBoxFor(C => C.Qty, new { @id = "txtTotalQty", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly="readonly"})

                                                <br />
                                        </div>
                                    </div>
                                </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <br /><label for="inputName3" class="col-sm-4 control-label">Issue Rate<label class="mandatory">*</label></label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(C => C.IRate, new { @id = "txtIRate", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly="readonly"})

                                                <br />
                                            </div>
                                        </div>
                                    </div>
                                      </div>

                                <div class="row">
                               
                                    <div class="col-md-6">
                                        <div class="form-group">
                                             <label for="inputName3" class="col-sm-4 control-label">Issue Value<label class="mandatory">*</label></label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(C => C.IValue, new { @id = "txtIValue", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly="readonly"})

                                                <br />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                         <label for="inputName3" class="col-sm-4 control-label">Purpose<label class="Mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.TextBoxFor(C => C.Purpose, new { @id = "txtPurpose", @class = "form-control", @TabIndex = 1 })<br />
                                            </div>
                                        </div>

                                    </div>
                            </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                             <label for="inputName3" class="col-sm-4 control-label">EnteredBy<label class="Mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(C => C.Entered, Model.RecList, new { @id = "ddlEntered", @Class = "form-control _select", @TabIndex = 1 })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="inputName3" class="col-sm-4 control-label">Approved By<label class="Mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(C => C.Approved, Model.Applst, new { @id = "ddlApproved", @Class = "form-control _select", @TabIndex = 1 })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            <div style="height:30px;"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave" >Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListDrumIssueEntry", "DrumIssueEntry")'">Cancel</button>


                        </form>
                        }
                    </div>

                </div>

            </div>

        </div>

    </div>

</div>
<script>
    $(function () {
        $('._select').select2();
    });
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
     function changeDrum(ItemId,i) {
        var item = document.getElementById("ddlItemid").value;

        $.ajax({
            url: "GetDrumJSON",
            type: "post",
            data: { 'item' : item,'id': ItemId },
            cache: false,
            success: function (response) {
                var newlist;
                newlist = response.drumlst;
                PopulateDropDown("#ddlDrum" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select From Location");
            }
        });
        $.ajax({
            url: 'GetStockDetail',
            data: { 'items' : item ,"ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtDrum"  ).value = result.drum;

                document.getElementById("txtStock"  ).value = result.stock;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
      }
    function changeDrumDetail(ItemId, i) {
        $.ajax({
            url: 'GetDrumDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtBatch" + i).value = result.batch;

                document.getElementById("txtQty" + i).value = result.qty;
                
            },
            error: function () {
                alert("Data Not Found");
            }
        });
      @*  $.ajax({
            url: 'GetItemJSON',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("ddlItemid").value = result.item;

                document.getElementById("txtUnit" ).value = result.unit;

            },
            error: function () {
                alert("Data Not Found");
            }
            });*@
    }
    function changeItem(ItemId) {
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                
                document.getElementById("txtUnit").value = result.unit;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {

            var j = 0;
            var qty = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    qty = $(this).find('#txtQty' + j.toString()).val();
                    if (qty == "")
                        qty = 0;

                    tot += eval(qty);
                }
                j += 1;
            });
            document.getElementById("txtTotalQty").value = tot.toFixed(2);
        }
        catch (ex) {
            alert(ex.message);
        }
    }
      function changeAmount(_this, i) {
        try {

            var j = 0;
            var amt = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    amt = $(this).find('#txtAmount' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    tot += eval(amt);
                }
                j += 1;
            });
            document.getElementById("txtIValue").value = tot.toFixed(2);
        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function changeRate(_this, i) {
        try {

            var j = 0;
            var amt = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    amt = $(this).find('#txtRate' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    tot += eval(amt);
                }
                j += 1;
            });
            document.getElementById("txtIRate").value = tot.toFixed(2);
        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append();
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
     function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

       
        var Drum = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlDrum" + index + "' name='Drumlst[" + index + "].Drum' ><option value=''>Please select</option>" + opt + "</select></td>";
  var Batch = "<td><input class='form-control' id='txtBatch" + index + "' name='Drumlst[" + index + "].Batch'  style='width: 120px;' type='text'  /></td>";
        var Qty = "<td><input class='form-control' id='txtQty" + index + "' name='Drumlst[" + index + "].Qty'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' onkeyup = 'changeQty(this," + index + ")'    /></td>";

       
        var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='Drumlst[" + index + "].Rate'  style='width: 80px;' type='text'  onkeydown='return isNumeric2(event.keyCode,this.value)' onkeyup = 'changeRate(this," + index + ")' /></td>";

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='Drumlst[" + index + "].Amount'  style='width: 80px;' type='text' onkeydown='return isNumeric2(event.keyCode,this.value)' onkeyup = 'changeAmount(this," + index + ")'/></td>";

        

        var removeCell = "<td><input id='Isvalid" + index + "' name='Itemlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='Drumlst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Drum + Batch  + Qty  + Rate + Amount  +  removeCell + "</tr>";

        //alert(Packing);
       $("#tbBooks").append(newRow);
       $(function() 
       {
            $('._select').select2();
       });
    }
    $(function () {
        $('._select').select2();
    });
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("ddlBranch").value == "" || document.getElementById("ddlBranch").value == 0) {
                isValid = false;
                $(ddlBranch).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Branch");
                return false;
            }
            else {
                $(ddlBranch).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtDocid").value == "") {
                isValid = false;
                $(txtDocid).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select  Doc No");
                return false;
            }
            else {
                $(txtDocid).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("Docdate").value == "") {
                isValid = false;
                $(Docdate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select  Date");
                return false;
            }
            else {
                $(Docdate).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlItemid").value == "" || document.getElementById("ddlItemid").value == 0) {
                isValid = false;
                $(ddlItemid).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Item");
                return false;
            }
            else {
                $(ddlItemid).css({
                    "border": "",
                    "background": ""
                });
            }
          
            if (document.getElementById("ddlFromLoc").value == "" || document.getElementById("ddlFromLoc").value == 0) {
                isValid = false;
                $(ddlFromLoc).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select From Location");
                return false;
            }
            else {
                $(ddlFromLoc).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlToloc").value == "" || document.getElementById("ddlToloc").value == 0) {
                isValid = false;
                $(ddlToloc).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select To Location");
                return false;
            }
            else {
                $(ddlToloc).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddltype").value == "" || document.getElementById("ddltype").value == 0) {
                isValid = false;
                $(ddltype).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Type");
                return false;
            }
            else {
                $(ddltype).css({
                    "border": "",
                    "background": ""
                });
            }
            @*if (document.getElementById("Schdate").value == "") {
                isValid = false;
                $(Schdate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Schedule Date");
                return false;
            }
            else {
                $(Schdate).css({
                    "border": "",
                    "background": ""
                });
            }
            
             if (document.getElementById("txtQty").value == "") {
                isValid = false;
                $(txtQty).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select  Output Qty");
                return false;
            }
            else {
                $(txtQty).css({
                    "border": "",
                    "background": ""
                });
            } 
            if (document.getElementById("txtProdQty").value == "") {
                isValid = false;
                $(txtProdQty).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select ProdQty");
                return false;
            }
            else {
                $(txtProdQty).css({
                    "border": "",
                    "background": ""
                });
            } 
    if (document.getElementById("txtMTO").value == "") {
                isValid = false;
                $(txtMTO).css({
                "border": "1px solid red",
                "background": "#FFCECE"
                });

                alert("Please Select MTO");
                return false;
                }
                else {
                $(txtMTO).css({
                "border": "",
                "background": ""
                });
                }*@



                if (isValid == false)
                e.preventDefault();
        });

    });
</script>