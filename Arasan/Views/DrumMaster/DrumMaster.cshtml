@model Arasan.Models.DrumMaster

@{
    ViewData["Title"] = "DrumMaster";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Master</a> </li>
            <li class="active"> <strong> DrumMaster </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">

                    <hr>
                    @using (Html.BeginForm("DrumMaster", "DrumMaster", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">DrumNo<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.DrumNo, new { @id = "txDrum", @class = "form-control",autocomplete="off" , @TabIndex = 2, @size="30" })

                                            @* for edit & delete*@
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.createby)
                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">DocDate<label class="mandatory"></label></label>

                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2,@size="30",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                            <br />
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Category<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Category, Model.Categorylst,"Please Select", new { @id = "ddlCategory", @Class = "form-control _select", @TabIndex = 1 })<br />
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Locationlst,"Please Select", new { @id = "ddlLocation", @Class = "form-control _select", @TabIndex = 1 })<br /><br>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">DrumType<label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.DrumType, Model.DrumTypelst,"Please Select", new { @id = "ddlDrumType", @Class = "form-control _select", @TabIndex = 1 })<br /><br>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Target Weight<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @*@Html.EditorFor(model => model.TargetWeight, new { @type = "number", @min = "0", @step = "0.01", @value = "0" })*@

                                            @Html.TextBoxFor(C => C.TargetWeight, new { @id = "txtTarget", @type = "number", @class = "form-control", @TabIndex = 2,@size="30" })
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <a button class="btn btn-danger" type="submit" href="@Url.Action("ListDrumMaster", "DrumMaster")">Cancel</a>

                        </form>
                    }
                </div>

            </div>

        </div>

    </div>

</div>
<script>
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
 </script>

<script>

    $(function () {
        $('._select').select2();
    });
   
     $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("txDrum").value == "") {
                isValid = false;
                $(txDrum).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter DrumNo");
                return false;
            }
            else {
                $(txDrum).css({
                    "border": "",
                    "background": ""
                 });
            }
            //if (document.getElementById("DocDate").value == "") {
            //    isValid = false;
            //    $(DocDate).css({
            //        "border": "1px solid red",
            //        "background": "#FFCECE"
            //    });

            //    alert("Please Select DocDate");
            //    return false;
            //}
            //else {
            //    $(DocDate).css({
            //        "border": "",
            //        "background": ""
            //    });
            //}

            if (document.getElementById("ddlCategory").value == "" || document.getElementById("ddlCategory").value == 0) {
                isValid = false;
                $(ddlCategory).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Category");
                return false;
            }
            else {
                $(ddlCategory).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("ddlLocation").value == "" || document.getElementById("ddlLocation").value == 0) {
                isValid = false;
                $(ddlLocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Location");
                return false;
            }
            else {
                $(ddlLocation).css({
                    "border": "",
                    "background": ""
                });
            }
           
           

            if (document.getElementById("ddlDrumType").value == "" || document.getElementById("ddlDrumType").value == 0) {
                isValid = false;
                $(ddlDrumType).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select DrumType");
                return false;
            }
            else {
                $(ddlDrumType).css({
                    "border": "",
                    "background": ""
                });
            }

            //if (document.getElementById("txtTarget").value == "") {
            //    isValid = false;
            //    $(txtTarget).css({
            //        "border": "1px solid red",
            //        "background": "#FFCECE"
            //    });

            //    alert("Please Enter Target Weight");
            //    return false;
            //}
            //else {
            //    $(txtTarget).css({
            //        "border": "",
            //        "background": ""
            //    });
            //}
            if (isValid == false)
                e.preventDefault();

        });

    });

</script>