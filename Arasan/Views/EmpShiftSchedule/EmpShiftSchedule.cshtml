@model Arasan.Models.EmpShiftScheduleModel

@{
    ViewData["Title"] = "Employee Shift Schedule";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a href="@Url.Action("EmpShiftSchedulelist", "EmpShiftSchedule")">HR</a> </li>
            <li class="active"> <strong>Employee Shift Detail</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Employee Shift Detail</h5>
                    <hr>
                    @using (Html.BeginForm("EmpShiftSchedule", "EmpShiftSchedule", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>

                            <div class="row">
                                <div class="col-md-6">

                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Doc Id<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "txtDocId", @class = "form-control", @TabIndex = 2, @readonly = "readonly" })
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.Branch)
                                            <br />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Month<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Month, Model.MonthLst, "Please Select", new { @id = "Month", @Class = "form-control _select newcss", @TabIndex = 1 })
                                            <br />
                                            <br />
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Employee Category<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.EmpCategory, Model.EmpCategoryLst, "Please Select", new { @id = "EmpCategory", @Class = "form-control _select newcss", @TabIndex = 1, onchange = "changeempcat(this.value)" })
                                            <br />
                                            <br />
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Department<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Dep, Model.DepLst, "Please Select", new { @id = "Dep", @Class = "form-control _select newcss", @TabIndex = 1 })
                                            <br />
                                            <br />
                                        </div>
                                    </div>

                                </div>
                            </div>



                            @* Table *@

                            @* <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div> *@

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">


                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                @* <th>EmplId</th> *@
                                                <th>EmpId</th>
                                                <th>Emp Name</th>
                                                <th>Start Date</th>
                                                <th>End Date</th>
                                                <th>ShVal</th>
                                                <th>Shift</th>
                                                <th>St.Time</th>
                                                <th>End Time</th>
                                                <th>WOFF</th>


                                            </tr>

                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;

                                                foreach (var item in Model.EmpShiftSchedulelist.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                        <td>
                                                            @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].empid, new { @id = "txtEmpId" + i, @class = "form-control", style = "width: 100px;", @readonly = "readonly" })
                                                            @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].empid)
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].empname, new { @id = "txtEmpName" + i, @class = "form-control", style = "width: 100px;", @readonly = "readonly" })
                                                            @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].empname)
                                                        </td>
                                                        <td>
                                                            <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                                @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].StartDate, new { @id = "txtStartDate" + i, @class = "form-control", style = "width: 100px;" })<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].StartDate)
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                                @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].EndDate, new { @id = "txtEndDate" + i, @class = "form-control", style = "width: 100px;" })<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].EndDate)
                                                            </div>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].ShVal, new { @id = "txtShVal" + i, @class = "form-control", style = "width: 100px;"})
                                                            @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].ShVal)
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.EmpShiftSchedulelist[i].Shift, Model.EmpShiftSchedulelist[i].Shiftlst, "Please Select", new { @class = "form-control _select newcss", @id = "txtShift" + i, style = "width: 100px;", onchange = "changeAllShiftType(this.value," + i + ")" })
                                                            @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].Shift)
                                                        </td>
                                                        <td>
                                                            <div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh.ii">
                                                                @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].StTime, new { @id = "txtStTime" + i, @class = "form-control", style = "width: 100px; " })
                                                                @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].StTime)
                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                            </div>
                                                            <input type="hidden" id="dtp_input3" value="" />
                                                        </td>
                                                        <td>
                                                            <div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh.ii">
                                                                @Html.TextBoxFor(o => o.EmpShiftSchedulelist[i].EndTime, new { @id = "txtEndTime" + i, @class = "form-control", style = "width: 100px; " })
                                                                @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].EndTime)
                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                            </div>
                                                            <input type="hidden" id="dtp_input3" value="" />
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.EmpShiftSchedulelist[i].WOFF, Model.EmpShiftSchedulelist[i].WOFFlst, "Please Select", new { @class = "form-control _select newcss", @id = "txtWOFF" + i, style = "width: 100px;" })
                                                            @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].WOFF)
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.EmpShiftSchedulelist[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Complst.Index" type="hidden" value="@(i)" />
                                                        </td>

                                                    </tr>
                                                    i = i + 1;

                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("EmpShiftSchedulelist", "EmpShiftSchedule")'">Cancel</button>
                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

<script>

    // $('.form_time').datetimepicker({
    //     weekStart: 1,
    //     todayBtn: 1,
    //     autoclose: 1,
    //     todayHighlight: 1,
    //     startView: 1,
    //     minView: 0,
    //     maxView: 1,
    //     forceParse: 0
    // });


    // $('.to_date').datetimepicker({
    //     //   language:  'fr',
    //     weekStart: 1,
    //     todayBtn: 1,
    //     autoclose: 1,
    //     todayHighlight: 1,
    //     startView: 2,
    //     minView: 2,
    //     endDate: new Date(),
    //     forceParse: 0

    // });

    // $('.form_date').datetimepicker({
    //     //   language:  'fr',
    //     weekStart: 1,
    //     todayBtn: 1,
    //     autoclose: 1,
    //     todayHighlight: 1,
    //     startView: 2,
    //     minView: 2,
    //     endDate: new Date(),
    //     forceParse: 0
    // }).on('changeDate', function (selected) {
    //     var minDate = new Date(selected.date.valueOf());
    //     $('.to_date').datetimepicker('setStartDate', minDate);

    // });

    function changeempcat() {
        var remopt = "";
        var remsopt = "";
        document.getElementById("tbBooks").innerHTML = "";
        var suppid = document.getElementById("EmpCategory").value;

        // Step 1: First AJAX call to get Shift options
        $.ajax({
            type: "POST",
            url: 'GetEmpShift2JSON',
            success: function (shiftData) {
                $.each(shiftData, function () {
                    remopt += "<option value='" + this.value + "'>" + this.text + "</option>";
                });

                // Step 2: Second AJAX call to get WOFF options
                $.ajax({
                    type: "POST",
                    url: 'GetEmpShift3JSON',
                    success: function (woffData) {
                        $.each(woffData, function () {
                            remsopt += "<option value='" + this.value + "'>" + this.text + "</option>";
                        });

                        // Step 3: Now fetch Employee Details
                        $.ajax({
                            url: 'GetEmployeeDetails',
                            type: "POST",
                            data: { "suppid": suppid },
                            cache: false,
                            success: function (result) {
                                result.forEach((item, index) => {
                                    var EmployeeID = "<td><input class='form-control' id='txtEmpId" + index + "' name='EmpShiftSchedulelist[" + index + "].empid' style='width: 150px;' type='text' readonly='True' value='" + item.empid + "' /></td>";

                                    var EmployeeName = "<td><input class='form-control' id='txtEmpName" + index + "' name='EmpShiftSchedulelist[" + index + "].empname' style='width: 150px; type='text' readonly='True' value='" + item.empname + "' /></td>";

                                    var StartDate = "<td><div class='input-group date form_date col-sm-8' data-date-format='dd-M-yyyy'><input class='form-control' id='txtStartDate" + index + "' name='EmpShiftSchedulelist[" + index + "].StartDate' style='width: 130px;' type='text' /><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span><span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";

                                    var EndDate = "<td><div class='input-group date form_date col-sm-8' data-date-format='dd-M-yyyy'><input class='form-control' id='txtEndDate" + index + "' name='EmpShiftSchedulelist[" + index + "].EndDate' style='width: 130px;' type='text' /><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span><span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";

                                    var ShValue = "<td><input class='form-control' id='txtShVal" + index + "' name='EmpShiftSchedulelist[" + index + "].ShVal' style='width: 200px;' type='text' /></td>";

                                    var Shift = "<td><select style='width: 200px;' class='form-control _select newcss' id='txtShift" + index + "' name='EmpShiftSchedulelist[" + index + "].Shift' onchange='changeAllShiftType(this.value," + index + ")'><option value=''>Please select</option>" + remopt + "</select></td>";
                                    var StTime = "<td><div class='form-group'><div class='input-group date form_time col-md-4' data-date-format='hh.ii'><input class='form-control' id='txtStTime" + index + "' name='EmpShiftSchedulelist[" + index + "].StTime' style='width: 80px;' readonly='true' /><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span><span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></div></td>";

                                    var EndTime = "<td><div class='form-group'><div class='input-group date form_time col-md-4' data-date-format='hh.ii'><input class='form-control' id='txtEndTime" + index + "' name='EmpShiftSchedulelist[" + index + "].EndTime' style='width: 80px;' readonly='true' /><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span><span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></div></td>";

                                    var WOFF = "<td><select style='width: 200px;' class='form-control _select newcss' id='txtWOFF" + index + "' name='EmpShiftSchedulelist[" + index + "].WOFF' onchange='changeItem(this.value," + index + ")'><option value=''>Please select</option>" + remsopt + "</select></td>";

                                    var removeCell = "<td><input id='Isvalid" + index + "' name='EmpShiftSchedulelist[" + index + "].Isvalid' type='hidden' value='Y'/><input name='EmpShiftSchedulelist.Index' type='hidden' value='" + index + "' /></td>";

                                    var newRow = "<tr class='chkitemlst' style='height: 30px; border-bottom: 1px dashed #ddd;' id='trBookOutput" + index + "'>" +
                                        EmployeeID + EmployeeName + StartDate + EndDate + ShValue + Shift + StTime + EndTime + WOFF + removeCell + "</tr>";

                                    $("#tbBooks").append(newRow);

                                   
                                     $(function () {
                                     $('._select').select2();
                                                    });
                                    // Initialize Start and End date pickers
                                    $("#txtStartDate" + index).datetimepicker({
                                        weekStart: 1,
                                        todayBtn: 1,
                                        autoclose: 1,
                                        todayHighlight: 1,
                                        startView: 2,
                                        minView: 2,
                                        startDate: new Date(),
                                        forceParse: 0
                                    }).on('changeDate', function (e) {
                                        var selectedDate = e.date;
                                        $("#txtEndDate" + index).datetimepicker('setStartDate', selectedDate);
                                    });

                                    $("#txtEndDate" + index).datetimepicker({
                                        weekStart: 1,
                                        todayBtn: 1,
                                        autoclose: 1,
                                        todayHighlight: 1,
                                        startView: 2,
                                        minView: 2,
                                        startDate: new Date(),
                                        forceParse: 0
                                    });

                                    $("#txtStTime" + index).datetimepicker({
                                        format: 'hh:ii',
                                        startView: 1,
                                        maxView: 1,
                                        minView: 0,
                                        autoclose: true,
                                        todayHighlight: true,
                                        showMeridian: true
                                    }).on('changeDate', function (e) {
                                        var startTime = e.date;
                                        // Set minimum time for EndTime
                                        $("#txtEndTime" + index).datetimepicker('setStartDate', startTime);
                                    });

                                    $("#txtEndTime" + index).datetimepicker({
                                        format: 'hh:ii',
                                        startView: 1,
                                        maxView: 1,
                                        minView: 0,
                                        autoclose: true,
                                        todayHighlight: true,
                                        showMeridian: true
                                    });
                                });
                            }
                        });
                    }
                });
            }
        });
    }

   
    

        function changeAllShiftType(id, i) {
        $.ajax({
            url: 'GetAllShiftType',
            data: { "id": id },
            type: "GET",
            success: function (result) {
                document.getElementById("txtStTime" + i).value = result.sttime;
                document.getElementById("txtEndTime" + i).value = result.endtime;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }

    //  function changeAllShiftType(id) {
    //    // var cusid = document.getElementById("txtShift").value;
    //     $.ajax({
    //         url: 'GetAllShiftType',
    //          data: { "id": id},
    //          type: "GET",
    //          success: function (result) {
               
    //             document.getElementById("txtStTime" + i).value = result.sttime;
    //             document.getElementById("txtEndTime" + i).value = result.endtime;
    //         },
    //         error: function () {
    //             alert("Data Not Found");
    //         }
    //     });
    // }

    // function changeAllShiftType(STTIME,ENDTIME) {
    //      $.ajax({
    //                         url: 'GetAllShiftTypeJSON',
    //                         type: "POST",
    //                         data: { "sitid": STTIME,"endid": ENDTIME},
    //                         cache: false,
    //                         success: function (response) {
    //                             document.getElementById("txtStTime").value;
    //                             document.getElementById("txtEndTime").value;
    //                             //document.get("ShiftType",response)
    //                         },
    //                         error: function() {
    //                             debugger;
    //                             alert("Please Select ST.Time and ENDTime");
    //                         }
    //      });
    // }

    // function AppendRow(opt, remopt, remsopt) {
    //     var index = $("#tbBooks").children("tr").length;

    //     var EmployeeID = "<td><input class='form-control' id='txtEmpId" + index + "' name='EmpShiftSchedulelist[" + index + "].EmpID'  style='width: 200px;' type='text'   readonly = 'True' /></td>";

    //     var EmpName = "<td><input class='form-control' id='txtEmpName" + index + "' name='EmpShiftSchedulelist[" + index + "].EmpName'  style='width: 200px;' type='text'  readonly = 'True' /></td>";

    //     var StartDate = "<td> <div class='input-group date form_date col-sm-8'  data - date - format='dd-M-yyyy'><input class='form-control' id='txtStartDate" + index + "' name='EmpShiftSchedulelist[" + index + "].StartDate'  style='width: 130px;' type='text'   />          <span class='input-group-addon' > <span class='glyphicon glyphicon-remove' > </span></span > <span class='input-group-addon'> <span class='glyphicon glyphicon-calendar' > </span></span> </div></td>";

    //     var EndDate = "<td> <div class='input-group date form_date col-sm-8'  data - date - format='dd-M-yyyy'><input class='form-control' id='txtEndDate" + index + "' name='EmpShiftSchedulelist[" + index + "].EndDate'  style='width: 130px;' type='text'   />          <span class='input-group-addon' > <span class='glyphicon glyphicon-remove' > </span></span > <span class='input-group-addon'> <span class='glyphicon glyphicon-calendar' > </span></span> </div></td>";

    //     var ShValue = "<td><input class='form-control' id='txtShVal" + index + "' name='EmpShiftSchedulelist[" + index + "].ShVal'  style='width: 200px;' type='text' /></td>";

    //     var Shift = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='txtShift" + index + "' name='EmpShiftSchedulelist[" + index + "].Shift' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>" + remopt + "</select></td>";

    //     var StTime = " <td> <div class='form-group'><div class='input-group date form_time col-md-4' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control' id = 'txtStTime' '" + index + "' name = 'EmpShiftSchedulelist[" + index + "].StTime'  style = 'width: 80px;' readonly = 'true'><span class='input-group-addon'> <span class='glyphicon glyphicon-remove'></span></span><span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div><input type='hidden' id='dtp_input3' value='' /></div></td> ";

    //     var EndTime = " <td> <div class='form-group'><div class='input-group date form_time col-md-4' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control' id = 'txtEndTime' '" + index + "' name = 'EmpShiftSchedulelist[" + index + "].EndTime'  style = 'width: 80px;' readonly = 'true'><span class='input-group-addon'> <span class='glyphicon glyphicon-remove'></span></span><span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div><input type='hidden' id='dtp_input3' value='' /></div></td> ";

    //     var WOFF = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='txtWOFF" + index + "' name='EmpShiftSchedulelist[" + index + "].WOFF' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>" + remsopt + "</select></td>";

    //     var removeCell = "<td><input id='Isvalid" + index + "' name='EmpShiftSchedulelist[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='EmployeeAttendancelist.Index' type='hidden' value='" + index + "'  /></td>";

    //     var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + EmployeelID + EmployeeID + EmpName + StartDate + EndDate + ShValue + Shift + StTime + EndTime + WOFF + removeCell + "</tr>";
    //     $("#tbBooks").append(newRow);


    // }

</script>


<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("txtDocId").value == "") {
                isValid = false;
                $(txtDocId).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select DocID");
                return false;
            }
            else {
                $(txtDocId).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("Month").value == "") {
                isValid = false;
                $(Month).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Month");
                return false;
            }
            else {
                $(Month).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("EmpCategory").value == "") {
                isValid = false;
                $(EmpCategory).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select EmpCategory");
                return false;
            }
            else {
                $(EmpCategory).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("Dep").value == "") {
                isValid = false;
                $(Dep).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Dep");
                return false;
            }
            else {
                $(Dep).css({
                    "border": "",
                    "background": ""
                });
            }
            //Grid validation
            var i = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {

                    if ($(this).find('#txtStartDate' + i.toString()).val() == "" || $(this).find('#txtStartDate' + i.toString()).val() == "0") {
                        isValid = false;
                        $(this).find('#txtStartDate' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Select StartDate");
                        $(this).find('#txtStartDate' + i.toString()).focus();
                        return false;

                    }
                    else {
                        $(this).find('#txtStartDate' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }


                    if ($(this).find('#txtEndDate' + i.toString()).val() == "" || $(this).find('#txtEndDate' + i.toString()).val() == 0) {
                        isValid = false;
                        $(this).find('#txtEndDate' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });
                        alert("Please Select EndDate");
                        $(this).find('#txtEndDate' + i.toString()).focus();
                        return false;
                    }
                    else {
                        $(this).find('#txtEndDate' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }



                    if ($(this).find('#txtShVal' + i.toString()).val() == "" || $(this).find('#txtShVal' + i.toString()).val() == "0") {
                        isValid = false;
                        $(this).find('#txtShVal' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Select ShVal");
                        $(this).find('#txtShVal' + i.toString()).focus();
                        return false;

                    }
                    else {
                        $(this).find('#txtShVal' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }


                    if ($(this).find('#txtShift' + i.toString()).val() == "" || $(this).find('#txtShift' + i.toString()).val() == 0) {
                        isValid = false;
                        $(this).find('#txtShift' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });
                        alert("Please Select EndDate");
                        $(this).find('#txtShift' + i.toString()).focus();
                        return false;
                    }
                    else {
                        $(this).find('#txtShift' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }

                    if ($(this).find('#txtStTime' + i.toString()).val() == "" || $(this).find('#txtStTime' + i.toString()).val() == "0") {
                        isValid = false;
                        $(this).find('#txtStTime' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Select StTime");
                        $(this).find('#txtStTime' + i.toString()).focus();
                        return false;

                    }
                    else {
                        $(this).find('#txtStTime' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }


                    if ($(this).find('#txtEndTime' + i.toString()).val() == "" || $(this).find('#txtEndTime' + i.toString()).val() == 0) {
                        isValid = false;
                        $(this).find('#txtEndTime' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });
                        alert("Please Select EndTime");
                        $(this).find('#txtEndTime' + i.toString()).focus();
                        return false;
                    }
                    else {
                        $(this).find('#txtEndTime' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }

                    if ($(this).find('#txtWOFF' + i.toString()).val() == "" || $(this).find('#txtWOFF' + i.toString()).val() == 0) {
                        isValid = false;
                        $(this).find('#txtWOFF' + i.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });
                        alert("Please Select WOFF");
                        $(this).find('#txtWOFF' + i.toString()).focus();
                        return false;
                    }
                    else {
                        $(this).find('#txtWOFF' + i.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }

                }
                i += 1;
            });


            if (isValid == false)
                e.preventDefault();

        });

    });

</script>

<script>
    $(function () {
        $('._select').select2();
    });
    
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    

   
    
</script>
