@model Arasan.Models.ExWorkOrderClose
@{
    ViewData["Title"] = "Export Work Order Short Close";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>


<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Sales Export</a> </li>
            <li class="active"> <strong> Export Work Order Short Close </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Export Work Order Short Close </h5>
                    <hr>
                    @using (Html.BeginForm("Work_Order", "WorkOrder", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Doc Id<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "txtDocId", @class = "form-control", @TabIndex = 2, @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2, @size = "30", @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                             @*    <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Loclst, "Please Select", new { @id = "ddlLocation", @Class = "form-control _select", @TabIndex = 1 })
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div> *@
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Customer<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.Customername, new { @id = "ddlCustomer", @Class = "form-control _select", @TabIndex = 1 })
                                            @Html.HiddenFor(C => C.Customer, new { @id = "ddlCustomer", @Class = "form-control _select", @TabIndex = 1 })
                                           @*  @Html.DropDownListFor(C => C.Customer, Model.Suplst, new { @id = "ddlCustomer", @Class = "form-control _select", @TabIndex = 1 }) *@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Reason<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Reason, Model.Reasonlst, new { @id = "ddlReason", @Class = "form-control _select", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Ref No<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.RefNo, new { @id = "txtRefNo", @class = "form-control", @TabIndex = 2 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Ref Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.RefDate, new { @id = "RefDate", @class = "form-control", @TabIndex = 2, @size = "30", @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">
                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>
                                                @* <th>Job OrderId</th> *@
                                                <th>Item Id </th>
                                               
                                                <th>Unit</th>
                                                <th>Ord.Qty</th>
                                               @*  <th>Dc.Qty</th>
                                                <th>Excise.Qty</th>
                                                <th>Pend.Qty</th> *@
                                                <th>ShortClose.Qty</th>
                                                <th>Rate</th>
                                                <th>Amount</th>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;
                                                int j = 1;

                                                foreach (var item in Model.OrderLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                        @*<td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].JobId, new { @id = "txtJobId" + i, @class = "form-control", style = "width:220px;" })
                                                        </td>*@
                                                        <td>

                                                            @Html.TextBoxFor(o => o.OrderLst[i].ItemId, new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItemDetails(this.value," + i + ")" })
                                                           @* @Html.DropDownListFor(o => o.OrderLst[i].ItemId, Model.OrderLst[i].Itemlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItemDetails(this.value," + i + ")" })*@
                                                            @Html.HiddenFor(o => o.OrderLst[i].saveItemId)
                                                            @Html.HiddenFor(o => o.OrderLst[i].JobId)
                                                        </td>
                                                       
                                                        <td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 100px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].OrdQty, new { @id = "txtOrdQty" + i, @class = "form-control", style = "width: 100px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        @*<td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].Dc, new { @id = "txtDc" + i, @class = "form-control", style = "width: 100px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].Excise, new { @id = "txtExcise" + i, @class = "form-control", style = "width: 100px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].PendQty, new { @id = "txtPendQty" + i, @class = "form-control", style = "width: 100px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                        </td>*@
                                                        <td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].ShortQty, new { @id = "txtShortQty" + i, @class = "form-control", style = "width: 100px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.OrderLst[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 100px;", @readonly = "readonly", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.OrderLst[i].Isvalid, new { @id = "Isvalid" + i })

                                                            @Html.TextBoxFor(o => o.OrderLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 100px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.OrderLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="OrderLst.Index" type="hidden" value="@(i)" />
                                                        </td>
                                                    </tr>
                                                    i = i + 1;
                                                    j = j + 1;

                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Narration<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control", @TabIndex = 2 })

                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListWorkOrder", "WorkOrder")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    $(function () {
        $('._select').select2();
    });
    $(".chosen-select").chosen();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function changeExRate(ItemId) {
        $.ajax({
            url: 'GetExRate',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtRate").value = result.rate;

            },
            error: function () {
                alert("Data Not Found");
            }
        });

    }
    function changeItemDetails(ItemId, i) {
        var party = document.getElementById("ddlCustomer").value;
        var ratec = document.getElementById("txtRateC").value;
        var ordtype = document.getElementById("lblordtype").value;
        $.ajax({
            url: 'GetItemDetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                document.getElementById("txtDes" + i).value = result.desc;
                document.getElementById("txtUnit" + i).value = result.unit;


            },
            error: function () {
                alert("Data Not Found");
            }
        });
         $.ajax({
                         url: 'GetItemRate',
                    data: { "ItemId": ItemId, "custid": party ,"ratec": ratec,"ordtype":ordtype },
                        type: "GET",
                        success: function (result) {


                if (typeid == "SAMPLE") {



                    document.getElementById("txtRate" + i).value = 0;




                }
                else{
                    document.getElementById("txtRate" + i).value = result.price;
                }


                        },
                        error: function () {
                            alert("Data Not Found");
                        }
                    });
    }
    function changeQty(_this, i) {
        try {

            var j = 0;
            var sqty = 0;
            var tot = 0;
            var qty = document.getElementById("txtShortQty" + i).value;
            var up = document.getElementById("txtRate" + i).value;
           

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;


            

            var tot = eval(qty) * eval(up) ;
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);

            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    sqty = $(this).find('#txtShortQty' + j.toString()).val();
                    if (sqty == "")
                        sqty = 0;

                    tot += eval(sqty);
                }
                j += 1;
            });

        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }

    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var JobId = "<td><input class='form-control' id='txtJobId" + index + "' name='OrderLst[" + index + "].JobId'  style='width: 220px;' type='text' /></td>";

        var ItemId = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItemId" + index + "' name='OrderLst[" + index + "].ItemId' onchange = 'changeItemDetails(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Des = "<td><input class='form-control' id='txtDes" + index + "' name='OrderLst[" + index + "].Des'  style='width: 220px;' type='text' readonly='True'  /></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='OrderLst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' /></td>";

        var OrdQty = "<td><input class='form-control' id='txtOrdQty" + index + "' name='OrderLst[" + index + "].OrdQty'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' onkeyup = 'changeQty(this," + index + ")'    /></td>";

        var Dc = "<td><input class='form-control' id='txtDc" + index + "' name='OrderLst[" + index + "].Dc'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'    /></td>";

        var OrdQty = "<td><input class='form-control' id='txtOrdQty" + index + "' name='OrderLst[" + index + "].OrdQty'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'     /></td>";

        var OrdQty = "<td><input class='form-control' id='txtOrdQty" + index + "' name='OrderLst[" + index + "].OrdQty'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'     /></td>";

        var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='ExportLst[" + index + "].Rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' readonly='True' /></td>";

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='ExportLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' readonly='True' /></td>";

        var removeCell = "<td><input id='Isvalid" + index + "' name='ExportLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='DirLst.Index' type='hidden' value='" + index + "'  /></td>";


        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Item + Des + Unit + Qty + Rate + Amount + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
</script>
<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("EnqDate").value == "") {
                isValid = false;
                $(EnqDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Enq Date");
                return false;
            }
            else {
                $(EnqDate).css({
                    "border": "",
                    "background": ""
                });
            }


    @*  if (document.getElementById("ddlCustomerType").value == "" ) {
                isValid = false;
                $(ddlCustomerType_chzn).css({
                "border": "1px solid red",
                "background": "#FFCECE"
                });

                alert("Please Select Customer Type");
                return false;
                }
                else {
                $(ddlCustomerType_chzn).css({
                "border": "",
                "background": ""
                });
                }*@
                    if (document.getElementById("ddlCustomer").value == "") {
                isValid = false;
                $(ddlCustomer).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Customer Name");
                return false;
            }
            else {
                $(ddlCustomer).css({
                    "border": "",
                    "background": ""
                });
            }
    @*if (document.getElementById("ddlEnqType").value == "") {
                isValid = false;
                $(ddlEnqType_chzn).css({
                "border": "1px solid red",
                "background": "#FFCECE"
                });

                alert("Please Select Enq Type");
                return false;
                }
                else {
                $(ddlEnqType_chzn).css({
                "border": "",
                "background": ""
                });
                }*@

                   var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {


                    if ($(this).find('#ddlItem' + j.toString()).val() != "" || $(this).find('#ddlItem' + j.toString()).val() != "0") {

                        if ($(this).find('#ddlItem' + j.toString()).val() == "" || $(this).find('#ddlItem' + j.toString()).val() == 0) {
                            isValid = false;
                            $(this).find('#ddlItem' + j.toString()).css({
                                "border": "1px solid red",
                                "background": "#FFCECE"
                            });
                            alert("Please Select Item");
                            $(this).find('#ddlItem' + j.toString()).focus();
                            return false;
                        }
                        else {
                            $(this).find('#ddlItem' + j.toString()).css({
                                "border": "",
                                "background": ""
                            });
                        }
                    }
                    if ($(this).find('#txtQty' + j.toString()).val() == "" || $(this).find('#txtQty' + j.toString()).val() == "0") {
                        isValid = false;
                        $(this).find('#txtQty' + j.toString()).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Enter Qty");
                        $(this).find('#txtQty' + j.toString()).focus();
                        return false;

                    }
                    else {
                        $(this).find('#txtQuantity' + j.toString()).css({
                            "border": "",
                            "background": ""
                        });
                    }

                }
                j += 1;
            });

            if (isValid == false)
                e.preventDefault();

        });

    });
</script>
