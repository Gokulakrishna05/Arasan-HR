@model Arasan.Models.ExchangeRate

@{
    ViewData["Title"] = "Exchange Rate";
}
<style>
    .Mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Master</a> </li>
            <li class="active"> <strong> Exchange Rate </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    
                    <hr>
                    @using (Html.BeginForm("ExchangeRate", "ExchangeRate", FormMethod.Post))
                   {
                        @Html.AntiForgeryToken()
                       <form>

                                    <div class="row">
                                        <div class="col-lg-3"></div>
                                        <div class="col-md-7">
                                            <div class="form-group">

                                                <label for="inputName3" class="col-sm-4 control-label">Currency Symbol<label class="Mandatory">*</label></label>
                                                <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.CurrencySymbol, Model.Symlst, "Please Select", new { @id = "ddlCurSym", @Class = "form-control _select", @TabIndex = 1, @onchange = "changecurr(this.value)" })

                                                    @Html.HiddenFor(C => C.ID)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-3"></div>
                                        <div class="col-md-7">
                                           <div class="form-group">


                                        <br /><label for="inputName3" class="col-sm-4 control-label">Currency Name<label class="Mandatory">*</label></label>
                                            <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.CurrencyName, new { @id = "txtCurrencyName", @class = "form-control", @TabIndex = 1,@readonly="readonly" })<br />
                                            <br>
                                            </div>
                                           </div>

                                         </div>
                                    </div>
                                     <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-7">
                                    <div class="form-group">


                                        <label for="inputName3" class="col-sm-4 control-label">Rate Type<label class="Mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.RateType, Model.Rtlst, "Please Select", new { @id = "ddlrtyp", @Class = "form-control _select", @TabIndex = 1 })
                                            <br>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-7">
                                    <div class="form-group">


                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Exchange Rate<label class="Mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Exchange, new { @id = "txterate", @class = "form-control", @TabIndex = 1 })<br />
                                            <br>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            

                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-7">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Exchange Date<label class="Mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                @Html.TextBoxFor(C => C.ExchangeDate, new { @id = "ExchangeDate", @class = "form-control", @TabIndex = 2,@size="30",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                           


                            <div style="height:30px;"></div>
                            <div class="col-lg-8"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs " id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListExchangeRate", "ExchangeRate")'">Cancel</button>

                      </form>

                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
</script>

<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("ddlCurSym").value == "" || document.getElementById("ddlCurSym").value == 0) {
                isValid = false;
                $(ddlCurSym).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Symbol");
                return false;
            }
            else {
                $(ddlCurSym).css({
                    "border": "",
                    "background": ""
                });
            }
             if (document.getElementById("txtCurrencyName").value == "" || document.getElementById("txtCurrencyName").value == 0) {
                isValid = false;
                $(txtCurrencyName).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Currency Name");
                return false;
            }
            else {
                $(txtCurrencyName).css({
                    "border": "",
                    "background": ""
                });
            }
             if (document.getElementById("ddlrtyp").value == "" || document.getElementById("ddlrtyp").value == 0) {
                isValid = false;
                $(ddlrtyp).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Rate Type");
                return false;
            }
            else {
                $(ddlrtyp).css({
                    "border": "",
                    "background": ""
                });
            }
             if (document.getElementById("txterate").value == "" || document.getElementById("txterate").value == 0) {
                isValid = false;
                $(txterate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Exchange Rate");
                return false;
            }
            else {
                $(txterate).css({
                    "border": "",
                    "background": ""
                });
            }
             if (document.getElementById("ExchangeDate").value == "" || document.getElementById("ExchangeDate").value == 0) {
                isValid = false;
                $(ExchangeDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Exchange Date");
                return false;
            }
            else {
                $(ExchangeDate).css({
                    "border": "",
                    "background": ""
                });
            }




            if (isValid == false)
                e.preventDefault();

        });

    });
    $(function () {
        $('._select').select2();
    });
     function changecurr(ItemId) {
    

          
           $.ajax({
            url: 'Getcurrencydetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {


                document.getElementById("txtCurrencyName").value = result.sym;


            },
            error: function () {
            alert("Data Not Found");
            }
            });
    }
</script>