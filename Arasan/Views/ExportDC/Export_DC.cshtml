 @model Arasan.Models.ExportDC
@{
    ViewData["Title"] = "Export DC";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>


<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Sales Export</a> </li>
            <li class="active"> <strong> Export DC </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Export DC</h5>
                    <hr>
                    @using (Html.BeginForm("Export_DC", "ExportDC", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                 <div class="col-md-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Job Order<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Jobid, Model.joplst, "---Please Select---", new { @id = "Jobid", @Class = "form-control _select", @TabIndex = 1, @onchange = "changejobdet(this.value)"})

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Customer Name<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
@*                                             @Html.DropDownListFor(C => C.Customer, Model.Suplst, "---Please Select---", new { @id = "ddlCustomer", @Class = "form-control _select", @TabIndex = 1/* , @onchange = "changeItem(this.value)" */ })
 *@                                            @Html.TextBoxFor(C => C.Customer, new { @id = "ddlCustomer", @Class = "form-control", @TabIndex = 1/* , @onchange = "changeItem(this.value)" */ })
 @Html.HiddenFor(C => C.Customerid,new{@id="Customerid"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br>
                                        <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Loclst, "---Please Select---", new { @id = "ddlLocation", @Class = "form-control _select", @TabIndex = 1 })
                                            @Html.HiddenFor(C => C.ID)


                                        </div>
                                    </div>
                                </div>
                               
                            </div>


                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br />

                                        <label for="inputName3" class="col-sm-4 control-label">D.C No<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DCNo, new { @id = "txtEnqNo", @class = "form-control", @TabIndex = 2, @readonly = "readonly" })

                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br> <label for="inputName3" class="col-sm-4 control-label">D.C Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DCdate, new { @id = "EnqDate", @class = "form-control", @TabIndex = 2, @size = "30", @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Ref No<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Ref, new { @id = "txtRef", @class = "form-control", @TabIndex = 2 })

                                        </div>
                                    </div>
                                </div>
                               
                               


                            </div>
                            <div class="row">

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br> <label for="inputName3" class="col-sm-4 control-label">Ref Date<label class="mandatory"></label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.Refdate, new { @id = "Refdate", @class = "form-control", @TabIndex = 2, @size = "30", @readonly = true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Received By<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Recieved, Model.RecList, "---Please Select---", new { @id = "ddlRecieved", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Despatched By<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Despatch, Model.Despatchlst, "---Please Select---", new { @id = "ddlDespatch", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">Inspected By<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Inspected, Model.Inspectedlst, "---Please Select---", new { @id = "ddlInspected", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Document Through<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Doc, Model.Doclst, "---Please Select---", new { @id = "ddlDoc", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <br> <label for="inputName3" class="col-sm-4 control-label">Country Name<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.CName, new { @id = "txtCName", @class = "form-control", @TabIndex = 2 })

                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">

                                    <div class="tabs-container">
                                        <ul class="nav nav-tabs">
                                            <li class="active" id="dc"><a href="#tab-3" data-toggle="tab" id="deatil">DC Detail</a></li>
                                            <li id="scarp"> <a href="#tab-4" data-toggle="tab" id="deatilc">Rejections / Scrap </a></li>
                                        </ul>
                                        <div class="tab-content">
                                            <div class="tab-pane active" id="tab-3">
                                                <!-- 1st tab  -->
                                              @*   <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                </div> *@
                                                <div class="row">
                                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:100px;">
                                                        <table class="table table-striped table-hover" id="dataTable">
                                                            <thead>
                                                                <tr>
                                                                    <th>Item</th>
                                                                    <th> </th>
                                                                   
                                                                    <th>Unit </th>
                                                                    <th>Qty </th>
                                                                    <th>Rate </th>
                                                                    <th>Amount </th>                                                               
                                                                    <th>Qty Disc</th>
                                                                    <th>Cash Disc</th>
                                                                    <th>Intr Disc </th>
                                                                    <th>Trade Disc </th>
                                                                    <th>Add Disc </th>
                                                                    <th>Spe Disc </th>
                                                                    <th>Fright </th>
                                                                    <th>Drum Desc</th>
                                                                    <th>Seal No</th>
                                                                    <th>Container No</th>
                                                                    <th>Tare Weight</th>
                                                                    <th>Vechile No</th>
                                                                    <th>PackSpec</th>
                                                            </thead>
                                                            <tbody id="tbBooks">
                                                              @*   @{

                                                                    int i = 0;
                                                                    int j = 1;

                                                                    foreach (var item in Model.ExportDCLst.ToList())
                                                                    {
                                                                        <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                                          
                                                                            <td>
                                                                                @Html.DropDownListFor(o => o.ExportDCLst[i].ItemId, Model.ExportDCLst[i].Itemlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItemDetails(this.value," + i + ")" })
                                                                                @Html.HiddenFor(o => o.ExportDCLst[i].saveItemId)
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Des, new { @id = "txtDes" + i, @class = "form-control", style = "width:220px;", @readonly = "readonly" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                                            </td>


                                                                            <td>
                                                                                @Html.HiddenFor(o => o.ExportDCLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Qty, new { @id = "txtQty" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.HiddenFor(o => o.ExportDCLst[i].Isvalid, new { @id = "Isvalid" + i })

                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].CF, new { @id = "txtCF" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Lot, new { @id = "txtLot" + i, @class = "form-control", style = "width: 80px;" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Serial, new { @id = "txtSerial" + i, @class = "form-control", style = "width: 80px;" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Seal, new { @id = "txtSeal" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Order, new { @id = "txtOrder" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Current, new { @id = "txtCurrent" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].DC, new { @id = "txtDC" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].UnitPrimary, new { @id = "txtUnitPrimary" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].QtyPrimary, new { @id = "txtQtyPrimary" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Quantity, new { @id = "txtQuantity" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].CashDisc, new { @id = "txtCashDisc" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Introduction, new { @id = "txtIntroduction" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Trade, new { @id = "txtTrade" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Addition, new { @id = "txtAddition" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Special, new { @id = "txtSpecial" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Fright, new { @id = "txtFright" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Drum, new { @id = "txtDrum" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Container, new { @id = "txtContainer" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Tare, new { @id = "txtTare" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Vechile, new { @id = "txtVechile" + i, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                            </td>
                                                                            <td>
                                                                                @Html.TextBoxFor(o => o.ExportDCLst[i].Material, new { @id = "txtMaterial" + i, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                                            </td>

                                                                            <td>
                                                                                @Html.HiddenFor(o => o.ExportDCLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                                <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="ExportDCLst.Index" type="hidden" value="@(i)" />
                                                                            </td>
                                                                        </tr>
                                                                        i = i + 1;
                                                                        j = j + 1;

                                                                    }
                                                                } *@

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>

                                                <!-- 1st tab  -->
                                            </div>
                                            <div class="tab-pane" id="tab-4">
                                                <!-- 2nd tab  -->
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddRow1()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">
                                                            <table class="table table-striped table-hover" id="dataTable1">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Rejected Location</th>
                                                                        <th>Item Id </th>
                                                                        <th>Description</th>
                                                                        <th> Unit </th>
                                                                        <th> CF </th>
                                                                        <th> Stock </th>
                                                                        <th> Qty </th>
                                                                        <th>Rate </th>
                                                                        <th>Amount </th>
                                                                </thead>
                                                                <tbody id="tbBooks1">
                                                                    @{

                                                                        int k = 0;

                                                                        foreach (var item in Model.ScrapLst.ToList())
                                                                        {
                                                                            <tr id="trBook1@(k)" class="chkitemlst1" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Rejected, new { @id = "Rejected" + k, @class = "form-control", style = "width:200px;", @readonly = "readonly" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.DropDownListFor(o => o.ScrapLst[k].ItemId, Model.ScrapLst[k].Itemlst, "---Please Select---", new { @class = "form-control _select newcss", @id = "Item" + k, style = "width: 200px;", onchange = "GetItemScrap(this.value," + k + ")"  })
                                                                                    @Html.HiddenFor(o => o.ScrapLst[k].saveItemId)
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Des, new { @id = "Des" + k, @class = "form-control", style = "width:220px;", @readonly = "readonly" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Unit, new { @id = "Unit" + k, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].CF, new { @id = "CF" + k, @class = "form-control", style = "width: 80px;", @readonly = "readonly" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Stock, new { @id = "Stock" + k, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Qty, new { @id = "Qty" + k, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "change_Qty(this," + k + ")" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Rate, new { @id = "Rate" + k, @class = "form-control", style = "width: 80px;", @readonly = "readonly", onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "change_Qty(this," + k + ")" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.TextBoxFor(o => o.ScrapLst[k].Amount, new { @id = "Amount" + k, @class = "form-control", style = "width: 80px;", onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly" })
                                                                                </td>
                                                                                <td>
                                                                                    @Html.HiddenFor(o => o.ScrapLst[k].Isvalid1, new { @id = "Isvalid1" + k })
                                                                                    <img onclick="removeRow1(@(k));" src="../Images/delete.png" style="cursor:pointer" /> <input name="ScrapLst.Index" type="hidden" value="@(k)" />
                                                                                </td>
                                                                            </tr>
                                                                            k = k + 1;

                                                                        }
                                                                    }

                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>

                                                    


                                                </div>
                                                <!-- 2nd tab  -->
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">

                                    <div class="tabs-container">
                                        <ul class="nav nav-tabs">
                                            <li class="active" id="liinp"><a href="#tab-1" data-toggle="tab" id="ainp">Shipment Address</a></li>
                                            <li id="liinpC"> <a href="#tab-2" data-toggle="tab" id="ainpc">Delivery Challan</a></li>

                                        </ul>
                                        <div class="tab-content">
                                            <div class="tab-pane active" id="tab-1">
                                                <!-- 1nd tab  -->
                                                <div style="height:30px;"></div>
                                                <div class="row">

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Area<label class="mandatory">*</label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextBoxFor(C => C.Area, new { @id = "txtArea", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Address<label class="mandatory">*</label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextBoxFor(C => C.Address, new { @id = "txtAddress", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">City<label class="mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextBoxFor(C => C.City, new { @id = "txtCity", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                                <div style="height:30px;"></div>
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">State<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.State, new { @id = "txtState", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Phone<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.Phone, new { @id = "txtPhone", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">PinCode<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.Pincode, new { @id = "txtPincode", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div style="height:30px;"></div>
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Fax<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.Fax, new { @id = "txtFax", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                </div>
                                                <!-- 1nd tab  -->
                                            </div>
                                            <div class="tab-pane" id="tab-2">
                                                <!-- 2nd tab  -->
                                                <div style="height:30px;"></div>
                                                <div class="row">

                                                     
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Email<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextBoxFor(C => C.Email, new { @id = "txtEmail", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div style="height:30px;"></div>
                                                <div class="row">

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Delivery At<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.Deliver, new { @id = "txtDeliver", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Narration<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label for="inputName3" class="col-sm-4 control-label">Other Reference<label class="Mandatory"></label></label>
                                                            <div class="col-sm-8">
                                                                @Html.TextAreaFor(C => C.other, new { @id = "txtother", @class = "form-control", @TabIndex = 2 })

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- 2nd tab  -->
                                            </div>


                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("Export_DC", "ExportDC")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
     $(function () {
        $('._select').select2();
    });
   


    function GetItemScrap(ItemId, k) {
        $.ajax({
            url: 'GetItemDetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                document.getElementById("Des" + k).value = result.desc;
                document.getElementById("Unit" + k).value = result.unit;
                document.getElementById("CF" + k).value = result.cf;
                document.getElementById("Rate" + k).value = result.price;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function change_Qty(_this, i) {
        try {

            var j = 0;
            var sqty = 0;
            var tot = 0;
            var qty = document.getElementById("Qty" + i).value;
            var up = document.getElementById("Rate" + i).value;
            var CF = 1;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;


            if (CF == "")
                CF = 1;


            var tot = eval(qty) * eval(up) * eval(CF);
            document.getElementById("Amount" + i).value = tot.toFixed(2);

            $('tr.chkitemlst1').each(function () {
                if ($(this).css('display') !== 'none') {
                    sqty = $(this).find('#Qty' + j.toString()).val();
                    if (sqty == "")
                        sqty = 0;

                    tot += eval(sqty);
                }
                j += 1;
            });

        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow1() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow1(opt);
            }
        })
    }
    function removeRow1(id) {
        var table = document.getElementById("dataTable1");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook1' + id);
        var j = 0;
        $('tr.chkitemlst1').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid1' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AppendRow1(opt) {
        var index = $("#tbBooks1").children("tr").length;

        var Rejected = "<td><input class='form-control' id='Rejected" + index + "' name='ScrapLst[" + index + "].Rejected'  style='width: 200px;' type='text' value='REJECT' readonly='True'  /></td>";

        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='Item" + index + "' name='ScrapLst[" + index + "].ItemId' onchange = 'GetItemScrap(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Des = "<td><input class='form-control' id='Des" + index + "' name='ScrapLst[" + index + "].Des'  style='width: 220px;' type='text' readonly='True'  /></td>";

        var Unit = "<td><input class='form-control' id='Unit" + index + "' name='ScrapLst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' /></td>";

        var CF = "<td><input class='form-control' id='CF" + index + "' name='ScrapLst[" + index + "].CF'  style='width: 80px;' type='text'  readonly='True' /></td>";

        var Stock = "<td><input class='form-control' id='Stock" + index + "' name='ScrapLst[" + index + "].Stock'  style='width: 80px;' type='text'   /></td>";

        var Qty = "<td><input class='form-control' id='Qty" + index + "' name='ScrapLst[" + index + "].Qty'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' onkeyup = 'change_Qty(this," + index + ")'    /></td>";

        var Rate = "<td><input class='form-control' id='Rate" + index + "' name='ScrapLst[" + index + "].Rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' readonly='True' /></td>";

        var Amount = "<td><input class='form-control' id='Amount" + index + "' name='ScrapLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' readonly='True' /></td>";

        var removeCell = "<td><input id='Isvalid1" + index + "' name='ScrapLst[" + index + "].Isvalid1' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow1(" + index + ");'  style='cursor:pointer' /><input name='ScrapLst.Index' type='hidden' value='" + index + "'  /></td>";


        var newRow = "<tr class='chkitemlst1'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook1" + index + "'>" + Rejected + Item + Des + Unit + CF + Stock + Qty + Rate + Amount + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks1").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }

           $(document).ready(function () {
           $('#btnSave').click(function (e) {
               var isValid = true;
               if (document.getElementById("EnqDate").value == "") {
                   isValid = false;
                   $(EnqDate).css({
                       "border": "1px solid red",
                       "background": "#FFCECE"
                   });

                   alert("Please Select Enq Date");
                   return false;
               }
               else {
                   $(EnqDate).css({
                       "border": "",
                       "background": ""
                   });
               }


    @*  if (document.getElementById("ddlCustomerType").value == "" ) {
                   isValid = false;
                   $(ddlCustomerType_chzn).css({
                   "border": "1px solid red",
                   "background": "#FFCECE"
                   });

                   alert("Please Select Customer Type");
                   return false;
                   }
                   else {
                   $(ddlCustomerType_chzn).css({
                   "border": "",
                   "background": ""
                   });
                   }*@
                       if (document.getElementById("ddlCustomer").value == "") {
                   isValid = false;
                   $(ddlCustomer).css({
                       "border": "1px solid red",
                       "background": "#FFCECE"
                   });

                   alert("Please Select Customer Name");
                   return false;
               }
               else {
                   $(ddlCustomer).css({
                       "border": "",
                       "background": ""
                   });
               }
    @*if (document.getElementById("ddlEnqType").value == "") {
                   isValid = false;
                   $(ddlEnqType_chzn).css({
                   "border": "1px solid red",
                   "background": "#FFCECE"
                   });

                   alert("Please Select Enq Type");
                   return false;
                   }
                   else {
                   $(ddlEnqType_chzn).css({
                   "border": "",
                   "background": ""
                   });
                   }*@

                      var j = 0;
               $('tr.chkitemlst').each(function () {
                   if ($(this).css('display') !== 'none') {


                       if ($(this).find('#ddlItem' + j.toString()).val() != "" || $(this).find('#ddlItem' + j.toString()).val() != "0") {

                           if ($(this).find('#ddlItem' + j.toString()).val() == "" || $(this).find('#ddlItem' + j.toString()).val() == 0) {
                               isValid = false;
                               $(this).find('#ddlItem' + j.toString()).css({
                                   "border": "1px solid red",
                                   "background": "#FFCECE"
                               });
                               alert("Please Select Item");
                               $(this).find('#ddlItem' + j.toString()).focus();
                               return false;
                           }
                           else {
                               $(this).find('#ddlItem' + j.toString()).css({
                                   "border": "",
                                   "background": ""
                               });
                           }
                       }
                       if ($(this).find('#txtQty' + j.toString()).val() == "" || $(this).find('#txtQty' + j.toString()).val() == "0") {
                           isValid = false;
                           $(this).find('#txtQty' + j.toString()).css({
                               "border": "1px solid red",
                               "background": "#FFCECE"
                           });

                           alert("Please Enter Qty");
                           $(this).find('#txtQty' + j.toString()).focus();
                           return false;

                       }
                       else {
                           $(this).find('#txtQuantity' + j.toString()).css({
                               "border": "",
                               "background": ""
                           });
                       }

                   }
                   j += 1;
               });

               if (isValid == false)
                   e.preventDefault();

           });

       });

       function changejobdet(cutid) {
    @*
           $.ajax({
               url: 'GetNarrDetail',
               data: { "ItemId": cutid },
               type: "GET",
               success: function (result) {

                   document.getElementById("txtNarration").value = result.narr1;

               },
               error: function () {
                   alert("Data Not Found");
               }
           }); *@
        document.getElementById("tbBooks").innerHTML = "";
           $.ajax({
               url: 'GetInvoiceDetails',
               type: "post",
               data: { "id": cutid },
               cache: false,
               success: function (list) {
                   //alert(list);
                   list.forEach((item) => {

                       var index = $("#tbBooks").children("tr").length;



                     //  var wo = "<td><lable>" + item.work + " </lable><input  id='workid" + index + "' name='ExportDCLst[" + index + "].workid' type='hidden' value=" + item.work + "><input  id='tarrifid" + index + "' name='ExportDCLst[" + index + "].tarrifid' type='hidden' value=" + item.tarrifid + "></td>";

                      // var sch = "<td><lable>" + item.jobschid + " </lable><input  id='jodetid" + index + "' name='ExportDCLst[" + index + "].jodetid' type='hidden' value=" + item.jodetid + "><input  id='jobschid" + index + "' name='ExportDCLst[" + index + "].jobschid' type='hidden' value=" + item.schid + "><input  id='shedate" + index + "' name='ExportDCLst[" + index + "].shedate' type='hidden' value=" + item.shedate + "></td>";

                       var Item = "<td><lable>" + item.itemss + " </lable> <label id='lblitem" + index + "'></label><input  id='hditemid" + index + "' name='ExportDCLst[" + index + "].saveItemId' type='hidden' value=" + item.saveitem + "><input  id='schid" + index + "' name='ExportDCLst[" + index + "].schid' type='hidden' value=" + item.schid + "><input  id='hdHSN" + index + "' name='ExportDCLst[" + index + "].HSN' type='hidden'></td>";
                       var drum = "<td><div class='fa-hover col-md-2 col-sm-4'> <a href='/DepotInvoice/DrumSelection' class='fancybox' data-fancybox-type='iframe' id='hdrumselection" + index + "'><img src='../Images/view_icon.png'></a></div> <input  id='hddrumid" + index + "' name='ExportDCLst[" + index + "].DrumIds' type='hidden'> </td>";
                      // var itemtype = "<td><label id='txtItemType" + index + "'>" + item.itemtypes + " </label><input  id='ItemType" + index + "' name='ExportDCLst[" + index + "].ItemType' type='hidden' value=" + item.itemtypes + "></td>";
                     //  var itemdesc = "<td><label id='txtItemSpec" + index + "'></label>" + item.itemdesc + " <input  id='ItemSpec" + index + "' name='ExportDCLst[" + index + "].ItemSpec' type='hidden' value=" + item.itemdesc + "></td>";
                       var Unit = "<td><input  id='jodetid" + index + "' name='ExportDCLst[" + index + "].jodetid' type='hidden' value=" + item.jodetid + "><lable>" + item.unitname + " </lable><input class='form-control' id='txtUnit" + index + "' name='ExportDCLst[" + index + "].Unit'  style='width: 80px;' type='hidden'  readonly='True' value=" + item.unitname + " /><input class='form-control' id='txtConFac" + index + "' name='ExportDCLst[" + index + "].ConFac'  style='width: 80px;' type='hidden' readonly='True'   /></td>";

                       var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='ExportDCLst[" + index + "].ConFac'  style='width: 80px;' type='text' readonly='True' value=" + item.cf + "  /></td>";


               var CurrentStock = "<td><input class='form-control' id='txtCurrentStock" + index + "' name='ExportDCLst[" + index + "].CurrentStock'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value=" + item.quantity + " readonly='True' /></td>";

                       var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='ExportDCLst[" + index + "].quantity'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text'value=" + item.quantity + "  onchange = 'changeQty(this.value," + index + ")' readonly='True' /></td>";
                       
                           var rate = "<td><input class='form-control' id='txtrate" + index + "' name='ExportDCLst[" + index + "].rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value=" + item.rate + " onkeyup = 'changeQty(this.value," + index + ")' readonly='True' /></td>";
                        
                       var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='ExportDCLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value=" + item.amountt + "  readonly='True' /></td>";


                       var DiscAmount = "<td><input id='txtDiscountAmount" + index + "'' name='ExportDCLst[" + index + "].DiscountAmount' type='hidden' value='0.00'><input class='form-control' id='txtdiscamt" + index + "' name='ExportDCLst[" + index + "].discamt'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' readonly='True' type='text' value=" + item.discamt + "   onkeyup = 'changeQty(this.value," + index + ")' /></td>";


                       var CashDiscount = "<td><input id='txtCashAmount" + index + "'' name='ExportDCLst[" + index + "].CashAmount' type='hidden' value='0.00'><input class='form-control' id='txtCashDiscount" + index + "' name='ExportDCLst[" + index + "].CashDisc'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' readonly='True' type='text'   value=" + item.cashdis + " ' onkeyup = 'changeQty(this.value," + index + ")' /></td>";

                       var TradeDiscount = "<td><input class='form-control' id='txtTradeDiscount" + index + "' name='ExportDCLst[" + index + "].Trade'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'  value=" + item.tradedis + "  onkeyup = 'changeQty(this.value," + index + ")' readonly='True' /></td>";
                       var introdis = "<td><input class='form-control' id='txtIntroDiscount" + index + "' name='ExportDCLst[" + index + "].Introduction'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'  value=" + item.introdisc + "  onkeyup = 'changeQty(this.value," + index + ")'  readonly='True'/></td>";

                       var AddDiscount = "<td><input class='form-control' id='txtAddDiscount" + index + "' name='ExportDCLst[" + index + "].Addition'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'  value=" + item.adddis + "  onkeyup = 'changeQty(this.value," + index + ")'  readonly='True'/></td>";

                       var SpecDiscount = "<td><input class='form-control' id='txtSpecDiscount" + index + "' name='ExportDCLst[" + index + "].Special'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' value=" + item.specdis + "  onkeyup = 'changeQty(this.value," + index + ")' readonly='True' /></td>";


                       var FrigCharge = "<td><input class='form-control' id='txtFrigCharge" + index + "' name='ExportDCLst[" + index + "].Fright'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'     /></td>";
                    
                           var drumdesc = "<td><textarea class='form-control' id='txtDrumsdesc" + index + "' name='ExportDCLst[" + index + "].Drum'  style='width: 80px;' type='text' /></td>";

                        var sealno = "<td><input class='form-control' id='txtSeal" + index + "' name='ExportDCLst[" + index + "].Seal'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'     /></td>";
                       var conno = "<td><input class='form-control' id='txtContainer" + index + "' name='ExportDCLst[" + index + "].Container'  style='width: 80px;' type='text'    /></td>";
                       var targetwt = "<td><input class='form-control' id='txtTare" + index + "' name='ExportDCLst[" + index + "].Tare'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'      /></td>";
                       var truckno = "<td><input class='form-control' id='txtVechile" + index + "' name='ExportDCLst[" + index + "].Vechile'  style='width: 80px;'   type='text'      /></td>";
                       var packspec = "<td><input class='form-control' id='txtdes" + index + "' name='ExportDCLst[" + index + "].des'  style='width: 130px;' value="+item.des+"    /></td>";




                       var TotalAmount = "<td><input class='form-control' id='txtTotalAmount" + index + "' name='ExportDCLst[" + index + "].TotalAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' readonly='True'  value='0'   /></td>";

                       var removeCell = "<td><input id='Isvalid" + index + "' name='ExportDCLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='ExportDCLst.Index' type='hidden' value='" + index + "'  /></td>";

                       var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>"  + Item + drum + Unit +Quantity + rate + Amount + DiscAmount + CashDiscount + SpecDiscount + introdis + TradeDiscount + AddDiscount + FrigCharge + drumdesc + sealno + conno + targetwt + truckno + packspec + removeCell + "</tr>";

                       $("#tbBooks").append(newRow);
                       var url = "/ExportDC/DrumSelection?schid=" + item.schid + "&rowid=" + index;

                       document.getElementById("hdrumselection" + index).href = url;

                      // changeQty(0, index);
                       $.ajax({
                           url: 'Getdrumdetails',
                           data: { "schid": item.schid },
                           type: "GET",
                           success: function (result) {
                               document.getElementById("hddrumid" + index).value = result.drumid;
                           },
                           error: function () {
                               alert("Data Not Found");
                           }
                       });
                   });

               },
               error: function () {
                   alert("Data Not Found items");
               }
           });
    




           $.ajax({
               url: 'GetJoDetails',
               data: { "custid": cutid },
               type: "GET",
               success: function (result) {

                      document.getElementById("txtRef").value = result.pono;
                   document.getElementById("ddlCustomer").value = result.cust;
                   document.getElementById("Customerid").value = result.custid;
                   document.getElementById("txtDeliver").value = result.adress;
                   document.getElementById("txtNarration").value = result.narr;
                 



               },
               error: function () {
                   alert("Data Not Found");
               }
           });




       }
</script>


<script>
   
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    
    
    function changeItemDetails(ItemId, i) {
        $.ajax({
            url: 'GetItemDetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                document.getElementById("txtDes" + i).value = result.desc;
                document.getElementById("txtUnit" + i).value = result.unit;
                document.getElementById("txtCF" + i).value = result.cf;
                document.getElementById("txtRate" + i).value = result.price;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {

            var j = 0;
            var sqty = 0;
            var tot = 0;
            var qty = document.getElementById("txtQty" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var CF = 1;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;


            if (CF == "")
                CF = 1;


            var tot = eval(qty) * eval(up) * eval(CF);
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);

            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    sqty = $(this).find('#txtQty' + j.toString()).val();
                    if (sqty == "")
                        sqty = 0;

                    tot += eval(sqty);
                }
                j += 1;
            });

        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }

    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='ExportDCLst[" + index + "].ItemId' onchange = 'changeItemDetails(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Des = "<td><input class='form-control' id='txtDes" + index + "' name='ExportDCLst[" + index + "].Des'  style='width: 220px;' type='text' readonly='True'  /></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='ExportDCLst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' /></td>";

        var Qty = "<td><input class='form-control' id='txtQty" + index + "' name='ExportDCLst[" + index + "].Qty'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' onkeyup = 'changeQty(this," + index + ")'    /></td>";

        var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='ExportDCLst[" + index + "].Rate'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' readonly='True' /></td>";

        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='ExportDCLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0' readonly='True' /></td>";

        var CF = "<td><input class='form-control' id='txtCF" + index + "' name='ExportDCLst[" + index + "].CF'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Lot = "<td><input class='form-control' id='txtLot" + index + "' name='ExportDCLst[" + index + "].Lot'  style='width: 80px;' type='text' value='0'  /></td>";

        var Serial = "<td><input class='form-control' id='txtSerial" + index + "' name='ExportDCLst[" + index + "].Serial'  style='width: 80px;' type='text' value='0'  /></td>";

        var Seal = "<td><input class='form-control' id='txtSeal" + index + "' name='ExportDCLst[" + index + "].Seal'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Order = "<td><input class='form-control' id='txtOrder" + index + "' name='ExportDCLst[" + index + "].Order'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Current = "<td><input class='form-control' id='txtCurrent" + index + "' name='ExportDCLst[" + index + "].Current'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var DC = "<td><input class='form-control' id='txtDC" + index + "' name='ExportDCLst[" + index + "].DC'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var UnitPrimary = "<td><input class='form-control' id='txtUnitPrimary" + index + "' name='ExportDCLst[" + index + "].UnitPrimary'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var QtyPrimary = "<td><input class='form-control' id='txtQtyPrimary" + index + "' name='ExportDCLst[" + index + "].QtyPrimary'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='ExportDCLst[" + index + "].Quantity'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var CashDisc = "<td><input class='form-control' id='txtCashDisc" + index + "' name='ExportDCLst[" + index + "].CashDisc'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Introduction = "<td><input class='form-control' id='txtIntroduction" + index + "' name='ExportDCLst[" + index + "].Introduction'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Trade = "<td><input class='form-control' id='txtTrade" + index + "' name='ExportDCLst[" + index + "].Trade'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Addition = "<td><input class='form-control' id='txtAddition" + index + "' name='ExportDCLst[" + index + "].Addition'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Special = "<td><input class='form-control' id='txtSpecial" + index + "' name='ExportDCLst[" + index + "].Special'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Fright = "<td><input class='form-control' id='txtFright" + index + "' name='ExportDCLst[" + index + "].Fright'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Drum = "<td><input class='form-control' id='txtDrum" + index + "' name='ExportDCLst[" + index + "].Drum'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Container = "<td><input class='form-control' id='txtContainer" + index + "' name='ExportDCLst[" + index + "].Container'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Tare = "<td><input class='form-control' id='txtTare" + index + "' name='ExportDCLst[" + index + "].Tare'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Vechile = "<td><input class='form-control' id='txtVechile" + index + "' name='ExportDCLst[" + index + "].Vechile'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var Material = "<td><input class='form-control' id='txtMaterial" + index + "' name='ExportDCLst[" + index + "].Material'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;' type='text' value='0'  /></td>";

        var removeCell = "<td><input id='Isvalid" + index + "' name='ExportDCLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='ExportDCLst.Index' type='hidden' value='" + index + "'  /></td>";


        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Item + Des + Unit + Qty + Rate + Amount + CF + Lot + + Serial + Seal + Order + Current + DC + UnitPrimary + QtyPrimary + Quantity + CashDisc + Introduction + Trade +  Addition + Special + Fright + Drum + Container + Tare + Vechile + Material + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
</script>
<a class="fancybox1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<a class="fancyboxe1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<link rel="stylesheet" href="@Url.Content("~/css/jquery.fancybox.css?v=2.1.5")" type="text/css" media="screen" />
<script type="text/javascript" src="@Url.Content("~/css/jquery.fancybox.pack.js?v=2.1.5")"></script>
<script type="text/javascript">
    var fancybox123;
    jQuery(document).ready(function ($) {
        $(".fancybox").fancybox({
            width: '80%',
            height: '10%',
            arrows: false,

        });
        fancybox123 = $.fancybox;
    });
    function close_popup() {
        fancybox123.close();
        $(".fancybox1").fancybox({
            width: '100%',
            height: '100%',
            arrows: false,
        });
        $(".fancybox1").eq(0).trigger('click');
    }
</script>
 