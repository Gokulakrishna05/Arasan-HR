@model Arasan.Models.ImportPO

@{
    Layout = "_PopupLayout";
    ViewData["Title"] = "Purchase Order";
}
<style>
    .newwidth {
        width: 120px;
    }
</style>


<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    @using (Html.BeginForm("ViewPO", "PO", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Branch<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.DisplayFor(C => C.Branch)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Supplier Name<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.Supplier)
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">PO No.<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.PONo)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">PO Date<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.POdate)
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Quotation No.<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.QuoteNo)
                                        </div>
                                    </div>
                                </div>
                                </div>
                               

                            <div style="height:30px;"></div>

                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="ibox float-e-margins">

                                        <div class="ibox-content collapse in">
                                            <div class="widgets-container">
                                                <div>
                                                    <table id="example7" class="display nowrap table  responsive nowrap table-bordered">
                                                        <thead>
                                                            <tr>
                                                                <th>Item Name</th>
                                                                <th>Unit</th>
                                                                <th>Quantity</th>
                                                                
                                                                <th>Rate</th>
                                                                <th>Amount</th>
                                                                 
                                                            </tr>
                                                        </thead>

                                                        <tbody>
                                                            @{
                                                                int i = 0;

                                                                foreach (var item in Model.PoItem.ToList())
                                                                {

                                                                    <tr>
                                                                        <td>@Html.DisplayFor(o => o.PoItem[i].ItemId)</td>
                                                                       
                                                                        <td>@Html.DisplayFor(o => o.PoItem[i].Unit)</td>
                                                                        <td>@Html.DisplayFor(o => o.PoItem[i].Quantity)</td>
                                                                        <td>@Html.DisplayFor(o => o.PoItem[i].rate)</td>
                                                                        <td>@Html.DisplayFor(o => o.PoItem[i].Amount)</td>
                                                                        
                                                                    </tr>
                                                                    i++;
                                                                }
                                                            }

                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Round Off  <label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.Round)
                                        </div>

                                    </div>
                                </div>
                            </div>
                             
                          
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Gross<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.Gross)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="inputName3" class="col-sm-4 control-label">Net<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.Net)
                                            @Html.HiddenFor(C => C.Net,new { @id = "GTot"})
                                        </div>

                                    </div>
                                </div>
                            </div>
                           


                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        $(document).on('click', '.closeFancybox', function () {
            $.fancybox.close();
        });
        var GTot = document.getElementById('GTot').value;
        document.getElementById('words').innerHTML = inWords(GTot);
    })
    var a = ['', 'one ', 'two ', 'three ', 'four ', 'five ', 'six ', 'seven ', 'eight ', 'nine ', 'ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];
    var b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];

    function inWords(num) {
        //alert(num);
        if ((num = num.toString()).length > 9) return 'overflow';
        n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
        if (!n) return; var str = '';
        str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';
        str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';
        str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';
        str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';
        str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'only ' : '';
        //alert(str);
        return str;
    }
</script>


