@model Arasan.Models.ItemConversionEntry
@{
    ViewData["Title"] = "Item Conversion Entry";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Quality Control</a> </li>
            <li class="active"> <strong>Item Conversion Entry</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Item Conversion Entry</h5>
                    <hr>
                    @using (Html.BeginForm("ItemConversionEntry", "ItemConversionEntry", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                    <from>                      
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Doc Id<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Docid, new { @id = "txtDocid", @class = "form-control", @TabIndex = 2 ,@readonly="readonly"})
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.Branch,new{id="hdbranch"})
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                      <label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="Mandatory"></label></label>

                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                        <input type="hidden" id="dtp_input2" value="" />
                                        <br />
                                       

                                </div>
                            </div>
                        </div>
                         <div class="row">
                             <div class="col-md-6">
                                <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Loc,"---Please Select---", new { @id = "ddlLocation", @Class = "form-control _select", @TabIndex = 1,onchange = "ItemChange(value)" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">From Item Grade<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Item, Model.Itemlst, new { @id = "ddlItem", @Class = "form-control _select", @TabIndex = 1,onchange = "GetStock(value)" })
                                    </div>
                                </div>
                            </div>
                             <div class="col-md-6">
                                <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">To Item Grade<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                          @Html.DropDownListFor(C => C.ToItem, Model.TItemlst,"---Please Select---",new { @id = "ddlToItem", @Class = "form-control _select",})
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Available Stock<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Stock, new { @id = "txtStock", @class = "form-control", @TabIndex = 2 ,@readonly="readonly" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Purpose of Conversion<label class="Mandatory"></label></label>

                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Purpose, new { @id = "txtPurpose", @class = "form-control", @TabIndex = 2  })
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Unit<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Unit, new { @id = "txtUnit", @class = "form-control", @TabIndex = 2 ,@readonly="readonly" })
                                    </div>
                                </div>
                            </div>
                        </div>
                       
                            <div style="height:30px;"></div>
                            @*  <div class="row">
                        <div class="col-md-12">
                        <div class="btn-group">
                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                        </div>
                        </div>
                        </div>*@

                            <div class="col-lg-12">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">
                                    <!-- / ibox-title -->
                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>


                                                <th> Drum No</th>
                                                <th>Batch No</th>
                                                <th>BinId</th>
                                                <th>Qty</th>
                                                <th>Rate</th>
                                            <th>Amount</th>
                                                @*<th>From BinId </th>
                                            <th>To BinId</th>*@

                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        <div style="height:30px;"></div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Total Qty<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Total, new { @id = "txtTotal", @class = "form-control", @TabIndex = 2 ,@readonly="readonly"})
                                    </div>
                                </div>
                            </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Total Amount<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.TotAmount, new { @id = "txtTotAmount", @class = "form-control", @TabIndex = 2 ,@readonly="readonly"})
                                        </div>
                                    </div>
                                </div>
                         </div>
                         <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Entered By<label class="Mandatory"></label></label>

                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Entered, Model.Entlst,"---Please Select---", new { @id = "ddlEntered", @Class = "form-control _select"})
                                    </div>

                                </div>
                            </div>
                              <div class="col-md-6">
                                <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Approved By<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Approved, Model.Approvelst,"---Please Select---", new { @id = "ddlApproved", @Class = "form-control _select"})
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-2 control-label">Remarks<label class="Mandatory"></label></label>
                                                <div class="col-sm-10">
                                            @Html.TextAreaFor(C => C.Remarks, new { @id = "txtRemarks", @class = "form-control", @TabIndex = 2 })
                                                </div>
                                            </div>
                                        </div>
                                        
                                    </div>


                            <div style="height:30px;"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListItemConversionEntry", "ItemConversionEntry")'">Cancel</button>
                    </from>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $(function () {
        $('._select').select2();
    });
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });

    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
</script>
<script>
    function ItemChange(itemid) {

        var i = 0;
        $.ajax({
            url: "GetItemJSON",
            type: "post",
            data: { 'itemid': itemid },
            cache: false,
            success: function (response) {
                var newlist;

                newlist = response.Ilst;
                PopulateDropDown("#ddlItem", response);
            },
            error: function () {
                debugger;
                alert("Please Select From Location");
            }
        });
    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function GetStock(ItemId) {
        $.ajax({
            url: 'GetStockDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                document.getElementById("txtStock").value = result.stock;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
        $.ajax({
            url: 'GetStockDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {
                document.getElementById("txtUnit").value = result.unit;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
       
        document.getElementById("tbBooks").innerHTML = "";
        var item = document.getElementById("ddlLocation").value;
        $.ajax({
            url: 'GetDrumStockDetails',
            type: "post",
            data: { "item": item, "id": ItemId },
            cache: false,

            success: function (list) {
                //if (list != null && list.length > 0) {
                list.forEach((item) => {

                    var index = $("#tbBooks").children("tr").length;
                    //alert(item.batch);
                    var Drum = "<td><input class='form-control' id='txtdrum" + index + "' name='ICEILst[" + index + "].drum'  style='width: 100px;' type='text'  readonly='True'  value=" + item.drum + " /><input id='txtdrum" + index + "' name='ICEILst[" + index + "].drum' type='hidden'  value=" + item.drum + "></td>";

                    var Batch = "<td><input class='form-control' id='txtbatchno" + index + "' name='ICEILst[" + index + "].batchno'  style='width: 200px;' type='text' readonly='True'  value=" + item.batchno + " /><input type='hidden' value=" + item.batchno + " id='txtbatchno" + index + "' name='ICEILst[" + index + "].batchno'></td>";

                    var BinId = "<td><input class='form-control' id='txtbinid" + index + "' name='ICEILst[" + index + "].binid'  style='width: 200px;' type='text' readonly='True'  value=" + item.binid + " /><input type='hidden' value=" + item.binid + " id='txtbinid" + index + "' name='ICEILst[" + index + "].binid'></td>";

                    var Qty = "<td><input class='form-control' id='txtqty" + index + "' name='ICEILst[" + index + "].'qty  style='width: 80px;' type='text' readonly='True' value=" + item.qty + " onkeyup = 'changeQty(this, " + index + ")'  /><input id='txtqty" + index + "' name='ICEILst[" + index + "].qty' type='hidden'  value=" + item.qty + "></td>";

                    var Rate = "<td><input class='form-control' id='txtrate" + index + "' name='ICEILst[" + index + "].rate'  style='width: 80px;' type='text' readonly='True'  value=" + item.rate + " /><input type='hidden' value=" + item.rate + " id='txtrate" + index + "' name='ICEILst[" + index + "].rate'></td>";

                    var TotalAmount = "<td><input class='form-control' id='txttotal" + index + "' name='ICEILst[" + index + "].total'  style='width: 80px;' type='text' readonly='True'  value=" + item.total + " onkeyup = 'changeAmount(this, " + index + ")' /><input type='hidden' value=" + item.total + " id='txttotal" + index + "' name='ICEILst[" + index + "].total'></td>";

                    var removeCell = "<td><input id='Isvalid" + index + "' name='ICEILst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='ICEILst.Index' type='hidden' value='" + index + "'  /></td>";

                    var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Drum + Batch + BinId + Qty + Rate + TotalAmount + removeCell + "</tr>";

                    $("#tbBooks").append(newRow);
                });
                //}
            },
            error: function () {
                alert("Data Not Found");
            }
        });

    }
    function changeAmount(_this, i) {
        try {

            var j = 0;
            var qty = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    qty = $(this).find('#txttotal' + j.toString()).val();
                    if (qty == "")
                        qty = 0;

                    tot += eval(qty);
                }
                j += 1;
            });
            document.getElementById("txtTotAmount").value = tot.toFixed(2);
        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function changeQty(_this, i) {
        try {

            var j = 0;
            var qty = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    qty = $(this).find('#txtqty' + j.toString()).val();
                    if (qty == "")
                        qty = 0;

                    tot += eval(qty);
                }
                j += 1;
            });
            document.getElementById("txtTotal").value = tot.toFixed(2);
        }
        catch (ex) {
            alert(ex.message);
        }
    
   
        try {
            var qty = document.getElementById("txtqty" + i).value;
            var up = document.getElementById("txtrate" + i).value;
           

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

           

            if (up > 0) {
                var tot = eval(qty) * eval(up) ;
                document.getElementById("txttotal" + i).value = tot.toFixed(2);
            } else {
                document.getElementById("txttotal" + i).value = 0;
            }



            var GTot = 0;
            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var unit = $(this).find('#txtqty' + j.toString()).val();
                    var qtys = $(this).find('#txtrate' + j.toString()).val();
                   

                    var tots = eval(qtys) * eval(unit);
                    GTot = eval(tots) + eval(GTot);
                }
                j += 1;
            });

            //document.getElementById("gross").value = GTot;
            //document.getElementById("net").value = GTot;
            // document.getElementById('words').value = inWords(GTot);
            document.getElementById("txtqty" + i).value = qty;

        }
        catch (ex) {
            alert(ex.message);
        }
        }

    
</script>
