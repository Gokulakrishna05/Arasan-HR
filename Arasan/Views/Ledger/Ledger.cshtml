@model Arasan.Models.Ledger
@{
    ViewData["Title"] = "Ledger";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Account</a> </li>
            <li class="active"> <strong>  Ledger</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Ledger </h5>
                    <hr>
                    @using (Html.BeginForm("Ledger", "Ledger", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Account Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.AType, Model.Typelst," -- Please Select -- ", new { @id = "ddlAType", @Class = "form-control _select", @TabIndex = 1, @onchange = "changeGroup(this.value)" })
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Account Group<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.AccGroup, Model.AccGrouplst," -- Please Select -- ", new { @id = "ddlAccGroup", @Class = "form-control _select", @TabIndex = 1,@onchange = "changeGroupcode(this.value)" })
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.DocDate)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Group Code<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Groupcode, new { @id = "txtGroupcode", @class = "form-control", @TabIndex = 1 ,@readonly=true })
                                          
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Ledger Code<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Ledgercode, new { @id = "txtLedgercode", @class = "form-control", @TabIndex = 1 ,@maxlength="6" })
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />     <label for="inputName3" class="col-sm-4 control-label">Ledger Name<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.LedName, new { @id = "txtLedName", @class = "form-control", @TabIndex = 1  })
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Display Name<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DisplayName, new { @id = "txtDisplayName", @class = "form-control", @TabIndex = 1  })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Opening Balance<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.OpStock, new { @id = "txtOpStock", @class = "form-control", @TabIndex = 1,onkeydown = "return isNumeric2(event.keyCode,this.value)"  })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Closing Balance<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ClStock, new { @id = "txtClStock", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                            </div>
                          @*  <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">DocDate<label class="mandatory"></label></label>

                                        
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DocDate, new { @id = "txtDocDate", @class = "form-control", @TabIndex = 2,@size="30",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                            <br />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Category<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Category, new { @id = "txtCategory", @class = "form-control", @TabIndex = 1  })
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListLedger", "Ledger")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $(function () {
        $('._select').select2();
    });
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function changeGroup(ItemId) {

        $.ajax({
            url: 'GetItemJSON',
            data: { "ItemId": ItemId },
            type: "post",
            success: function (response) {
                var newlist;
                newlist = response.Itemlst;
                PopulateDropDown("#ddlAccGroup", response);
            },
            error: function () {
                debugger;
                alert("Please Account Type");
            }
        });
    }


    function changeGroupcode(ItemId) 
        {
        $.ajax({
            url: 'GetGroupCodeDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtGroupcode").value = result.code;

            },
            error: function () {
                alert("Data Not Found");
            }
        });

    }
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,

        forceParse: 0
    });
   
    $(".chosen-select").chosen();
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("ddlAType").value == "") {
                isValid = false;
                $(ddlAType).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Account Type");
                return false;
            }
            else {
                $(ddlAType).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("ddlAccGroup").value == "") {
                isValid = false;
                $(ddlAccGroup).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Account Group");
                return false;
            }
            else {
                $(ddlAccGroup).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtLedName").value == "") {
                isValid = false;
                $(txtLedName).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Ledger Name");
                return false;
            }
            else {
                $(txtLedName).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtDocDate").value == "") {
                isValid = false;
                $(txtDocDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select DocDate ");
                return false;
            }
            else {
                $(txtDocDate).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtOpStock").value == "") {
                isValid = false;
                $(txtOpStock).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Opening Stock");
                return false;
            }
            else {
                $(txtOpStock).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtClStock").value == "") {
                isValid = false;
                $(txtClStock).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Closing Stock ");
                return false;
            }
            else {
                $(txtClStock).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtDisplayName").value == "") {
                isValid = false;
                $(txtDisplayName).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter DisplayName ");
                return false;
            }
            else {
                $(txtDisplayName).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtCategory").value == "") {
                isValid = false;
                $(txtCategory).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Category ");
                return false;
            }
            else {
                $(txtCategory).css({
                    "border": "",
                    "background": ""
                });
            }

        });

    });
</script>