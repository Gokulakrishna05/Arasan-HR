@model Arasan.Models.MaterialRequisition

@{
    ViewData["Title"] = "Index";
    var previousDate = DateTime.Now.AddDays(-7);
    //DateTime firstDay = new DateTime(previousDate.Year, previousDate.Month, 1);
   // DateTime firstDay = new DateTime(DateTime.getFullYear(), DateTime.getMonth() - 1, 1); 
    
    string strDate2 = String.Format("{0:dd-MMM-yyyy}", previousDate);
    string strDate3 = String.Format("{0:dd-MMM-yyyy}", DateTime.Now);

   
     string strfrom1 = ViewContext.HttpContext.Request.Query["strfrom"];
    string strTo1 = ViewContext.HttpContext.Request.Query["strTo"];

    string strfrom = "";
    string strTo ="" ;
    
    if (strfrom1 == null) {
            strfrom = strDate2;
        }
        else {
            strfrom = strfrom1;
        }
        if (strTo1 == null) {
            strTo = strDate3;
        }
        else {
            strTo = strTo1;
        }
     
}
<partial name="JqxGridPartial" />
@* @Html.Partial("~/Views/JqxGridPartial.cshtml")  *@
<script type="text/javascript" src="~/jqwidgets/jqxgrid.columnsresize.js"></script>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>

<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="@Url.Action("PurchaseDash", "Home")">Home</a> </li>
            <li> <a>Stores Management</a> </li>
            <li class="active"> <strong>Material Requisition</strong> </li>
        </ol>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var source =
        {
            url: "/MaterialRequisition/MyListMaterialRequisitionGrid",
             data: {
                strfrom: "@strfrom ",
                strTo: "@strTo",
                strstatus: ""
            },
            datatype: "json",
            updaterow: function (rowid, rowdata) {
                // synchronize with the server - send update command
            },
            datafields: [
               //{ name: 'branch', type: 'string' },
                { name: 'piid', type: 'string' },
                { name: 'docid', type: 'string' },
                { name: 'docDate', type: 'string' },
                { name: 'location', type: 'string' },
                { name: 'enter', type: 'string' },
                { name: 'enterdate', type: 'string' },
                //{ name: 'work', type: 'string' },
                { name: 'pri', type: 'string' },
                { name: 'iss', type: 'string' },
                //{ name: 'follow', type: 'string' },
               // { name: 'move', type: 'string' },
                //{ name: 'pdf', type: 'string' },
                { name: 'view', type: 'string' },
                { name: 'editrow', type: 'string' },
                { name: 'delrow', type: 'string' },
            ],
           id: 'piid',
        };
        var dataAdapter = new $.jqx.dataAdapter(source,
            { contentType: 'application/json; charset=utf-8' }, {
            loadComplete: function  () {

          
    }
}
        );
        //alert(JSON.stringify(employeesAdapter));

        var ordersSource =
        {
            url: "/MaterialRequisition/ListMRItemgrid",
              data: {
                strfrom: "@strfrom ",
                strTo: "@strTo",
                strstatus: ""
            },
            datafields: [
                { name: 'indentid', type: 'string' },
                { name: 'piid', type: 'string' },
                { name: 'itemname', type: 'string' },
                { name: 'unit', type: 'string' },
                { name: 'quantity', type: 'float' }
                
            ],

            datatype: "json",

            async: false
        };
        var dataAdapter = new $.jqx.dataAdapter(ordersSource,
            { contentType: 'application/json; charset=utf-8' }, { autoBind: true }
        );
            var linkrenderer1 = function (row, column, value) {
            return '<a href="' + value + '" onclick="return ConfirmDelete()"><img  src="../Images/Inactive.png"  style="text-align: center; margin-top: 5px;padding-left:25px;"/></a>';
        } 
        dataAdapter.dataBind();
        //var ordersDataAdapter2 = new $.jqx.dataAdapter(ordersSource, { autoBind: true });
        var orders = dataAdapter.records;

        console.log(dataAdapter);

        var nestedGrids = new Array();
        // create nested grid.
        var initrowdetails = function (index, parentElement, gridElement, record) {
            var id = record.uid.toString();
            var grid = $($(parentElement).children()[0]);
            nestedGrids[index] = grid;
            var filtergroup = new $.jqx.filter();
            var filter_or_operator = 1;
            var filtervalue = id;
            var filtercondition = 'equal';
            var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
            // fill the orders depending on the id.
            var ordersbyid = [];
            for (var m = 0; m < orders.length; m++) {
                var result = filter.evaluate(orders[m]["piid"]);
                if (result)
                    ordersbyid.push(orders[m]);
            }
            var orderssource = {
                datafields: [
                    
                    { name: 'piid', type: 'string' },
                    { name: 'itemname', type: 'string' },
                    { name: 'unit', type: 'string' },
                    { name: 'quantity', type: 'int' }
                   
                ],
                id: 'indentid',
                localdata: ordersbyid
            }
            var nestedGridAdapter = new $.jqx.dataAdapter(orderssource);
            if (grid != null) {
                grid.jqxGrid({
                    theme: 'ui-start',
                    enablebrowserselection: true,
                    source: nestedGridAdapter, width: 780,
                    columns: [
                        { text: 'Item Name', datafield: 'itemname', width: 200 },
                        { text: 'Unit', datafield: 'unit', width: 80 },
                        { text: 'Quantity', datafield: 'quantity', width: 150 }
                       
                    ]
                });
            }
        }
        var renderer = function (row, column, value) {

            return '<span style="margin-left: 4px; margin-top: 9px; float: left; ">' + value + '</span>';
        }
        //alert(initrowdetails);
        // creage grid
        $("#grid").jqxGrid(
            {
                width: '100%',
                source: dataAdapter,
                height: 365,
                source: source,
                pageable: true,
                filterable: true,
                autoheight: true,
                sortable: true,
                rowdetails: true,
                showfilterbar: true,
                theme: 'ui-start',
                autorowheight: true,
                filterbarmode: 'simple',
                rowsheight: 35,
                enablebrowserselection: true,
                initrowdetails: initrowdetails,
                columnsresize: true,
                selectionmode: 'multiplerowsextended',
                keyboardnavigation: false,
                rowdetailstemplate: { rowdetails: "<div id='grid' style='margin: 10px;'></div>", rowdetailsheight: 220, rowdetailshidden: true },
                //ready: function () {
                //    $("#grid").jqxGrid('showrowdetails', 1);
                //},
                columns: [

                     //{ text: 'Branch', filtertype: 'checkedlist', datafield: 'branch', width: 150 },
                    { text: 'Doc Id', filtertype: 'input', datafield: 'docid', width: 150 },
                    { text: 'Doc Date', datafield: 'docDate', width: 100, align: 'center' },
                    { text: 'Location', filtertype: 'checkedlist', datafield: 'location', width: 130 },
                    { text: 'Entered By', filtertype: 'checkedlist', datafield: 'enter', width: 130 },
                    { text: 'Entered On', filtertype: 'checkedlist', datafield: 'enterdate', width: 180 },
                    //{ text: 'Work Center', filtertype: 'checkedlist', datafield: 'work', width: 150 },
                    //{ text: 'Send Mail', datafield: 'mailrow', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, cellsalign: 'center', width: 70 },
                    //{ text: 'Follow Up', datafield: 'follow', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, cellsalign: 'center', width: 70 },
                    { text: 'Issue Quantity', datafield: 'iss', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, align: 'center', cellsalign: 'center', width: 150 },
                    //{ text: 'Indent Creation', datafield: 'move', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, align: 'center', cellsalign: 'center', width: 150 },
                    { text: 'Short Close', datafield: 'view', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, align: 'center', cellsalign: 'center', width: 160 },
                    { text: 'Edit', datafield: 'editrow', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, cellsalign: 'center', width: 70 },
                    { text: 'Delete', datafield: 'delrow', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false,cellsrenderer: linkrenderer1, cellsalign: 'center', width: 70 },
                    //{ text: 'Move To GRN', datafield: 'move', sortable: false, exportable: false, filterable: false, groupable: false, autoshowfiltericon: false, cellsalign: 'center', width: 120 },
 ]
            });
   
 
        $("#ddlStatus").change(function () {
            var value = "Y";
            if ($(this).val() != "") {
                value = $(this).val();
            }
            source.data = {
                strfrom: "@strfrom ",
                strTo: "@strTo",
                strstatus: value
            };
            $("#grid").jqxGrid({ source: source });
        });
    });
</script>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">

                    <form>
                            <div class="row">
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="inputName3" class="col-sm-3 control-label">From Date  <label class="mandatory"></label></label>
                                    <div class="col-sm-7">
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">

                                            @*@Html.TextBoxFor(C => C.SStart, new { @id = "SStart", @class = "form-control", @TabIndex = 2,@size="32",@readonly=true })*@
                                            <input id="SStart" class="form-control" readonly="readonly" value="@strfrom" />
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>

                                    </div>
                                </div>
                            
                                <div class="col-md-6">
                                    <label for="inputName3" class="col-sm-3 control-label"> To date  <label class="mandatory"></label></label>
                                    <div class="col-sm-7">

                                        <div class="input-group date to_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">

                                            <input id="SEnd" class="form-control" readonly="readonly" value="@strTo" />
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>

                                        </div>
                                        <button type="button" class="btn btn-primary  marginright" id="btnSave" value="Run" onclick="loadReport()">Search</button>

                                    </div>

                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2 ">
                                @Html.DropDownListFor(n => n.ddlStatus, new SelectListItem[]
                                { new SelectListItem() {Text = "Enabled", Value="Y"},
                                new SelectListItem() {Text = "Disabled", Value="N"}},
                                new { @id = "ddlStatus", Class = "dropdownlist margin_bottom_new form-control" })
                                <br>
                            </div>
                              <div class="col-md-9 ">
                            <div class=" textalignright">
                                    <a href="@Url.Action("MaterialRequisition", "MaterialRequisition")" class="btn  btn-round btn-primary" style="float: right; color:white;">Add MaterialRequisition</a>
                            <br>
                            </div>


                            </div>
                        </div>
                        <div class="row">


                            @*  <div class="col-md-10 ">*@
                            <div id="grid">
                            </div>

                            @* </div>*@

                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function ConfirmDelete() {
        return confirm("Are you sure you want to delete?");
    }
    function loadReport() {
        var dtfrom = document.getElementById("SStart").value;
        var dtto = document.getElementById("SEnd").value;
        //var strsech = document.getElementById("txtprosearch").value;

        var url = 'ListMaterialRequisition?strfrom=' + dtfrom + '&strTo=' + dtto;
        window.location.href = url;

        //source.data = {
        //    strfrom: dtfrom,
        //    strTo: dtto,
        //    strProSearch: strsech,
        //    strstatus: ""
        //};
        //$("#grid").jqxGrid({ source: source });
    }
</script>
<script>
    $('.to_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0
    });

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0
    }).on('changeDate', function (selected) {
        var minDate = new Date(selected.date.valueOf());
        $('.to_date').datetimepicker('setStartDate', minDate);
    });
</script>

<a class="fancybox1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<a class="fancyboxe1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<link rel="stylesheet" href="@Url.Content("~/css/jquery.fancybox.css?v=2.1.5")" type="text/css" media="screen" />
<script type="text/javascript" src="@Url.Content("~/css/jquery.fancybox.pack.js?v=2.1.5")"></script>
<script type="text/javascript">
    var fancybox123;
    jQuery(document).ready(function ($) {
        $(".fancybox").fancybox({
            width: '80%',
            height: '10%',
            arrows: false,
            afterClose: function () {
                location.reload();
                return;
            }
        });
        fancybox123 = $.fancybox;
    });

    function close_popup() {
        fancybox123.close();
        $(".fancybox1").fancybox({
            width: '100%',
            height: '100%',
            arrows: false,
        });
        $(".fancybox1").eq(0).trigger('click');
    }


            //function changeStatus(status) {
            //    var url = "/PurchaseQuo/ListPurchaseQuo?status=" + status;
            //    window.location.href = url;
            //    //$.ajax({
            //    //    url: 'AssignSession',
            //    //    data: { "status": status },
            //    //    type: "GET",
            //    //    success: function (result) {
            //    //        document.getElementById("hdstatus").value = result;
            //    //    },
            //    //    error: function () {
            //    //        alert("Data Not Found");
            //    //    }
            //    //});
            //    //window.location.reload();
</script>