@model Arasan.Models.GateInward
@{
    ViewData["Title"] = "Gate Inward";
}
<style>
    .newwidth {
        width: 120px;
    }
    .mandatory{
	color: red;
	position:relative;
	top:2px;
	left:5px;
}
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="@Url.Action("PurchaseDash", "Home")">Home</a> </li>
            <li> <a>Purchase</a> </li>
            <li class="active"> <strong>Gate Inward</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Gate Inward</h5>
                    <hr>
                             @using (Html.BeginForm("GateInward", "PO", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                    <form>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Supplier <label class="mandatory"></label></label>
                                    <div class="col-sm-8">
                                        @Html.HiddenFor(C => C.ID)
                                        @Html.HiddenFor(C => C.user)
                                        @if(Model.Supplier==null)
                                            {
                                                @Html.DropDownListFor(C => C.Supplier, Model.Suplst, new { @id = "ddlsup", @Class = "form-control _select", @TabIndex = 1 , @onchange = "Supp_Change(this.value)"})<br/>

                                            }
                                            else
                                            {
                                         		 @Html.DisplayFor(C => C.Supplierid)
                                         		 @Html.HiddenFor(C => C.Supplierid)
                                         		 @Html.HiddenFor(C => C.Supplier)

                                            }
                                        </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">PO No.<label class="mandatory"></label></label>
                                    <div class="col-sm-8">
                                         @if(Model.POId==null)
                                            {
                                       @Html.DropDownListFor(C => C.POId, Model.POlst, new { @id = "ddlPO", @Class = "form-control _select", @TabIndex = 1 , @onchange = "PO_Change(this.value)" })<br/>
                                            }
                                            else
                                            {
                                         		 @Html.DisplayFor(C => C.POno)
                                         		 @Html.HiddenFor(C => C.POno)
                                         		 @Html.HiddenFor(C => C.POId)

                                            }
                                    </div>
                                </div>
                            </div>
                        </div>
                      
                         <div style="height:30px;"></div>
                        <div class="row">
                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="inputName3" class="col-sm-4 control-label">Gate In Date <label class="mandatory">*</label></label>
                                              
													<div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy" >
                                                         @Html.TextBoxFor(C => C.GateInDate, new { @id = "GateInDate", @class = "form-control", @TabIndex = 2,@size="32",@readonly=true })
														<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
													</div>
													
													<br/>
												
                                            </div>
                                        </div>


                                         <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="inputName3" class="col-sm-4 control-label">Gate In Time <label class="mandatory">*</label></label>
                                              <div class="input-group date form_time col-sm-8" data-date="" data-date-format="hh:ii" data-link-field="dtp_input3" data-link-format="hh:ii">
														 @Html.TextBoxFor(C => C.GateInTime, new { @id = "GateInTime", @class = "form-control", @TabIndex = 2,@size="32",@readonly=true })
														<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
													</div>
													
													
													<br/>
												
                                            </div>
                                        </div>
                        
                    </div>


                     
                        
                    <div style="height:30px;"></div>
                      
<div class="row">
          <div class="col-lg-12">
            <div class="ibox float-e-margins">
              
              <div class="ibox-content collapse in">
                <div class="widgets-container">
                  <div >
                    <table id="example7" class="display nowrap table  responsive nowrap table-bordered">
                      <thead>
                        <tr style="background-color:#49b6d6">
                          <th>Item Name</th>
                          <th>QC</th>
                          <th>Quantity</th>
                          <th>Unit</th>
                      <th>In Quantity</th>
                        </tr>
                      </thead>
                   
                      <tbody id="tbBooks">
                       
                        @{

                                                            int i = 0;
                                                             
                                                            foreach (var item in Model.PoItem.ToList())
                                                            {
                                                            <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                              
                                                                <td>
                                                                    @Html.DisplayFor(o => o.PoItem[i].itemname)
                                                                    @Html.HiddenFor(o => o.PoItem[i].itemid)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayFor(o => o.PoItem[i].qc)
                                                                    @Html.HiddenFor(o => o.PoItem[i].qc)
                                                                </td>
                                                                 <td>
                                                                    @Html.DisplayFor(o => o.PoItem[i].qty)
                                                                    @Html.HiddenFor(o => o.PoItem[i].qty)
                                                                                                            </td>
                                                                <td>
                                                                    @Html.DisplayFor(o => o.PoItem[i].unit)
                                                                    @Html.HiddenFor(o => o.PoItem[i].unit)
                                                                </td>
                                                                <td>
                                                            @Html.TextBoxFor(o => o.PoItem[i].Quantity, new { @id = "txtQuantity" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px; ", @onkeyup = "changeQty(this," + i + ")"})
                                                                </td>
                                                               
                                                             
                                                                </tr>
                                                    i = i + 1;
                                                     
                                                }
                                            }
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

      

                         <div style="height:30px;"></div>

                         <div class="row">
                             <div class="col-md-5"></div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                            
                                                <label for="inputName3" class="col-sm-4 control-label">Total Quantity<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(C => C.TotalQty, new { @id = "txttotalQty", @Class = "form-control", @TabIndex = 1 ,@readonly=true})
                                                </div>
                                            </div>
                                        </div>
                                        </div>
                                        <div class="col-md-3"></div>


   <div style="height:30px;"></div>
									 <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                            
                                                <label for="inputName3" class="col-sm-2 control-label">Narration<label class="Mandatory"></label></label>
                                                <div class="col-sm-10">
                                                    @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control", @TabIndex = 2 })
                                                </div>
                                            </div>
                                        </div>
                                        
                                    </div>
               

                        <div style="height:30px;"></div>
                        <div class="row">
                <div class="col-sm-4 col-sm-offset-2">

                        <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                        <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("GateInward", "PO")'">Cancel</button>
                        </div>
                        </div>
                    </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
 <script>
       $(document).ready(function () {
                $('#btnSave').click(function (e) {
                    var isValid = true;
                    if (document.getElementById("ddlsup").value == "" || document.getElementById("ddlsup").value == 0) {
                        isValid = false;
                        $(ddlsup_chzn).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Select Supplier");
                        return false;
                    }
                    else {
                        $(ddlsup_chzn).css({
                            "border": "",
                            "background": ""
                        });
                    }
                     if (document.getElementById("ddlPO").value == "" || document.getElementById("ddlPO").value == 0) {
                        isValid = false;
                        $(ddlPO_chzn).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Select PO");
                        return false;
                    }
                    else {
                        $(ddlPO_chzn).css({
                            "border": "",
                            "background": ""
                        });
                    }

                     if (document.getElementById("GateInDate").value == "") {
                        isValid = false;
                        $(GateInDate).css({
                            "border": "1px solid red",
                            "background": "#FFCECE"
                        });

                        alert("Please Select Gate In Date");
                        return false;
                    }
                    else {
                        $(RefDate).css({
                            "border": "",
                            "background": ""
                        });
                    }

                     //Grid validation
                    var j = 0;
                    $('tr.chkitemlst').each(function () {
                        if ($(this).css('display') !== 'none') {



                            if ($(this).find('#txtQuantity' + j.toString()).val() == "" || $(this).find('#txtQuantity' + j.toString()).val() == "0") {
                                isValid = false;
                                $(this).find('#txtQuantity' + j.toString()).css({
                                    "border": "1px solid red",
                                    "background": "#FFCECE"
                                });

                                alert("Please Enter Quantity");
                                $(this).find('#txtQuantity' + j.toString()).focus();
                                return false;

                            }
                            else {
                                $(this).find('#txtQuantity' + j.toString()).css({
                                    "border": "",
                                    "background": ""
                                });
                            }



                        } 
                        j += 1;
                    });


 if (isValid == false)
                        e.preventDefault();

                });

            });
            function changeQty(_this, i) {
                try {

                       var j = 0;
                    var qty = 0;
                    var tot = 0;
                    $('tr.chkitemlst').each(function () {
                        if ($(this).css('display') !== 'none') {
                            qty = $(this).find('#txtQuantity' + j.toString()).val();
                            if (qty == "")
                        qty = 0;

                         tot += eval(qty);
                              }
                        j += 1;
                    });
                  document.getElementById("txttotalQty").value = tot.toFixed(2);
                }
                catch (ex) {
                    alert(ex.message);
                }
            }
     $(function () {
        $('._select').select2();
    });
   
     $('.form_date').datetimepicker({
     //   language:  'fr',
        weekStart: 1,
        todayBtn:  1,
    autoclose: 1,
    todayHighlight: 1,
    startView: 2,
    minView: 2,
    forceParse: 0
    });
     $('.form_time').datetimepicker({
      //  language:  'fr',
        weekStart: 1,
        todayBtn:  1,
    autoclose: 1,
    todayHighlight: 1,
    startView: 1,
    minView: 0,
    maxView: 1,
    forceParse: 0
    });
     function Supp_Change(itemid) {
               //alert(itemid);
               //debugger;
                $.ajax({
                    url: "GetSuppJSON",
                    type: "post",
                    data: {'supid': itemid},
                    cache: false,
                    success: function (response) {
                        var newlist;
                        newlist = response.POlst;
                        PopulateDropDown("#ddlPO", response);
                    },
                    error: function () {
                        debugger;
                        alert("Please Select Supplier");
                    }
                });
            }
function PO_Change(poid) {
    //$("tbody").children().remove();
    document.getElementById("tbBooks").innerHTML="";

     $.ajax({
                    url: "GetPOJSON",
                    type: "post",
                    data: {'poid': poid},
                    cache: false,
                    success: function (list) {
                      
                         if (list != null && list.length > 0) {
                    list.forEach((item) => {
                         var index = $("#tbBooks").children("tr").length;
                        var Item = "<td><label style='font-weight: 200;'>" + item.itemname + "</label><input type='hidden' value=" + item.itemid + " id='txtItem" + index + "' name='PoItem[" + index + "].itemid'></td>";
                        var Qc = "<td><label style='font-weight: 200;'>" + item.qc + "</label><input type='hidden' value=" + item.qc + " id='txtqc" + index + "' name='PoItem[" + index + "].qc'></td>";
                        var Qt = "<td><label style='font-weight: 200;'>" + item.qty + "</label></td>";
                         var Unit = "<td><label style='font-weight: 200;'>" + item.unit + "</label></td>";
var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='PoItem[" + index + "].Quantity'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 100px;text-align:right' type='text' value='0'  onkeyup = 'changeQty(this," + index + ")'/></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>"  + Item + Qc + Qt +  Unit  + Quantity + "</tr>";
        $("#tbBooks").append(newRow);

});

                }


                    },
                    error: function () {
                        debugger;
                        alert("Please Select Supplier");
                    }
                });
}



            function PopulateDropDown(dropDownId, list) {
                 //alert(list);
                $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
                if (list != null && list.length > 0) {
                    $(dropDownId).removeAttr("disabled");
                    $.each(list, function () {
                        $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
                    });
                }
                $(dropDownId).trigger("liszt:updated");
            }
           
     </script>