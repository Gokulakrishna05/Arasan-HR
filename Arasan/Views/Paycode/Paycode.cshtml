@model Arasan.Models.Paycode

@{
    ViewData["Title"] = "Paycode";

}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>

<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>



<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a href="@Url.Action("ListPaycode", "Paycode")">Paycode</a> </li>
            <li class="active"> <strong> Paycode </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">

                    <hr>
                    @using (Html.BeginForm("Paycode", "Paycode", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>

                            @* <div class="row">
                        <div class="col-lg-3"></div>
                        <div class="col-md-6">
                        <div class="form-group">

                        <label for="inputName3" class="col-sm-4 control-label">Item Category<label class="mandatory">*</label></label>
                        <div class="col-sm-8">
                        @Html.DropDownListFor(C => C.ItemCat, Model.catlst,"--Please Select---", new { @id = "ddlItemCat", @Class = "form-control _select", @TabIndex = 1 }) <br/>

                        </div>
                        </div>
                        </div>
                        </div>*@
                            <div class="row">
                                <div class="col-lg-3"></div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                      <div class="col-sm-8">

                                        <br>  <label for="inputName3" class="col-sm-4 control-label">Set Up Date<label class="mandatory">*</label></label>
                                          <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">

                                                @Html.TextBoxFor(C => C.Set, new { @id = "set", @class = "form-control", @TabIndex = 1 })<br />
                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>



                                                </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                           
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                 
                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                 <th>Paycode </th>
                                                <th>Print </th>
                                                <th>Print As </th>
                                                <th>Add/Less </th>
                                                <th>Calculate From </th>
                                                <th>Based On </th>
                                                <th>Formula </th>
                                                <th>Order </th>
                                                <th>Display </th>

                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;

                                                foreach (var item in Model.PayLists.ToList())
                                                {

                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">


                                                        <td>
                                                            @Html.TextBoxFor(o => o.PayLists[i].Paycode, new { @id = "txtPaycode" + i, @class = "form-control", style = "width: 80px;" })
                                                        </td>
                                                        <td>
                                                            @Html.RadioButtonFor(C => C.PayLists[i].Print, "Y", new { @TabIndex = 2 })
                                                            <label id="mt-radio">Yes</label>
                                                            @Html.RadioButtonFor(C => C.PayLists[i].Print, "N", new { @TabIndex = 3 })
                                                            <label id="mt-radio">No</label>

                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.PayLists[i].PrintAs, new { @id = "txtPrintAs" + i, @class = "form-control", style = "width: 80px;" })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.PayLists[i].Addorless, Model.PayLists[i].Less, " -- Select -- ", new { @id = "Addorless" + i, @Class = "form-control _select newcss", style = "width: 100px;", @TabIndex = 1 })

                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(o => o.PayLists[i].CalculateFrom, Model.PayLists[i].callst, " -- Select -- ", new { @id = "CalculateFrom" + i, @Class = "form-control _select newcss", style = "width: 100px;", @TabIndex = 1 })
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(o => o.PayLists[i].BasedOn, new { @id = "txtBasedOn" + i, @class = "form-control", style = "width: 80px;" })
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(o => o.PayLists[i].Formula, new { @id = "txtFormula" + i, @class = "form-control", style = "width: 80px;" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.PayLists[i].Sno, new { @id = "txtOrder" + i, @class = "form-control", style = "width: 80px;" })
                                                        </td>
                                                        <td>
                                                            @Html.RadioButtonFor(C => C.PayLists[i].Display, "Y", new { @TabIndex = 2 })
                                                            <label id="mt-radio">Yes</label>
                                                            @Html.RadioButtonFor(C => C.PayLists[i].Display, "N", new { @TabIndex = 3 })
                                                            <label id="mt-radio">No</label>

                                                        </td>
                                                         <td>
                                                                                           @Html.HiddenFor(o => o.PayLists[i].Isvalid, new { @id = "Isvalid" + i })
                                                                                    <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Sublst.Index" type="hidden" value="@(i)" />
                                                                                </td>
                                                     </tr>

                                                    i = i + 1; 
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-lg-8"></div>
                                <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                                <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListPaycode", "Paycode")'">Cancel</button>

                            </div>

                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('.to_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0

    });
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        endDate: new Date(),
        forceParse: 0
    }).on('changeDate', function (selected) {
        var minDate = new Date(selected.date.valueOf());
        $('.to_date').datetimepicker('setStartDate', minDate);

    });
</script>

<script>

    $(function () {
        $('._select').select2();
    });
   

    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;



            if (document.getElementById("txtItemGroups").value == "" || document.getElementById("txtItemGroups").value == 0) {
                isValid = false;
                $(txtItemGroups).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Item Group");
                return false;
            }
            else {
                $(txtItemGroups).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtItemGroupDescription").value == "" || document.getElementById("txtItemGroupDescription").value == 0) {
                isValid = false;
                $(txtItemGroupDescription).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Description");
                return false;
            }
            else {
                $(txtItemGroupDescription).css({
                    "border": "",
                    "background": ""
                });
            }


            if (isValid == false)
                e.preventDefault();

        });

    });

  
    function AppendRow(opt, remopt) {
        var index = $("#tbBooks").children("tr").length;




        var paycode = "<td><input class='form-control' id='txtPaycode" + index + "' name='Sublst[" + index + "].Paycode'  style='width: 80px;' type='text'   /></td>";
        var print = "<td>  <div class='input-group'><input id='txtPrint" + index + "' name='Sublst[" + index + "].Print' type='radio' value='Y'/>  <label id='mt-radio'>Yes</label><input id='Active" + index + "' name='Sublst[" + index + "].Print' type='radio' value='N' checked/>  <label id='mt-radio'>No</label><div></td>";
        var printas = "<td><input class='form-control' id='txtPrintAs" + index + "' name='Sublst[" + index + "].PrintAs'  style='width: 80px;' type='text'  /></td>";


        var addorless = "<td><select style = 'width: 100px;' class='form-control _select newcss' id='Addorless" + index + "' name='Sublst[" + index + "].Addorless'><option value=''>-- Select --</option>" + opt + "</select></td>";
        var calculatefrom = "<td><select style = 'width: 100px;' class='form-control _select newcss' id='CalculateFrom" + index + "' name='Sublst[" + index + "].CalculateFrom'><option value=''>-- Select --</option>" + remopt + "</select></td>";


        var formula = "<td><input class='form-control' id='txtFormula" + index + "' name='Sublst[" + index + "].Formula' value ='ONLY WORKINGDAYS' style='width: 80px;' type='text'  /></td>";
        var basedon = "<td><input class='form-control' id='txtBasedOn" + index + "' name='Sublst[" + index + "].BasedOn'   style='width: 80px;' type='text'  /></td>";

        var order = "<td><input class='form-control' id='txtOrder" + index + "' name='Sublst[" + index + "].Order'  style='width: 80px;' type='text'  /></td>";


        var display = "<td>  <div class='input-group'><input id='Display" + index + "' name='Sublst[" + index + "].Active' type='radio' value='Y'/>  <label id='mt-radio'>Yes</label><input id='Display" + index + "' name='Sublst[" + index + "].Display' type='radio' value='N' checked/>  <label id='mt-radio'>No</label><div></td>";
        var remove = "<td><input id='Isvalid" + index + "' name='Sublst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='Sublst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + paycode + print + printas + addorless + calculatefrom + formula + basedon + order + display + remove + "</tr>";

        $("#tbBooks").append(newRow);
        $(".chosen-select").chosen();

        $(function () {
            $('._select').select2();
        });

    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function AddRow() {
        var opt = "";
        var remopt = "";

        $.ajax({
            type: "POST",
            url: 'GetPaycodeJSON',
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                $.ajax({
                    type: "POST",
                    url: 'GetPaycodesJSON',
                    success: function (data) {
                        $.each(data, function () {
                            remopt += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                        AppendRow(opt, remopt);
                    }
                })

            }
        })
    }
</script>
