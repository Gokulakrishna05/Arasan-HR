@model Arasan.Models.PaymentVoucher
@{
    ViewData["Title"] = "Payment Voucher";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<script type="text/javascript">
    @if (TempData["notice"] != null)
    {
        @:alert('@TempData["notice"]');
    }
</script>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Account</a> </li>
            <li class="active"> <strong>  Payment Voucher</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> Payment Voucher </h5>
                    <hr>
                    @using (Html.BeginForm("PaymentVoucher", "PaymentVoucher", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                @* <div class="col-md-6">
                            <div class="form-group">

                            <label for="inputName3" class="col-sm-4 control-label">Branch <label class="mandatory">*</label></label>
                            <div class="col-sm-8">
                            @Html.HiddenFor(C => C.ID)
                            @Html.DropDownListFor(C => C.Branch, Model.Brlst," -- Please Select -- ", new { @id = "ddlBranch", @Class = "form-control _select", @TabIndex = 1 })<br />
                            </div>
                            </div>
                            </div>
                            *@


                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Loclst," -- Please Select -- ", new { @id = "ddllocation", @Class = "form-control _select", @TabIndex = 4 } )
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.Branch)
                                            @*@Html.HiddenFor(C => C.Branch ,new {@id="hdbranch"})*@
                                            @*@Html.HiddenFor(C => C.Entered  )*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Supplier<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                           
                                            @Html.TextBoxFor(C => C.Supplier, new { @id = "txtSupplier", @class = "form-control", @TabIndex = 1,@readonly="readonly"    })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">


                                         <br /> <label for="inputName3" class="col-sm-4 control-label">Reference No<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DisplayFor(C => C.RefNo, new { @id = "txtRefNo", @class = "form-control", @TabIndex = 1 ,@readonly=true  })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                         <br /> <label for="inputName3" class="col-sm-4 control-label">Reference Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.RefDate, new { @id = "txtRefDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                           
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />     <label for="inputName3" class="col-sm-4 control-label">Voucher No<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.VoucherNo, new { @id = "txtVoucherNo", @class = "form-control", @TabIndex = 1 ,@readonly=true  })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Voucher Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.Vdate, new { @id = "txtVdate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                       
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Voucher Type<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.VType, new { @id = "txtVType", @class = "form-control", @TabIndex = 1 ,@readonly="readonly"  })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Payment Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            <div class="input-group">

                                                @Html.RadioButtonFor(C => C.PType, "CASH", new { @id = "txtPType",@TabIndex = 2 })
                                                <label id="mt-radio">CASH</label>
                                                @Html.RadioButtonFor(C => C.PType, "BANK", new { @id = "txtPType",@TabIndex = 3 })
                                                <label id="mt-radio">BANK</label>


                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                    
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Currency<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Currency, Model.Curlst," -- Please Select -- ", new { @id = "ddlCur", @Class = "form-control _select", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Exchange Rate<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ExRate, new { @id = "txtExRate", @class = "form-control", @TabIndex = 1   })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Total Amount<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.TotalAmount, new { @id = "txtTotalAmount", @class = "form-control", @TabIndex = 1 , onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly="readonly"    })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Requested Amount<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ReqAmount, new { @id = "txtReqAmount", @class = "form-control", @TabIndex = 1 ,@readonly="readonly"  })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Total Claim Amount<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ClaimAmount, new { @id = "txtClaimAmount", @class = "form-control", @TabIndex = 1 ,@readonly="readonly"  })
                                        </div>
                                    </div>
                                </div>
                            </div>
                           
                            <div style="height:30px;"></div>
                           @* <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>*@
                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th> Account Name </th>
                                                <th> Account Type </th>
                                                <th> Depit Amount </th>
                                                <th> Credit Amount </th>

                                            </tr>

                                        </thead>
                                        <tbody id="tbBooks">

                                            @{

                                                int i = 0;
                                                foreach (var item in Model.VoucherLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                       <td>
                                                            @Html.TextBoxFor(o => o.VoucherLst[i].Account, new { @class = "form-control", @id = "txtAccount" + i, style = "width: 250px;" ,@readonly = "readonly" })
                                                        </td>
                                                         
                                                        <td>
                                                            @Html.RadioButtonFor(o => o.VoucherLst[i].Credit, "Dr", new { @id = "txtCredit",@TabIndex = 2/*,@onchange="changeentry(this.value," + i + ")"*/ })
                                                            <label id="mt-radio">Dr</label>
                                                            @Html.RadioButtonFor(o => o.VoucherLst[i].Credit, "Cr", new { @id = "txtCredit",@TabIndex = 3/*,@onchange="changeentry(this.value," + i + ")"*/ })
                                                            <label id="mt-radio">Cr</label>
                                                        </td>
                                                        <td> @Html.TextBoxFor(o => o.VoucherLst[i].DepitAmount, new { @id = "txtDepitAmount" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right" , @onkeyup = "changeDeAmount(this," + i + ")",@readonly = "readonly"})</td>

                                                        <td>@Html.TextBoxFor(o => o.VoucherLst[i].CreditAmount, new { @id = "txtCreditAmount" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right", @onkeyup = "changeCrAmount(this," + i + ")",@readonly = "readonly"})</td>
                                                       
                                                    </tr>
                                                    //<tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">


                                                    //    <td>
                                                    //        @Html.DropDownListFor(o => o.VoucherLst[i].Acc, Model.VoucherLst[i].Acclst, "Please Select", new { @class = "form-control _select newcss", @id = "txtAccount" + i, style = "width: 250px;" })
                                                    //    </td>
                                                    //    <td>
                                                    //        @Html.RadioButtonFor(o => o.VoucherLst[i].Cre, "Dr", new { @id = "txtCredit",@TabIndex = 2,@onchange="changeentry(this.value," + i + ")",@readonly = "readonly" })
                                                    //        <label id="mt-radio">Dr</label>
                                                    //        @Html.RadioButtonFor(o => o.VoucherLst[i].Cre, "Cr", new { @id = "txtCredit",@TabIndex = 3,@onchange="changeentry(this.value," + i + ")" ,@readonly = "readonly"})
                                                    //        <label id="mt-radio">Cr</label>
                                                    //    </td>
                                                    //    <td> @Html.TextBoxFor(o => o.VoucherLst[i].DepAmount, new { @id = "txtDepitAmount" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right", @onkeyup = "changeDeAmount(this," + i + ")",@readonly = "readonly" })</td>

                                                    //    <td>@Html.TextBoxFor(o => o.VoucherLst[i].CreAmount, new { @id = "txtCreditAmount" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right", @onkeyup = "changeCrAmount(this," + i + ")"})</td>



                                                    //</tr>

                                                    i = i + 1;
                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Total Depit Amount<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.TotalDeAmount, new { @id = "txtTotalDeAmount", @class = "form-control", @TabIndex = 1 , onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly="readonly"    })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />    <label for="inputName3" class="col-sm-4 control-label">Total Credit Amount<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.TotalCrAmount, new { @id = "txtTotalCrAmount", @class = "form-control", @TabIndex = 1 , onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly="readonly", @onkeyup = "totAmount(this)"  })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">

                                       <br />   <label for="inputName3" class="col-sm-2 control-label">Amount In words<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Amtinwords ,new { @id = "txtAinWords", @Class = "form-control", @TabIndex = 1 ,@readonly=true}) <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-2 control-label">Voucher Memo<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Vmemo ,new { @id = "txtVmemo", @Class = "form-control", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="height:30px;"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListPaymentVoucher", "PaymentVoucher")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    function changeDeAmount(_this, i) {
        try {

            var j = 0;
            var qty = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    qty = $(this).find('#txtDepitAmount' + j.toString()).val();
                    if (qty == "")
                        qty = 0;

                    tot += eval(qty);
                }
                j += 1;
            });
            document.getElementById("txtTotalDeAmount").value = tot.toFixed(2);
            //document.getElementById("txtAmount").value = withDecimal(tot.toFixed(2));
            var dtot = document.getElementById("txtTotalCrAmount").value;
            if (dtot == "")
                dtot = 0;
            var totclaim = eval(tot) - eval(dtot);
            document.getElementById("txtClaimAmount").value = totclaim.toFixed(2);
            
        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function changeCrAmount(_this, i) {
        try {

            var j = 0;
            var qty = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    qty = $(this).find('#txtCreditAmount' + j.toString()).val();
                    if (qty == "")
                        qty = 0;

                    tot += eval(qty);
                }
                j += 1;
            });
            document.getElementById("txtTotalCrAmount").value = tot.toFixed(2);
            var dtot = document.getElementById("txtTotalDeAmount").value;
            if (dtot == "")
                dtot = 0;
            var totclaim = eval(dtot) - eval(tot);
            document.getElementById("txtClaimAmount").value = totclaim.toFixed(2);
        }
        catch (ex) {
            alert(ex.message);
        }
    }
    //function totAmount(_this) {
    //    try {

    //        var j = 0;
    //        var dqty = 0;
    //        var cqty = 0;
    //        var tot = 0;
    //        $('tr.chkitemlst').each(function () {
    //            if ($(this).css('display') !== 'none') {
    //                dqty = $(this).find('#txtDepitAmount' + j.toString()).val();
    //                cqty = $(this).find('#txtCreditAmount' + j.toString()).val();
    //                //if (qty == "")
    //                //    qty = 0;

    //                tot = dqty - cqty;
    //            }

    //        });
    //        document.getElementById("txtTotalAmount").value = tot.toFixed(2);
           
    //    }
    //    catch (ex) {
    //        alert(ex.message);
    //    }
    //}
    $(function () {
        $('._select').select2();
    });

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,

        forceParse: 0
    });
    $(".chosen-select").chosen();
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;

            if (document.getElementById("ddllocation").value == "" || document.getElementById("ddllocation").value == 0) {
                isValid = false;
                $(ddllocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Location ");
                return false; Center
            }
            else {
                $(ddllocation).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtVoucherNo").value == "") {
                isValid = false;
                $(txtVoucherNo).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Voucher No");
                return false;
            }
            else {
                $(txtVoucherNo).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtPType").value == "") {
                isValid = false;
                $(txtPType).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Choose Payment Type");
                return false;
            }
            else {
                $(txtPType).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtVdate").value == "") {
                isValid = false;
                $(txtVdate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Voucher Date");
                return false;
            }
            else {
                $(txtVdate).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtRefDate").value == "") {
                isValid = false;
                $(txtRefDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Reference Date");
                return false;
            }
            else {
                $(txtRefDate).css({
                    "border": "",
                    "background": ""
                });
            }

            var reqamt = document.getElementById("txtReqAmount").value;
            var claimamt = document.getElementById("txtClaimAmount").value;

            if (eval(reqamt) != eval(claimamt)) {
                alert("Requested Amount and Calim amount does not match.");

                $(txtClaimAmount).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                return false;
            }
        });

    });
     $(document).ready(function () 
     {
            $('#btnSave').click(function (e) {
                var depit = document.getElementById("txtTotalDeAmount");
                var credit = document.getElementById("txtTotalCrAmount");
                var req = document.getElementById("txtReqAmount");
               var tot= depit-credit;
               if (req!=tot)
               {
                    alert("Enter Correct Amount")
               }

            });

     });
     
        //function AddRow() {
        //    var opt = "";
        //    $.ajax({
        //        type: "POST",
        //        url: 'GetAccountJSON',
        //        success: function (data) {

        //            $.each(data, function () {
        //                opt += "<option value=" + this.value + ">" + this.text + "</option>";
        //            });
        //            AppendRow(opt);
        //        }
        //    })
        //}
    //function AppendRow(opt) {
    //    var index = $("#tbBooks").children("tr").length;
    //    var Account = "<td><select style = 'width: 250px;' class='form-control _select newcss' id='ddlAccount" + index + "' name='VoucherLst[" + index + "].Account' >" + opt + "</select></td>";
    //    var Type = "<td><input id='ddlCredit" + index + "' name='VoucherLst[" + index + "].Credit' onchange='changeentry(this.value," + index + ")' type='radio' value='Dr'> <label id='mt-radio'>Dr</label><input  id='ddlCredit" + index + "' name='VoucherLst[" + index + "].Credit' onchange='changeentry(this.value," + index + ")' type = 'radio' value='Cr'> <label id='mt-radio'>Cr</label></td> ";


    //    var depit = "<td><input class='form-control' id='txtDepitAmount" + index + "' name='VoucherLst[" + index + "].DepitAmount'  style='width: 100px;text-align:right' type='text'  onkeydown = 'return isNumeric2(event.keyCode,this.value)' value='0' /></td>";
    //    var credit = "<td><input class='form-control' id='txtCreditAmount" + index + "' name='VoucherLst[" + index + "].VoucherLst'  style='width: 100px;text-align:right' type='text' onkeydown = 'return isNumeric2(event.keyCode,this.value)'  value='0' /></td>";

    //    var removeCell = "<td><input id='Isvalid" + index + "' name='VoucherLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='DrumDetlst.Index' type='hidden' value='" + index + "'  /></td>";

    //    var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Account + Type + depit + credit + removeCell + "</tr>";
    //    //alert(Packing);
    //    $("#tbBooks").append(newRow);

    //    $('._select').select2();
    //}
    //function removeRow(id) {
    //    var table = document.getElementById("dataTable");
    //    var rowCount = table.rows.length;
    //    var row = document.getElementById('trBook' + id);
    //    var j = 0;
    //    $('tr.chkitemlst').each(function () {
    //        if ($(this).css('display') !== 'none') {
    //            j += 1;
    //        }
    //    });
    //    if (j > 1) {
    //        row.style.display = "none";
    //        document.getElementById('Isvalid' + id).value = "N";
    //    }
    //    else {
    //        alert("Cannot delete all the rows.")
    //    }
    //    var j = 0;
    //    var qty = 0;
    //    var tot = 0;
    //    $('tr.chkitemlst').each(function () {
    //        if ($(this).css('display') !== 'none') {
    //            qty = $(this).find('#txtDepitAmount' + j.toString()).val();
    //            if (qty == "")
    //                qty = 0;

    //            tot += eval(qty);
    //        }
    //        j += 1;
    //    });
    //    document.getElementById("txtTotalDeAmount").value = tot.toFixed(2);
    //    var k = 0;
    //    var cqty = 0;
    //    var dtot = 0;
    //    $('tr.chkitemlst').each(function () {
    //        if ($(this).css('display') !== 'none') {
    //            cqty = $(this).find('#txtCreditAmount' + k.toString()).val();
    //            if (cqty == "")
    //                cqty = 0;

    //            dtot += eval(cqty);
    //        }
    //        k += 1;
    //    });
    //    document.getElementById("txtTotalCrAmount").value = dtot.toFixed(2);
    //    var totclaim = eval(tot) - eval(dtot);
    //    document.getElementById("txtClaimAmount").value = totclaim.toFixed(2);
    //}
         function convertNumberToWords(amount) {
        var words = new Array();
        words[0] = '';
        words[1] = 'One';
        words[2] = 'Two';
        words[3] = 'Three';
        words[4] = 'Four';
        words[5] = 'Five';
        words[6] = 'Six';
        words[7] = 'Seven';
        words[8] = 'Eight';
        words[9] = 'Nine';
        words[10] = 'Ten';
        words[11] = 'Eleven';
        words[12] = 'Twelve';
        words[13] = 'Thirteen';
        words[14] = 'Fourteen';
        words[15] = 'Fifteen';
        words[16] = 'Sixteen';
        words[17] = 'Seventeen';
        words[18] = 'Eighteen';
        words[19] = 'Nineteen';
        words[20] = 'Twenty';
        words[30] = 'Thirty';
        words[40] = 'Forty';
        words[50] = 'Fifty';
        words[60] = 'Sixty';
        words[70] = 'Seventy';
        words[80] = 'Eighty';
        words[90] = 'Ninety';
        amount = amount.toString();
        var atemp = amount.split(".");
        var number = atemp[0].split(",").join("");
        var n_length = number.length;
        var words_string = "";
        if (n_length <= 9) {
            var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var received_n_array = new Array();
            for (var i = 0; i < n_length; i++) {
                received_n_array[i] = number.substr(i, 1);
            }
            for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
                n_array[i] = received_n_array[j];
            }
            for (var i = 0, j = 1; i < 9; i++, j++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    if (n_array[i] == 1) {
                        n_array[j] = 10 + parseInt(n_array[j]);
                        n_array[i] = 0;
                    }
                }
            }
            value = "";
            for (var i = 0; i < 9; i++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    value = n_array[i] * 10;
                } else {
                    value = n_array[i];
                }
                if (value != 0) {
                    words_string += words[value] + " ";
                }
                if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Crores ";
                }
                if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Lakhs ";
                }
                if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Thousand ";
                }
                if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                    words_string += "Hundred and ";
                } else if (i == 6 && value != 0) {
                    words_string += "Hundred ";
                }
            }
            words_string = words_string.split("  ").join(" ");
        }
        return words_string;
    }
    function withDecimal(n) {
        var nums = n.toString().split('.')
        var whole = convertNumberToWords(nums[0])
        if (nums.length == 2) {
            var fraction = convertNumberToWords(nums[1])
            return whole + ' ' + fraction;
        } else {
            return whole;
        }
    }
    function changeentry(typeid, i) {
        if (typeid == "Dr") {
            document.getElementById("txtCreditAmount" + i).readOnly = true;
            document.getElementById("txtDepitAmount" + i).readOnly = false;
        }

        else {
            document.getElementById("txtDepitAmount" + i).readOnly = true;
            document.getElementById("txtCreditAmount" + i).readOnly = false;
        }
    }
</script>