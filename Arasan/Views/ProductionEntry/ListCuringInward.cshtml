@model Arasan.Models.ProductionEntry

@{
    ViewData["Title"] = "Curing Inward";
}
  <partial name="JqxGridPartial" />

    
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Production</a> </li>
            <li class="active"> <strong>Curing Inward</strong> </li>
        </ol>
    </div>
</div>

 <script type="text/javascript">
        $(document).ready(function () {
            var source =
            {
                url: "/ProductionEntry/MyListPInwardgrid",
               datatype: "json",
                updaterow: function (rowid, rowdata) {
                  // synchronize with the server - send update command
              },
                datafields: [
                     { name: 'inwardid', type: 'int' },
                    { name: 'docid', type: 'string' },
                    { name: 'docdate', type: 'string' },
                      { name: 'branch', type: 'string' }
                ],
                id: 'inwardid',
            };
              var employeesAdapter = new $.jqx.dataAdapter(source,
                { contentType: 'application/json; charset=utf-8' }, {
                    loadComplete: function () {

                    }
                }
            );
            //alert(JSON.stringify(employeesAdapter));
                        
            var ordersSource =
            {
                 url: "/ProductionEntry/ListInwardItemgrid",
                datafields: [
                    { name: 'inwdetailid', type: 'int' },
                    { name: 'inwardid', type: 'int' },
                    { name: 'itemid', type: 'string' },
                    { name: 'drumno', type: 'string' },
                    { name: 'batchno', type: 'float' },
                    { name: 'batchqty', type: 'string' },
                    { name: 'duedate', type: 'string' }
                ],
               
                datatype: "json",
               
                async: false
            };
              var ordersDataAdapter = new $.jqx.dataAdapter(ordersSource,
                { contentType: 'application/json; charset=utf-8' }, { autoBind: true }
                );
              ordersDataAdapter.dataBind();
            //var ordersDataAdapter2 = new $.jqx.dataAdapter(ordersSource, { autoBind: true });
            var orders = ordersDataAdapter.records;

            console.log(ordersDataAdapter);
            
            var nestedGrids = new Array();
            // create nested grid.
            var initrowdetails = function (index, parentElement, gridElement, record) {
                var id = record.uid.toString();
                var grid = $($(parentElement).children()[0]);
                nestedGrids[index] = grid;
                var filtergroup = new $.jqx.filter();
                var filter_or_operator = 1;
                var filtervalue = id;
                var filtercondition = 'equal';
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                // fill the orders depending on the id.
                var ordersbyid = [];
                
                for (var m = 0; m < orders.length; m++) {
                    var result = filter.evaluate(orders[m]["inwardid"]);
                 
                    if (result)
                        ordersbyid.push(orders[m]);
                }
               
                var orderssource = { datafields: [
                    { name: 'inwardid', type: 'int' },
                    { name: 'itemid', type: 'string' },
                    { name: 'drumno', type: 'string' },
                    { name: 'batchno', type: 'int' },
                    { name: 'batchqty', type: 'string' },
                    { name: 'duedate', type: 'string' }
                ],
                    id: 'inwdetailid',
                    localdata: ordersbyid
                }
                var nestedGridAdapter = new $.jqx.dataAdapter(orderssource);
               
                if (grid != null) {
                    grid.jqxGrid({
                        source: nestedGridAdapter, width: 780, height:150,
                        columns: [
                          { text: 'Product Name', datafield: 'itemid' , width: 150},
                          { text: 'Drum No', datafield: 'drumno', width: 80},
                          { text: 'Batch No', datafield: 'batchno' , width: 350},
                          { text: 'Batch Qty', datafield: 'batchqty', width: 70 },
                          { text: 'Due Date', datafield: 'duedate' , width: 100}
                       ]
                    });
                }
            }
             var renderer = function (row, column, value) {
                 
                return '<span style="margin-left: 4px; margin-top: 9px; float: left; ">' + value + '</span>';
            }
            //alert(initrowdetails);
            // creage grid
            $("#grid").jqxGrid(
                {
                    width: getWidth('Grid'),
                    height: 365,
                    source: source,
                    pageable: true,
                    filterable: true,
                    autoheight: true,
                    sortable: true,
                    rowdetails: true,
                    rowsheight: 35,
                    initrowdetails: initrowdetails,
                    rowdetailstemplate: { rowdetails: "<div id='grid' style='margin: 10px;'></div>", rowdetailsheight: 220, rowdetailshidden: true },
                    ready: function() {
                        $("#grid").jqxGrid('showrowdetails', 1);
                    },
                    columns: [
                    
                    { text: 'Branch', datafield: 'branch', width: 300 },
                      { text: 'Doc ID', datafield: 'docid', width: 300 },
                      { text: 'Doc Date', datafield: 'docdate', width: 230 }
                  ]
            });
        });
    </script>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                  
                    <form>
                      @*   <div class="row">
                             <div class="col-md-12 "> 
                                   <div class=" textalignright">
                                    <a href="@Url.Action("Purchase_Indent", "PurchaseIndent")" class="btn  btn-round btn-primary" style="float: right; color:white;">Add Purchase Indent</a>
                                     <br>
                                </div>
                       
                       
                        </div>
                        </div>*@
                        <div class="row">

                             <div class="col-md-2 "> </div>
                            <div class="col-md-10 "> 
                                <div id="grid">
    </div>

                            </div>
                           
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
