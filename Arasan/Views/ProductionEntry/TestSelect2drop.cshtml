@model Arasan.Models.ProductionEntry
<!DOCTYPE html>
<html>
<head>
    @*<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css" />*@
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.4/select2.min.css" />
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-css/1.4.6/select2-bootstrap.min.css" />
    @* <link rel="stylesheet" href="style.css" />*@
</head>
<body>
    <div class="container">
        <div class="page-header">
            <h1>select2 with pagination</h1>
            <p>for improved performance with large data sets (20 000 items)</p>
        </div>
        <input id="test" style="width:100%;" placeholder="type a number, scroll for more results"  />

    </div>
    <div>
        @Html.TextBoxFor(C => C.ProdLogId, new { @id = "ddlProdLogId", @Class = "form-control _select", @TabIndex = 1})
    </div>
    <!--[if lt IE 9]>
     <script type="text/javascript" src='//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js'></script>
    <![endif]-->
    <!--[if gte IE 9]><!-->
   @* <script type="text/javascript" src='//ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js'></script>*@
    <!--<![endif]-->
    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/4.15.0/lodash.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/select2/3.5.4/select2.min.js"></script>
@*    <script src="script.js"></script>*@
</body>
</html>
<script type="text/javascript">
    function shuffle(str) {
        return str
            .split('')
            .sort(function () {
                return 0.5 - Math.random();
            })
            .join('');
    }

    // For demonstration purposes we first make
    // a huge array of demo data (20 000 items)
    // HEADS UP; for the _.map function i use underscore (actually lo-dash) here
    function mockData() {
        return _.map(_.range(1, 20000), function (i) {
            return {
                id: i,
                text: shuffle('te ststr ing to shuffle') + ' ' + i,
            };
        });
    }
    (function () {
        // init select 2
        $('#test').select2({
            data: mockData(),
            placeholder: 'search',
           
            // query with pagination
            query: function (q) {
                var pageSize,
                    results,
                    that = this;
                pageSize = 20; // or whatever pagesize
                results = [];
                if (q.term && q.term !== '') {
                    // HEADS UP; for the _.filter function i use underscore (actually lo-dash) here
                    results = _.filter(that.data, function (e) {
                        return e.text.toUpperCase().indexOf(q.term.toUpperCase()) >= 0;
                    });
                } else if (q.term === '') {
                    results = that.data;
                }
                q.callback({
                    results: results.slice((q.page - 1) * pageSize, q.page * pageSize),
                    more: results.length >= q.page * pageSize,
                });
            },
        });

    //    $("#ddlProdLogId").select2({
    //    ajax: {
    //            url: 'GetProdLog',
    //            dataType: 'json',
    //                delay: 250,
    //                    data: function (params) {
    //                        return {
    //                            title: params.term,
    //                            page: params.page,
    //                            size: 20
    //                        };
    //                    },
    //        processResults: function (data, params) {
    //            params.page = params.page - 1 || 0;
                   
    //            return {
    //                        results: $.map(data, function (item)  {
    //                    return {
    //                        id: item.value,
    //                        text: item.text
    //                    }
    //                }),
    //                pagination: {
    //                    more: (params.page * 20) < data.totalElements
    //                }
    //            };
    //        },
    //        cache: true
    //    }
    //});
            //$("#ddlProdLogId").select2({
            //    minimumInputLength: 3,
            //    allowClear: true,
            //    placeholder: {
            //        id: -1,
            //        text: 'Enter the 3-4 user id.',
            //    },
            //    ajax: {
            //    type: 'GET',
            //        url: 'GetProdLog',
            //        contentType: 'application/json; charset=utf-8',
            //        async: false,
            //        dataType: 'json',
            //        data: function (params) {
            //            return "{'searchFilter':'" + (params.term || '') + "','searchPage':'" + (params.page || 1) + "'}";
            //        },

            //        processResults: function (res, params) {
            //            var jsonData = JSON.parse(res.d);
            //            params.page = params.page || 1;
            //            var data = { more: (jsonData[0] != undefined ? jsonData[0].MoreStatus : false), results: [] }, i;
            //            for (i = 0; i < jsonData.length; i++) {
            //                data.results.push({ id: jsonData[i].value, text: jsonData[i].text });
            //            }

            //            return {
            //                results: data.results,
            //                pagination: {
            //                    more: data.more,
            //                }
            //            };
            //        }
            //    }
            //});

       
        $("#ddlProdLogId").select2({
            minimumInputLength: 2,
            tags: [],
            ajax: {
                url: 'GetProdLog',
                dataType: 'json',
                type: "GET",
                quietMillis: 50,
                data: function (term) {
                    return {
                        term: term
                    };
                },
                results: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.value
                            }
                        })
                    };
                }
            }
        });


    })();

    var CompanypageSize = 10;

    function initCompanies() {
        var defaultTxtOnInit = 'a';
        $("#ddlProdLogId").select2({
            allowClear: true,
            ajax: {
                url: "GetProdLog",
                dataType: 'json',
                delay: 250,
                global: false,
                data: function (params) {
                    params.page = params.page || 1;
                    return {
                        keyword: params.term ? params.term : defaultTxtOnInit,
                        pageSize: CompanypageSize,
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    params.page = params.page || 1;
                    return {
                        results: data.result,
                        pagination: {
                            more: (params.page * CompanypageSize) < data.Counts
                        }
                    };
                },
                cache: true
            },
            placeholder: {
                id: '0', // the value of the option
                text: '--Select Company--'
            },
            width: '100%',
            //minimumInputLength: 3,
        });
    }


    //////////******* Have to initialise in .ready *******///////////////

    $(document).ready(function () {

        //initCompanies();
    });
    </script>