@model Arasan.Models.PurchaseReturn
@{
    ViewData["Title"] = " Purchase Return";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Stores Management</a> </li>
            <li class="active"> <strong> Purchase Return</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Purchase Return</h5>
                    <hr>

                    @using (Html.BeginForm("PurchaseRet", "PurReturn", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">GRN No<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
@*                                            @Html.DropDownListFor(o => o.Grn, Model.POlst, "---Please Select--", new { @class = "form-control _select newcss", @id = "ddlGRN" , onchange = "changeItem(this.value," + 0 + ")" })
*@                                            
   @Html.TextBoxFor(C => C.Grn,new { @id = "txtGrn", @class = "form-control", @TabIndex = "1",@readonly=true})
@Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.Location, new { @id = "txtLocation"})
                                            @Html.HiddenFor(C => C.Branch, new { @id = "txtBranch"})
                                            @Html.HiddenFor(C => C.Supplierid, new { @id = "txtSupplierid"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Party <label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Supplier,new { @id = "txtSupplier", @class = "form-control", @TabIndex = "2",@readonly=true})
                                            @*@Html.DropDownListFor(C => C.Supplier, Model.Suplst, new { @id = "ddlParty", @Class = "form-control _select", @TabIndex = 1 })*@
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group"> 

                                        <br /><label for="inputName3" class="col-sm-4 control-label">P.Return.No<label class="mandatory">*</label></label>
                                        <div class="col-sm-8"> 
                                            @Html.TextBoxFor(C => C.RetNo, new { @id = "txtRetNo", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly=true})
                                            @Html.HiddenFor(C => C.ID) 
                                        </div> 
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">P.Return Date<label class="mandatory">*</label></label>

                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.RetDate, new { @id = "RetDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>

                                    </div>
                                </div>
                            </div>



                            @*
                        <div class="row">
                        <div class="col-md-6">
                        <div class="form-group">

                        <br /><label for="inputName3" class="col-sm-4 control-label">GRN No<label class="Mandatory"></label></label>
                        <div class="col-sm-8">
                        @Html.DropDownListFor(o => o.Grn, Model.POlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlGRN" , onchange = "changeItem(this.value," + 0 + ")" })
                        </div>
                        </div>
                        </div>
                        <div class="col-md-6">
                        <div class="form-group">

                        <br /> <label for="inputName3" class="col-sm-4 control-label">Party <label class="Mandatory"></label></label>
                        <div class="col-sm-8">
                        @Html.DropDownListFor(C => C.party, Model.Partylst, new { @id = "ddlParty", @Class = "form-control _select", @TabIndex = 1 })
                        </div>
                        </div>
                        </div>

                        </div>*@



                                          

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Currency<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
@*                                            @Html.DropDownListFor(C => C.Currency, Model.currlst, new { @id = "ddlCurrency", @Class = "form-control _select", @TabIndex = 1,@readonly="readonly" })
*@                                                                                        @Html.TextBoxFor(C => C.Currency, new { @id = "ddlCurrency", @class = "form-control", @TabIndex = "2",@readOnly="readonly"})

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Exchange Rate<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.ExRate, new { @id = "txtExRate", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly=true})

                                        </div>
                                    </div>
                                </div>


                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Req No<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ReqNo, new { @id = "txtReqNo", @class = "form-control", @TabIndex = "2"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />   <label for="inputName3" class="col-sm-4 control-label">Req Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.ReqDate, new { @id = "ReqDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>


                                    </div>
                                </div>


                            </div>



                           
                                @*<div class="col-md-6">
                            <div class="form-group">

                            <label for="inputName3" class="col-sm-4 control-label">Reason Code<label class="Mandatory"></label></label>
                            <div class="col-sm-8">

                            @Html.TextBoxFor(C => C.ReasonCode, new { @id = "txtReasonCode", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" , @onkeyup = "changeTot(this)"})


                            </div>
                            </div>
                            </div>*@


                                @*<div class="row">
                            @* <div class="col-md-6">
                            <div class="form-group">

                            <label for="inputName3" class="col-sm-4 control-label">Trans Type<label class="Mandatory"></label></label>
                            <div class="col-sm-8">
                            @Html.TextBoxFor(C => C.Trans, new { @id = "txtReason", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" , @onkeyup = "changeTot(this)"})<br />
                            </div>
                            </div>
                            </div>
                            <div class="col-md-6">
                            <div class="form-group">

                            <label for="inputName3" class="col-sm-4 control-label">Tax Template<label class="Mandatory"></label></label>
                            <div class="col-sm-8">

                            @Html.TextBoxFor(C => C.Temp, new { @id = "txtTemp", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" , @onkeyup = "changeTot(this)"})<br />

                            </div>
                            </div>
                            </div>
                            </div>
                        *@ <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Transit LocID<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Trans, Model.Loclst, "---Please Select--", new { @id = "ddlTrans", @Class = "form-control _select", @TabIndex = 4 })
                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Rejected By<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.DropDownListFor(C => C.Rej, Model.assignList,  "---Please Select--",new { @id = "ddlRej", @Class = "form-control _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            @*  <div class="row">
                        <div class="col-md-12">
                        <div class="btn-group">
                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                        </div>
                        </div>
                        </div>*@


                            <div class="row">


                                <div class="col-lg-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">

                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>
                                                <th> Item  </th>
                                                <th>Unit</th>
                                                <th>CF</th>
                                                <th> Qty</th>
                                                <th>Bin ID</th>
                                                <th>Current Stock</th>
                                                <th>Return Qty</th>
                                                <th>Rate</th>
                                                <th>Amount</th>
                                               
                                                <th>Discount</th>
                                                <th>Freight</th>

                                                <th>SGST%</th>
                                                <th>CGST%</th>
                                                <th>IGST%</th>
                                                <th>SGSTAMT</th>
                                                <th>CGSTAMT</th>
                                                <th>IGSTAMT</th>
                                                <th>Total Amount</th>

                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">

                                            @{

                                                int g = 0;

                                                foreach (var item in Model.returnlist.ToList())
                                                {
                                                    <tr id="trBookout@(g)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].itemname, new { @id = "txtItem" + g, @class = "form-control", style = "width: 200px;", @readonly="ReadOnly" })
                                                            @Html.HiddenFor(o => o.returnlist[g].itemid, new { @id = "itemid" + g })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].unit, new { @id = "txtUnit" + g, @class = "form-control", style = "width: 60px;", @readonly="ReadOnly" })
                                                             @Html.HiddenFor(o => o.returnlist[g].unitid, new { @id = "unitid" + g })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].confac, new { @id = "txtConFac" + g, @class = "form-control", style = "width: 50px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].quantity, new { @id = "txtQuantity" + g, @class = "form-control", style = "width: 80px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].binid, new { @id = "txtbinid" + g, @class = "form-control", style = "width: 80px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].stkqty, new { @id = "txtstkqty" + g, @class = "form-control", style = "width: 80px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].rqty, new { @id = "txtrqty" + g, @class = "form-control", style = "width: 80px;", @onkeyup = "changeQty(this," + g + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].rate, new { @id = "txtrate" + g, @class = "form-control", style = "width: 100px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].amount, new { @id = "txtamount" + g, @class = "form-control", style = "width: 100px;", @readonly="ReadOnly" })
                                                        </td>
                                                        
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].discAmount, new { @id = "txtDiscAmount" + g, @class = "form-control", style = "width: 80px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].frigcharge, new { @id = "txtFrigCharge" + g, @class = "form-control", style = "width: 80px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].cgstper, new { @id = "txtCGSTPer" + g, @class = "form-control", style = "width: 70px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].sgstper, new { @id = "txtSGSTPer" + g, @class = "form-control", style = "width: 70px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].igstper, new { @id = "txtIGSTPer" + g, @class = "form-control", style = "width: 70px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].cgstamt, new { @id = "txtCGSTAmt" + g, @class = "form-control", style = "width: 70px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].sgstamt, new { @id = "txtSGSTAmt" + g, @class = "form-control", style = "width: 70px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].igstamt, new { @id = "txtIGSTAmt" + g, @class = "form-control", style = "width: 70px;", @readonly="ReadOnly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.returnlist[g].totalamount, new { @id = "txtTotalAmount" + g, @class = "form-control", style = "width: 100px;", @readonly="ReadOnly" })
                                                        </td>

                                                        <td>
                                                            @Html.HiddenFor(o => o.returnlist[g].Isvalid, new { @id = "Isvalid" + g })
                                                            <img onclick="removeOutRow(@(g));" src="../Images/delete.png" style="cursor:pointer" /> <input name="EnqLst.Index" type="hidden" value="@(g)" />
                                                        </td>
                                                    </tr>

                                                    g = g + 1;

                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>





                            <div style="height:30px;"></div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Packing and Forwarding ( + ) <label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Packingcharges, new { @id = "txtPackingcharges", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Freight Charges ( + ) <label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Frieghtcharge, new { @id = "txtFrieghtcharge", @class = "form-control", @TabIndex = 2, onkeydown = "return isNumeric2(event.keyCode,this.value)"  })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Other Charges ( + )<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Othercharges, new { @id = "txtOthercharges", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)"  })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Round Off <label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Round, new { @id = "txtRound", @class = "form-control", @TabIndex = 2 ,onkeydown = "return isNumeric2(event.keyCode,this.value),@readonly=true" ,@readonly=true})
                                        </div>

                                    </div>
                                </div>
                            </div>
@*
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Other Deductions ( - )<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.otherdeduction, new { @id = "txtotherdeduction", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly=true })
                                        </div>
                                    </div>
                                </div>
                              @*  <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Round Off ( - )<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Roundminus, new { @id = "txtRoundminus", @class = "form-control", @TabIndex = 2 ,onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly=true })
                                        </div>

                                    </div>
                                </div> 
                            </div>
*@
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Gross<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Gross, new { @id = "txtGross", @class = "form-control", @TabIndex = 2 ,onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly=true})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Net<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            <input type="hidden" id="hidnet" />
                                            @Html.TextBoxFor(C => C.Net, new { @id = "txtNet", @class = "form-control", @TabIndex = 2,onkeydown = "return isNumeric2(event.keyCode,this.value)",@readonly=true})
                                        </div>

                                    </div>
                                </div>
                            </div>




                            @*<div class="row">
                        <div class="col-md-12">

                        <div class="tabs-container">
                        <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab-1" data-toggle="tab">Addition Deduction</a></li>


                        </ul>
                        <div class="tab-content">
                        <div class="tab-pane active" id="tab-1">
                        <div class="row">


                        <div class="col-lg-12">
                        <div class="ibox float-e-margins">

                        <!-- / ibox-title -->
                        <div id="demo3" class="ibox-content collapse in">
                        <div class="borderedTable">
                        <div class="table-scrollable">
                        <table class="table table-striped table-hover">
                        <thead>
                        <tr>
                        <th> S. No. </th>
                        <th> Desc </th>
                        <th> Type </th>
                        <th> Account Name </th>
                        <th> Amount </th>
                        <th> Dr/Cr </th>


                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                        <td> 1 </td>

                        <td><input class="form-control" id="inputEmail3" placeholder="Desc" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="Type" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="AccName" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="0" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="" type="text"> </td>

                        </tr>
                        <tr>
                        <td> 2 </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="Desc" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="Type" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="AccName" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="0" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="" type="text"> </td>
                        </tr>
                        <tr>
                        <td> 3 </td>

                        <td><input class="form-control" id="inputEmail3" placeholder="Desc" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="Type" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="AccName" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="0" type="text"> </td>
                        <td><input class="form-control" id="inputEmail3" placeholder="" type="text"> </td>
                        </tr>
                        </tbody>
                        </table>
                        </div>
                        </div>
                        </div>
                        </div>
                        </div>
                        </div>

                        <!-- 1st tab -->
                        </div>
                        </div>
                        </div>
                        </div>
                        </div>*@


                            <div class="row">
                                <div class="col-md-12">


                                    @*   <div class="row">
                                <div class="col-md-6">
                                <div class="form-group">

                                <label for="inputName3" class="col-sm-4 control-label">Gross<label class="Mandatory"></label></label>
                                <div class="col-sm-8">
                                <input class="form-control" id="inputEmail3" placeholder="" type="text"><br />
                                </div>
                                </div>
                                </div>


                                <div class="col-md-6">
                                <div class="form-group">

                                <label for="inputName3" class="col-sm-4 control-label">Net<label class="Mandatory"></label></label>
                                <div class="col-sm-8">
                                <input class="form-control" id="inputEmail3" placeholder="" type="text">
                                </div>
                                </div>
                                </div>
                                </div>*@

                                    @* <div class="row">
                                <div class="col-md-6">
                                <div class="form-group">

                                <label for="inputName3" class="col-sm-4 control-label">Amount in Words<label class="Mandatory"></label></label>
                                <div class="col-sm-8">
                                <input class="form-control" id="inputEmail3" placeholder="" type="text"><br />
                                </div>
                                </div>
                                </div>*@
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br />  <label for="inputName3" class="col-sm-4 control-label">Narration<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control", @TabIndex = 2})
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @*    <div class="row">
                                <div class="col-md-6">
                                <div class="form-group">

                                <label for="inputName3" class="col-sm-4 control-label">Reason<label class="Mandatory"></label></label>
                                <div class="col-sm-8">
                                @Html.TextBoxFor(C => C.Reason, new { @id = "txtReason", @class = "form-control", @TabIndex = 2})<br />
                                </div>
                                </div>
                                </div>
                                </div>*@


                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <br />    <label for="inputName3" class="col-sm-4 control-label">Area ID<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(C => C.Addr, new { @id = "txtAddr", @class = "form-control", @TabIndex = 2})
                                                </div>
                                            </div>
                                        </div>


                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br /> <label for="inputName3" class="col-sm-4 control-label">Address<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.TextAreaFor(C => C.Address, new { @id = "txtAddress", @class = "form-control", @TabIndex = 2})
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">


                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br /> <label for="inputName3" class="col-sm-4 control-label">State<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.DropDownListFor(C => C.State, Model.Satlst, "---Please Select--", new { @id = "ddlState", @Class = "form-control _select", @TabIndex = 1 , @onchange = "changeCity(this.value)"})
                                                    <br />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br /> <label for="inputName3" class="col-sm-4 control-label">City<label class="Mandatory"></label></label>

                                                <div class="col-sm-8">

                                                    @Html.DropDownListFor(C => C.City, Model.Citylst, "---Please Select--", new { @id = "ddlCity", @Class = "form-control _select", @TabIndex = 1 })

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br />  <label for="inputName3" class="col-sm-4 control-label">Pincode<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(C => C.Pin, new { @id = "txtPin", @class = "form-control", @TabIndex = 2})
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <br />  <label for="inputName3" class="col-sm-4 control-label">Phone<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(C => C.Phone, new { @id = "txtPhone", @class = "form-control", @TabIndex = 2})
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @*  <div class="row">
                                <div class="col-md-6">
                                <div class="form-group">

                                <label for="inputName3" class="col-sm-4 control-label">Fax<label class="Mandatory"></label></label>
                                <div class="col-sm-8">
                                <input class="form-control" id="inputEmail3" placeholder="" type="text"><br />
                                </div>
                                </div>
                                </div>*@


                                    <!-- 3rd tab  -->

                                </div>
                            </div>




                            @*<div style="height:30px;"></div>*@
                            <div style="height:30px;"></div>
                            <div class="col-log-8"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListPurchaseReturn", "PurReturn")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
    $("#txtBranch").change(function () {
        var branch = this.value;
        var GRNID = document.getElementById("ddlGRN").value;
        var loc = document.getElementById("ddllocation").value;
        $.ajax({
            url: 'GetStkqty',
            data: { 'grnid': GRNID, 'branch': branch, 'loc': loc },
            type: "post",
            success: function (result) {
                var j = 0;
                $('tr.chkitemlst').each(function () {
                    if ($(this).css('display') !== 'none') {
                        document.getElementById('txtstkqty' + j.toString()).value = result.stkqty;
                    }
                    j += 1;
                });


            },
            error: function () {
                debugger;
                alert("Please Select State");
            }
        });
    });
    $("#txtLocation").change(function () {
        var loc = this.value;
        var GRNID = document.getElementById("ddlGRN").value;
        var branch = document.getElementById("ddlBranch").value;
        $.ajax({
            url: 'GetStkqty',
            data: { 'grnid': GRNID, 'branch': branch, 'loc': loc },
            type: "post",
            success: function (result) {
                var j = 0;
                $('tr.chkitemlst').each(function () {
                    if ($(this).css('display') !== 'none') {
                        document.getElementById('txtstkqty' + j.toString()).value = result.stkqty;
                    }
                    j += 1;
                });
            },
            error: function () {
                debugger;
                alert("Please Select State");
            }
        });
    });
    $(".chosen-select").chosen();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });

    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }

    
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');

        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function changeQty(_this, i) {
        try {


            var j = 0;
             

             
            var tot = 0;
            var totfrieght = 0;
            var totamt = 0;
            var totamount = 0;
            var qty = document.getElementById("txtrqty" + i).value;
         
            var up = document.getElementById("txtrate" + i).value;
             
       
            var cf = document.getElementById("txtConFac" + i).value;
            var stkqty = document.getElementById("txtstkqty" + i).value;

            
            var IGST = document.getElementById("txtIGSTPer" + i).value;

            var CGST = document.getElementById("txtCGSTPer" + i).value;

            var SGST = document.getElementById("txtSGSTPer" + i).value;

            var Disc = document.getElementById("txtDiscAmount" + i).value;
            var Frieght = document.getElementById("txtFrigCharge" + i).value;

            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;
                 if (cf == "")
                cf = 0;

             

            if (IGST == "")
                IGST = 0;

            if (CGST == "")
                CGST = 0;

            if (SGST == "")
                SGST = 0;

            if (Disc == "")
                Disc = 0;
                 if (Frieght == "")
                Frieght = 0;

            @*if (eval(qty) >= eval(stkqty)) {
                document.getElementById("txtrqty" + i).value = "0";
                alert("Stock Quantity Exceeds the Actual Quantity");
                qty = 0;
            }*@


            var tot = eval(qty) * eval(up)* eval(cf)   ;

            document.getElementById("txtamount" + i).value = tot.toFixed(2);
            var igstperc = (eval(tot) / 100) * eval(IGST);
            var cgstperc = (eval(tot) / 100) * eval(CGST);
            var sgstperc = (eval(tot) / 100) * eval(SGST);

            var Discperc = (eval(tot) / 100) * eval(Disc);

            document.getElementById("txtCGSTAmt" + i).value = cgstperc.toFixed(2);
            document.getElementById("txtSGSTAmt" + i).value = sgstperc.toFixed(2);
            document.getElementById("txtIGSTAmt" + i).value = igstperc.toFixed(2);
           

            var tottax = eval(tot) + eval(igstperc) + eval(cgstperc) + eval(sgstperc) +eval(Frieght);
            var totdisc = eval(tottax) - eval(Disc);
            document.getElementById("txtTotalAmount" + i).value = totdisc.toFixed(2);

            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {

                    var amt = $(this).find('#txtamount' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    totamt += eval(amt);


                    var tamt = $(this).find('#txtTotalAmount' + j.toString()).val();
                    if (tamt == "")
                        tamt = 0;

                    totamount += eval(tamt);

                }
                j += 1;
            });
            document.getElementById("txtGross").value = totamt.toFixed(2);
            document.getElementById("txtNet").value = totamount.toFixed(2);


@*
            var netamt = document.getElementById("txtNet").value;
            var frieght = document.getElementById("txtFrieghtcharge").value;
            var packing = document.getElementById("txtPackingcharges").value;
            var other = document.getElementById("txtOthercharges").value;
            var roundoff = document.getElementById("txtRound").value;
            var otherdeduct = document.getElementById("txtotherdeduction").value;
            var roundoffminus = document.getElementById("txtRoundminus").value;

            var totamounts = 0;
            var rotamt = 0;
            if (frieght == "")
                frieght = 0;

            if (packing == "")
                packing = 0;

            if (other == "")
                other = 0;

            if (roundoff == "")
                roundoff = 0;

            if (otherdeduct == "")
                otherdeduct = 0;

            if (roundoffminus == "")
                roundoffminus = 0;

            totamounts = eval(frieght) + eval(packing) + eval(other) + eval(roundoff) + eval(netamt);
            rotamt = eval(totamounts) - (eval(roundoffminus) + eval(otherdeduct));
            document.getElementById("txtNet").value = rotamt.toFixed(2);*@




        }
        catch (ex) {
            alert(ex.message);
        }
    }


   




</script>
<script>
    $(function () {
        $('._select').select2();
    });
</script>

<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("txtRetNo").value == "") {
                isValid = false;
                $(txtRetNo).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Return No");
                return false;
            }
            else {
                $(txtRetNo).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("RetDate").value == "") {
                isValid = false;
                $(RetDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Return Date");
                return false;
            }
            else {
                $(RetDate).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtReqNo").value == "") {
                isValid = false;
                $(txtReqNo).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Req No");
                return false;
            }
            else {
                $(txtReqNo).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ReqDate").value == "") {
                isValid = false;
                $(ReqDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Req Date");
                return false;
            }
            else {
                $(ReqDate).css({
                    "border": "",
                    "background": ""
                });

            }
        });

    });
</script>