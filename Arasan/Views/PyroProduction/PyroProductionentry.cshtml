@model Arasan.Models.PyroProductionentryDet
@{
    ViewData["Title"] = "Production  Entry";
    string tag = ViewContext.HttpContext.Request.Query["tag"];
    string pid = ViewContext.HttpContext.Request.Query["id"];

}
<style>
    .newwidth {
        width: 120px;
    }

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }

    a {
        outline: none;
        text-decoration: none;
        color: #000;
    }

        a:hover, a:active, a:focus {
            outline: none;
            text-decoration: none;
            color: #000;
        }

    .container {
        max-width: 960px;
    }

    .panel-default > .panel-heading {
        color: #333;
        background-color: #fff;
        border-color: #e4e5e7;
        padding: 0;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        .panel-default > .panel-heading a {
            display: block;
            padding: 10px 15px;
        }

            .panel-default > .panel-heading a:after {
                content: "";
                position: relative;
                top: 1px;
                display: inline-block;
                /*    font-family: 'Glyphicons Halflings';*/
                font-style: normal;
                font-weight: 400;
                line-height: 1;
                -webkit-font-smoothing: antialiased;
                -moz-osx-font-smoothing: grayscale;
                float: right;
                transition: transform .25s linear;
                -webkit-transition: -webkit-transform .25s linear;
            }

            .panel-default > .panel-heading a[aria-expanded="true"] {
                background-color: #49B6D6;
            }

                .panel-default > .panel-heading a[aria-expanded="true"]:after {
                    content: "\2212";
                    -webkit-transform: rotate(180deg);
                    transform: rotate(180deg);
                }

            .panel-default > .panel-heading a[aria-expanded="false"]:after {
                content: "\002b";
                -webkit-transform: rotate(90deg);
                transform: rotate(90deg);
            }

    .accordion-option {
        width: 100%;
        float: left;
        clear: both;
        margin: 15px 0;
    }

        .accordion-option .title {
            font-size: 20px;
            font-weight: bold;
            float: left;
            padding: 0;
            margin: 0;
        }

        .accordion-option .toggle-accordion {
            float: right;
            font-size: 16px;
            color: #AAB7B8;
        }

            .accordion-option .toggle-accordion:before {
                content: "Expand All";
            }

            .accordion-option .toggle-accordion.active:before {
                content: "Collapse All";
            }

    .panel-title a {
        background-color: #AAB7B8;
    }

    .panel-body table tr td {
        padding: 5px;
    }

    .panel-body table {
        /* font-size: 15px;*/
        font-weight: normal;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Production</a> </li>
            <li class="active"> <strong>Production  Entry</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Production Entry</h5>
                    <hr>
                    @using (Html.BeginForm("PyroProductionentry", "PyroProduction", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>


                         
                            <div id="divonsub">

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <label for="inputName3" class="col-sm-4 control-label">Supervisor<label class="mandatory"></label></label>
                                            <div class="col-sm-8">
                                                <h4>@Html.DisplayFor(C => C.Eng)</h4>

                                                @Html.HiddenFor(C => C.super)
                                                @Html.HiddenFor(C => C.Branch)
                                                @Html.HiddenFor(C => C.APID,new{@id="hdapid"})

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">

                                            <label for="inputName3" class="col-sm-4 control-label">Work Center <label class="mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.HiddenFor(C => C.ID)
                                                @Html.HiddenFor(C => C.workid)
                                                @Html.HiddenFor(C => C.Locationid,new{@id="locid"})
                                                @Html.DisplayFor(C => C.Location)
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div style="height:15px;"></div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                           <label for="inputName3" class="col-sm-4 control-label">Doc Id<label class="mandatory"> </label></label>
                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.DocId)


                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">


                                            <label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.Docdate)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div style="height:15px;"></div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                           <label for="inputName3" class="col-sm-4 control-label">Process<label class="mandatory"> </label></label>
                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.process)
                                                @Html.HiddenFor(C => C.ProcessId)


                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">


                                          <label for="inputName3" class="col-sm-4 control-label">Prod Shedule NO<label class="mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.ProdSchNo)
                                                @Html.HiddenFor(C => C.ProdSchid,new{@id="Schedule"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div style="height:15px;"></div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">

                                          <label for="inputName3" class="col-sm-4 control-label">Sch Qty<label class="mandatory"> </label></label>
                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.SchQty)


                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">


                                            <label for="inputName3" class="col-sm-4 control-label">Prod Qty<label class="mandatory"></label></label>
                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.ProdQty)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @* <div id="divshiftgenerate">*@
                                <div style="height:15px;"></div>
                                <div class="row">

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="inputName3" class="col-sm-4 control-label">Shift<label class="mandatory"> </label></label>

                                            <div class="col-sm-8">
                                                @Html.DisplayFor(C => C.Shift)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="inputName3" class="col-sm-4 control-label">Shift Details<label class="Mandatory"></label></label>

                                            <div class="col-sm-8">
                                                <span style="color:green;font-size: 14px;"> <label id="shiftdetails"></label></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                @Html.HiddenFor(C => C.EBCOST,new{@id="hdebcost"})
                                @Html.HiddenFor(C => C.EBCOSTPHR,new{@id="hdebcostpher"})
                            </div>

                            <div style="height:30px;"></div>
                            <div id="divshiftrowdetail">

                                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="headingOne">
                                            <h4 class="panel-title">
                                                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                                    Input Details
                                                </a>
                                            </h4>
                                        </div>

                                        <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                                            <div class="panel-body">
                                                <div class="tabs-container">
                                                    <ul class="nav nav-tabs">
                                                        <li class="active" id="liinp"><a href="#tab-1" data-toggle="tab" id="ainp">Input Detail</a></li>
                                                        <li id="liinpC"> <a href="#tab-2" data-toggle="tab" id="ainpc">Consumables </a></li>

                                                    </ul>
                                                    <div class="tab-content">
                                                        <div class="tab-pane active" id="tab-1">
                                                            <!-- 1st tab  -->
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="btn-group">
                                                                        <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">

                                                                    <table class="table table-striped table-hover" id="dataTable">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Item ID</th>
                                                                                <th>Bin ID</th>
                                                                                <th>Drum No</th>

                                                                                <th> Batch No </th>
                                                                                <th> Charging Time </th>

                                                                                <th> Stock</th>
                                                                                <th> Issue Qty </th>
                                                                                <th> Remove </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody id="tbBooks">
                                                                            @{

                                                                                int i = 0;
                                                                                foreach (var item in Model.inplst.ToList())
                                                                                {
                                                                                                                        <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                                                                                            <td>
                                                                                                                                @Html.DropDownListFor(o => o.inplst[i].ItemId, Model.inplst[i].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 170px;", onchange = "changeItem(this.value," + i + ")" })

                                                                                                                                @Html.HiddenFor(o => o.inplst[i].APID, new { @id = "txtAPID" + i, @class = "form-control", style = "width: 100px;"})
                                                                                                                            </td>
                                                                                                                            <td>@Html.TextBoxFor(o => o.inplst[i].BinId, new { @id = "txtBinId" + i, @class = "form-control", style = "width: 100px;",@readonly=true})@Html.HiddenFor(o => o.inplst[i].Bin, new { @id = "txtBin" + i, @class = "form-control", style = "width: 100px;"})</td>
                                                                                                                            <td>  @Html.DropDownListFor(o => o.inplst[i].drumno, Model.inplst[i].drumlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlInpdrumno" + i, style = "width: 170px;" , onchange = "GetBatch(this.value," + i + ")"})</td>

                                                                                                                            <td>      @Html.DropDownListFor(o => o.inplst[i].batchno, Model.inplst[i].batchlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlbatchno" + i, style = "width: 170px;",onchange = "GetBatchqty(this.value," + i + ")" })  
                                </td>
                                     <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.inplst[i].Time, new { @id = "txtITime" + i, @class = "form-control", style = "width: 70px;",@readonly=true})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" />
                                                                                            </td>
                                                                                                                            <td>@Html.TextBoxFor(o => o.inplst[i].StockAvailable, new { @id = "txtStockAvailable" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;text-align:right",@readonly="readonly" })</td>
                                                                                        <td>@Html.TextBoxFor(o => o.inplst[i].IssueQty, new { @id = "txtIssueQty" + i, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right", @onkeyup = "changeQty(this," + i + ")" ,@readonly="readonly"})@Html.HiddenFor(o => o.inplst[i].rate, new { @id = "hditemrate" + i })@Html.HiddenFor(o => o.inplst[i].amount, new { @id = "hditemamt" + i })</td>

                                                                                                                            <td>
                                                                                                                                @Html.HiddenFor(o => o.inplst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                                                                                <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                                                            </td>


                                                                                                                        </tr>

                                                                                    i = i + 1;
                                                                                }
                                                                            }
                                                                        </tbody>
                                                                    </table>

                                                                </div>
                                                            </div>
                                                            <div class="col-lg-11"></div>
                                                            <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnInsert" onclick="insertinputdetails()">Submit</button>
                                                            <!-- 1st tab  -->
                                                        </div>
                                                        <div class="tab-pane" id="tab-2">
                                                            <!-- 2nd tab  -->
                                                            <div class="row">

                                                                <div class="row">
                                                                    <div class="col-md-12">
                                                                        <div class="btn-group">
                                                                            <input type="button" value="Add Row" onclick="AddConsRow()" class="btn sbold green" />
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">
                                                                    <table class="table table-striped table-hover" id="dataTableinc">
                                                                        <thead>
                                                                            <tr>
                                                                                <th>Item Id</th>
                                                                                <th> Unit </th>
                                                                                <th> Bin Id </th>
                                                                                <th> Stock </th>
                                                                                <th>Cons.Qty  </th>
                                                                                <th>Used Qty</th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody id="tbBooksinc">
                                                                            @{

                                                                                int j = 0;
                                                                                foreach (var item in Model.Binconslst.ToList())
                                                                                {
                                                                                                                        <tr id="trBookinc@(j)" class="chkitemlstinc" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                                                                                          @if(item.insert=="Y")
                                                                            {
                                                                                                                            <td>
                                                                                                @Html.DropDownListFor(o => o.Binconslst[j].ItemId, Model.Binconslst[j].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlConsItem" + j, style = "width: 170px;", onchange = "changeconsItem(this.value," + j + ")" ,disabled="disabled"})
                                                                                                                                @Html.HiddenFor(o => o.Binconslst[j].APID, new { @id = "txtCAPID" + j, @class = "form-control", style = "width: 100px;"})
                                                                                                                            </td>
                                                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].consunit, new { @id = "txtconsunit" + j, @class = "form-control", style = "width: 100px;",@readonly=true})@Html.HiddenFor(o => o.Binconslst[j].unitid, new { @id = "txtconsunitid" + j, @class = "form-control", style = "width: 100px;"})</td>
                                                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].BinId, new { @id = "txtConsBinId" + j, @class = "form-control", style = "width: 100px;",@readonly=true})@Html.HiddenFor(o => o.Binconslst[j].consBin, new { @id = "txtConsBin" + j, @class = "form-control", style = "width: 100px;"})</td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].ConsStock, new { @id = "txtConsStock" + j, @class = "form-control",@readonly=true, onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;text-align:right" })</td>
                                                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].consQty, new { @id = "txtconsQty" + j, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right" ,disabled="disabled"})</td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].Qty, new { @id = "txtQty" + j, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right" })@Html.HiddenFor(o => o.Binconslst[j].rate, new { @id = "hdconsrate" + j,disabled="disabled" })</td>

                                                                                                                            <td>
                                                                                                                                @Html.HiddenFor(o => o.Binconslst[j].Isvalid, new { @id = "IsConsvalid" + j })
                                                                                                                                <img onclick="removeConsRow(@(j));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                            </td>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <td>
                                                                                                @Html.DropDownListFor(o => o.Binconslst[j].ItemId, Model.Binconslst[j].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlConsItem" + j, style = "width: 170px;", onchange = "changeconsItem(this.value," + j + ")" })
                                                                                                @Html.HiddenFor(o => o.Binconslst[j].APID, new { @id = "txtCAPID" + j, @class = "form-control", style = "width: 100px;"})
                                                                                            </td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].consunit, new { @id = "txtconsunit" + j, @class = "form-control", style = "width: 100px;",@readonly=true})@Html.HiddenFor(o => o.Binconslst[j].unitid, new { @id = "txtconsunitid" + j, @class = "form-control", style = "width: 100px;"})</td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].BinId, new { @id = "txtConsBinId" + j, @class = "form-control", style = "width: 100px;",@readonly=true})@Html.HiddenFor(o => o.Binconslst[j].consBin, new { @id = "txtConsBin" + j, @class = "form-control", style = "width: 100px;"})</td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].ConsStock, new { @id = "txtConsStock" + j, @class = "form-control",@readonly=true, onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;text-align:right" })</td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].consQty, new { @id = "txtconsQty" + j, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right" })</td>
                                                                                            <td>@Html.TextBoxFor(o => o.Binconslst[j].Qty, new { @id = "txtQty" + j, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right" })@Html.HiddenFor(o => o.Binconslst[j].rate, new { @id = "hdconsrate" + j })</td>

                                                                                            <td>
                                                                                                @Html.HiddenFor(o => o.Binconslst[j].Isvalid, new { @id = "IsConsvalid" + j })
                                                                                                <img onclick="removeConsRow(@(j));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                            </td>
                                                                                        }

                                                                                                                        </tr>

                                                                                    j = j + 1;
                                                                                }
                                                                            }
                                                                        </tbody>
                                                                    </table>
                                                                </div>


                                                            </div>
                                                            <div class="col-lg-11"></div>
                                                            <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnInsert" onclick="insertinputconsdetails()">Submit</button>
                                                            <!-- 2nd tab  -->
                                                        </div>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="headingTwo">
                                            <h4 class="panel-title">
                                                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                                                    Output Details
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseTwo" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingTwo">

                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddOutRow()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">



                                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">
                                                        <table class="table table-striped table-hover" id="dataTableout">
                                                            <thead>
                                                                <tr>
                                                                    <th>Item Id</th>
                                                                    <th> Drum  </th>
                                                                    <th> Bin Id </th>
                                                                    <th>From Time </th>
                                                                    <th>To Time </th>
                                                                    <th>Stock </th>
                                                                    <th> Qty </th>
                                                                    <th> Excess Qty </th>

                                                                    <th> Status </th>
                                                                      <th>Shed No</th>
                                                                    <th></th>
                                                                    @* <th>Test Result</th>*@
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tbBooksout">
                                                                @{

                                                                    int m = 0;
                                                                    foreach (var item in Model.outlst.ToList())
                                                                    {
                                                                                                            <tr id="trBookout@(m)" class="chkitemlstout" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                                                                                <td>
                                                                                                                    @Html.DropDownListFor(o => o.outlst[m].ItemId, Model.outlst[m].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlOutItem" + m, style = "width: 170px;",onchange = "changeOutItem(this.value," + m + ")" })
                                                                                                                    @Html.HiddenFor(o => o.outlst[m].APID, new { @id = "txtOutAPID" + m, @class = "form-control", style = "width: 100px;"})
                                                                                                                </td>
                                                                                                                <td>  @Html.DropDownListFor(o => o.outlst[m].drumno, Model.outlst[m].drumlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddldrumno" + m, style = "width: 170px;"})</td>
                                                                                                                <td>@Html.TextBoxFor(o => o.outlst[m].BinId, new { @id = "txtOutBinId" + m, @class = "form-control", style = "width: 100px;",@readonly=true}) @Html.HiddenFor(o => o.outlst[m].outBin, new { @id = "txtoutBin" + m, @class = "form-control", style = "width: 100px;"})</td>
                                                                                                                <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh:ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.outlst[m].FromTime, new { @id = "txtFromTime" + m, @class = "form-control", style = "width: 70px; " ,@readonly=true})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                                                        <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh:ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.outlst[m].ToTime, new { @id = "txtToTime" + m, @class = "form-control", style = "width: 70px; ",@readonly=true })
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                                @* <td>@Html.TextBoxFor(o => o.outlst[m].consQty, new { @id = "txtconsQty" + m, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right", @onkeyup = "changeConsQty(this," + j + ")" })</td>
                                                                *@
                                                                                                     <td>@Html.TextBoxFor(o => o.outlst[m].Stock, new { @id = "txtStockQty" + m, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;text-align:right",@readonly="readonly" })</td>

                                                                                                                <td>@Html.TextBoxFor(o => o.outlst[m].OutputQty, new { @id = "txtOutputQty" + m, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 100px;text-align:right" })   @Html.HiddenFor(o => o.outlst[m].Isvalid, new { @id = "Isoutvalid" + m })</td>
                                                                                                           <td>@Html.TextBoxFor(o => o.outlst[m].ExcessQty, new { @id = "txtExcessQty" + m, @class = "form-control", onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;text-align:right" })</td>

                                                                                                                <td>@Html.DropDownListFor(o => o.outlst[m].Status, Model.outlst[m].statuslst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlstatus" + m, style = "width: 120px;",onchange = "changeshed(this.value," + m + ")"  })</td>

                                                                                                                @*@if (item.Result != "Ok")
                                                                {
                                                                <td>   <button type="button" class="btn aqua m-t-xs bottom15-xs" id="Save">Move to QC </button></td>
                                                                }
                                                                else
                                                                {
                                                                <td>   <button type="button" class="btn aqua m-t-xs bottom15-xs" id="Save" disabled>Move to QC </button></td>
                                                                }
                                                                <td>@Html.TextBoxFor(o => o.outlst[m].Result, new { @id = "txtResult" + m, @class = "form-control", style = "width: 100px;text-align:right",@readonly=true })</td>*@
                                                                                                <td>
                                                                                                @if(item.Status=="COMPLETED")
                                                                {
                                                                                                    @Html.DropDownListFor(o => o.outlst[m].ShedNo, Model.outlst[m].shedlst," -- Please Select -- ", new { @id = "ddlShedNo" + m, @Class = "form-control _select",style = "width: 150px;", @TabIndex = 1})  @Html.HiddenFor(o => o.outlst[m].ShedOccu, new { @id = "txtShedOccu" + m})<br />

                                                                }
                                                                else
                                                                {
                                                                                                     <div id="Curing@(m)" hidden>
                                                                                                                @Html.DropDownListFor(o => o.outlst[m].ShedNo, Model.outlst[m].shedlst," -- Please Select -- ", new { @id = "ddlShedNo" + m, @Class = "form-control _select",style = "width: 150px;", @TabIndex = 1,onchange = "getoccupied(this.value," + m + ")"})  @Html.HiddenFor(o => o.outlst[m].ShedOccu, new { @id = "txtShedOccu" + m})<br />
                                                                                                                </div>
                                                                }
                                                                                               
                                                                                                            </td>
                                                                                                            <td>
                                                                                                            @if(item.Status=="COMPLETED")
                                                                {
                                                                                                <div style="width:100px">
                                                                                                <label>OCC:</label>
                                                                                                    <span style="color:red"><b><lable id="occ@(m)"> @Html.DisplayFor(o => o.outlst[m].ShedOccu)  </lable></b></span>
                                                                                                       <label>CAP:</label>
                                                                                                    <span style="color:red"><b> <lable id="cap@(m)"> @Html.DisplayFor(o => o.outlst[m].ShedCap)  </lable></b></span>
                                                                                                      </div>
                                                                }
                                                                  else{
                                                                                                  <div id="SHED@(m)" hidden>
                                                                                                      <div style="width:100px">
                                                                                                              <label>OCC:</label><label id="occ@(m)" style="color:red"></label><label>CAP:</label><label  id="cap@(m)" style="color:red"></label>
                                                                                                                </div>
                                                                                                                </div>
                                                                  }
                                                                                              
                                                                                                            </td>
                                                                                                       <td>   <button type="button" class="btn aqua m-t-xs bottom15-xs" id="Save" onclick="insertoutputdetails(@(m))" >Save </button></td>

                                                                                                <td>
                                                                                                                    @Html.HiddenFor(o => o.outlst[m].Isvalid, new { @id = "Isoutvalid" + m })
                                                                                                                    <img onclick="removeOutRow(@(m));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                                                </td>


                                                                                                            </tr>

                                                                        m = m + 1;
                                                                    }
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>

                                                   @* <div class="col-lg-11"></div>
                                                    <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnInsert" onclick="insertoutputdetails()">Submit</button>*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                   <div class="panel panel-default">
                                                    <div class="panel-heading" role="tab" id="headingThree" >
                                                        <h4 class="panel-title">
                                                            <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                                                Employee Details
                                                            </a>
                                                        </h4>
                                                    </div>
                                                    <div id="collapseThree" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                                                <div class="panel-body">
                                <div class="tabs-container">
                                        <ul class="nav nav-tabs">
                                            <li class="active" id="liinp"><a href="#tab-3" data-toggle="tab" >Employee Detail</a></li>
                                            <li > <a href="#tab-4" data-toggle="tab">OutSourcing </a></li>
                                           
                                        </ul>
                                        <div class="tab-content">
                                            <div class="tab-pane active" id="tab-3">
                                                <!-- 1st tab  -->
                                            <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddEmpRow()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">

                                                        <table class="table table-striped table-hover" id="dataTableEmp">

                                                            <thead>
                                                                <tr>

                                                                    <th>Emp Name</th>
                                                                    <th>Emp Code</th>
                                                                    <th>Department </th>
                                                                    <th> Start Date </th>
                                                                    <th> Start Time </th>
                                                                    <th> End Date </th>
                                                                    <th> End Time </th>
                                                                    <th>OT Hrs </th>
                                                                    <th>Total Hrs</th>
                                                                    <th>Normel Hour </th>
                                                                    <th>Nature Of Work </th>

                                                                </tr>
                                                            </thead>
                                                            <tbody id="tbBooksEmp">
                                                                @{

                                                                    int k = 0;
                                                                    foreach (var item in Model.EmplLst.ToList())
                                                                    {
                                                                                                                                <tr id="trBookEmp@(k)" class="chkEmpitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">



                                                                                                                                    <td>
                                                                                                                                        @Html.DropDownListFor(o => o.EmplLst[k].Employee, Model.EmplLst[k].Employeelst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlEmployee" + k, style = "width: 170px;",onchange = "changeEmployeeItem(this.value," + k + ")" })
                                                                                                                                    @Html.HiddenFor(o => o.EmplLst[k].APID, new { @id = "txtEAPID" + k, @class = "form-control", style = "width: 100px;"})
                                                                                                                                        </td>
                                                                                                                                    <td>@Html.TextBoxFor(o => o.EmplLst[k].EmpCode, new { @id = "txtEmpCode" +k, @class = "form-control" , style = "width: 100px; " ,@readonly="readonly" })</td>
                                                                                                                                    <td>@Html.TextBoxFor(o => o.EmplLst[k].Depart, new { @id = "txtDepart" + k, @class = "form-control" , style = "width: 120px; " ,@readonly="readonly" })</td>

                                                                                                                                    <td>
                                                                                                                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                                                                                                            @Html.TextBoxFor(o => o.EmplLst[k].StartDate, new { @id = "txtStartDate" + k, @class = "form-control", style = "width: 100px;",@readonly="readonly"})<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                                                                                        </div>
                                                                                                                                    </td>

                                                                                                                                    <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh.ii">
                                                                                                @Html.TextBoxFor(o => o.EmplLst[k].StartTime, new { @id = "txtStartTime" +k, @class = "form-control", style = "width: 70px;",@readonly=true, @onchange = "changeehrs(" + k + ")"})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                                                    <td>
                                                                                                                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                                                                                                            @Html.TextBoxFor(o => o.EmplLst[k].EndDate, new { @id = "txtEndDate" + k, @class = "form-control",  style = "width: 100px;" ,@readonly="readonly"})<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                                                                                        </div>
                                                                                                                                    </td>
                                                                                                                                    <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh.ii">
                                                                                                @Html.TextBoxFor(o => o.EmplLst[k].EndTime, new { @id = "txtEndTime" + k, @class = "form-control" , style = "width: 70px; ",@readonly=true, @onchange = "changeehrs(" + k + ")" })
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                                                <td>@Html.TextBoxFor(o => o.EmplLst[k].OTHrs, new { @id = "txtOTHrs" + k, @class = "form-control" , style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@onkeyup = "chempexpence(this," + k + ")"})@Html.HiddenFor(o => o.EmplLst[k].Empcost,new{@id="hdempcost"+ k})@Html.HiddenFor(o => o.EmplLst[k].OTcost,new{@id="hdotcost"+ k})</td>
                                                                                                                                    @* <td>@Html.TextBoxFor(o => o.inputlst[i].MillLoadAdd, new { @id = "txtMillLoadAdd" + i, @class = "form-control", style = "width: 100px;"})</td>*@
                                                                                                                                    <td>@Html.TextBoxFor(o => o.EmplLst[k].ETOther, new { @id = "txtETOther" + k, @class = "form-control" , style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly=true})</td>
                                                                                                                                    <td>@Html.TextBoxFor(o => o.EmplLst[k].Normal, new { @id = "txtNormal" + k, @class = "form-control" , style = "width: 70px; " ,onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly=true})</td>
                                                                                                                                    <td>@Html.TextBoxFor(o => o.EmplLst[k].NOW, new { @id = "txtNOW" + k, @class = "form-control" , style = "width: 120px; "  })</td>

                                                                                                                                    <td>
                                                                                                                                        @Html.HiddenFor(o => o.EmplLst[k].Isvalid, new { @id = "EmpIsvalid" + k})
                                                                                                                                        <img onclick="removeEmpRow(@(k));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                                                                    </td>


                                                                                                                                </tr>

                                                                        k = k + 1;
                                                                    }
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                                <div class="col-lg-11"></div>
                                                                <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnEmp" onclick="insertempdetails()">Submit</button>

                                                                <!-- 1st tab  -->
                                            </div>
                                            <div class="tab-pane" id="tab-4">
                                                <!-- 2nd tab  -->
                                              <div class="row">
                                                <div class="col-md-12">
                                                    <div class="btn-group">
                                                        <input type="button" value="Add Row" onclick="AddOEmpRow()" class="btn sbold green" />
                                                    </div>
                                                </div>
                                                 </div>

                                               <div class="row">
           <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">
                                               
                                                                    <table class="table table-striped table-hover" id="dataTableOuts">
                                                                        <thead>
                                                                            <tr>
                                                                              
                                                                                <th>No.Of.Emp</th>
                                                                                <th>Start Date</th>
                                                                                <th>Start Time </th>
                                                                                <th> End Date </th>
                                                                                <th> End Time </th>

                                                                                <th> Worked Hrs </th>
                                                                                <th>Emp Cost/Hr </th>
                                                                                <th>Expenses</th>
                                                                                <th>Nature Of Work </th>
                                                                            </tr>
                                                                        </thead>
                                                                       <tbody id="tbBooksoutsour">
                                                                            @{

                                                            int r = 0;
                                                            foreach (var item in Model.SourcingLst.ToList())
                                                            {
                                                                                                                     <tr id="trBookOuts@(r)" class="chkOutsitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                                                                                                                                                        
                                                                                                      
                                                                                                                      <td>@Html.TextBoxFor(o => o.SourcingLst[r].NoOfEmp, new { @id = "txtNoOfEmp" + r, @class = "form-control" , style = "width: 110px; " , @onkeyup = "changeexpence(this," + r + ")" })</td>
                                                                                                                       <td><div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy" >@Html.TextBoxFor(o => o.SourcingLst[r].StartDate, new { @id = "txtSStartDate" + r, @class = "form-control", style = "width: 100px;",@readonly="readonly"})<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                                                                                                                    </div> </td> 
                                                                                                                       
                                                                                                                        <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.SourcingLst[r].StartTime, new { @id = "txtSStartTime" + r, @class = "form-control", style = "width: 70px;", @Type="text",@readonly=true})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td> 
                                                                                                                            <td><div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy"> @Html.TextBoxFor(o => o.SourcingLst[r].EndDate, new { @id = "txtSEndDate" + r, @class = "form-control",  style = "width: 100px;" ,@readonly="readonly"})<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                                                                                                                    </div> </td>
                                                                                                                    <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.SourcingLst[r].EndTime, new { @id = "txtSEndTime" + r, @class = "form-control" , style = "width: 70px; ",@Type="text" , @onchange = "changehrs(this.value," + r + ")",@readonly=true})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                            
                                                                                                                        <td>@Html.TextBoxFor(o => o.SourcingLst[r].WorkHrs, new { @id = "txWorkHrs" + r, @class = "form-control" , style = "width: 110px; ",onkeydown = "return isNumeric2(event.keyCode,this.value)" ,@readonly="readonly" })</td>
                                                                                                                                                <td>@Html.TextBoxFor(o => o.SourcingLst[r].EmpCost, new { @id = "txtEmpCost" + r, @class = "form-control" , style = "width: 110px; " ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeexpence(this," + r + ")" })</td>
                                                                                                                                                <td>@Html.TextBoxFor(o => o.SourcingLst[r].Expence, new { @id = "txtExpence" + r, @class = "form-control" , style = "width: 110px; "  })</td>                                                                  
                                                                                                                       
                                                                                                                
                                                                                                                 <td>@Html.TextBoxFor(o => o.SourcingLst[r].NOW, new { @id = "txtNOFW" + r, @class = "form-control" , style = "width: 110px; "  })</td>

                                                                                                                    <td>
                                                                                                                                    @Html.HiddenFor(o => o.SourcingLst[r].Isvalid, new { @id = "OutsIsvalid" + r})
                                                                                                                      <img onclick="removeOutsRow(@(r));" src="../Images/delete.png" style="cursor:pointer" /> 
                                                                                                                     </td>


                                                                                                                                                                                        </tr>
                                                      
                                                          r = r + 1;
                                                            }
                                                        }
                                                                            
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                            </div>
                                                             <div class="col-lg-11"></div>
                                                            <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnOutsource" onclick="insertoutsourdetails()">Submit</button>

                                                            </div>
                                                           
                                                        </div>
                                                        
                                                

                                                            
                                                              </div>            
                                        </div>
                                        </div>
                                        </div>

                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="headingFour">
                                            <h4 class="panel-title">
                                                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                                                    Breakdown Details
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseFour" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFour">
                                            <div class="panel-body">
                                                <!--    Panel 4 Start  -->
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddBreakRow()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">

                                                        <table class="table table-striped table-hover" id="dataTableBreak">
                                                            <thead>
                                                                <tr>

                                                                    <th>Machine Code</th>
                                                                    <th>Description</th>
                                                                    <th>Dept.Type </th>
                                                                    <th> Maint.Type </th>
                                                                    <th> From Time </th>

                                                                    <th> To Time </th>
                                                                    <th>P/B </th>
                                                                    <th>Allotted To</th>
                                                                    <th>Reason </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="tbBooksBreak">
                                                                @{

                                                                    int a = 0;
                                                                    foreach (var item in Model.BreakLst.ToList())
                                                                    {
                                                                                                            <tr id="trBookBreak@(a)" class="chkBreakitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">



                                                                                                                <td>
                                                                                                                    @Html.DropDownListFor(o => o.BreakLst[a].MachineId, Model.BreakLst[a].Machinelst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlMachineId" + a, style = "width: 120px;", onchange = "changeMachineItem(this.value," + a + ")" })
                                                                                                                    @Html.HiddenFor(o => o.BreakLst[a].APID, new { @id = "txtAPID" + a, @class = "form-control", style = "width: 100px;"})
                                                                                                                </td>
                                                                                                                <td>@Html.TextBoxFor(o => o.BreakLst[a].MachineDes, new { @id = "txtMachineDes" +a, @class = "form-control" , style = "width: 180px; "  })</td>
                                                                                                                <td>@Html.TextBoxFor(o => o.BreakLst[a].DType, new { @id = "txtDType" + a, @class = "form-control" , style = "width: 120px; "  })</td>

                                                                                                                <td>@Html.TextBoxFor(o => o.BreakLst[a].MType, new { @id = "txtMType" + a, @class = "form-control" , style = "width: 120px;" })</td>

                                                                                                              <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.BreakLst[a].StartTime, new { @id = "txtBStartTime" +a, @class = "form-control", style = "width: 70px;",@readonly=true })
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td> 
                                                                                                                                
                                                                                                                        <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh:ii">
                                                                                                @Html.TextBoxFor(o => o.BreakLst[a].EndTime, new { @id = "txtBEndTime" + a, @class = "form-control" , style = "width: 70px; " ,@readonly=true })
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                                @* <td>@Html.TextBoxFor(o => o.inputlst[i].MillLoadAdd, new { @id = "txtMillLoadAdd" + i, @class = "form-control", style = "width: 100px;"})</td>*@
                                                                                                                <td>@Html.TextBoxFor(o => o.BreakLst[a].PB, new { @id = "txtPB" + a, @class = "form-control" , style = "width: 80px;" })</td>
                                                                                                                <td>
                                                                                                                    @Html.DropDownListFor(o => o.BreakLst[a].Alloted, Model.BreakLst[a].Emplst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlAlloted" + a, style = "width: 140px;" })
                                                                                                                </td>
                                                                                                                             <td>@Html.DropDownListFor(o => o.BreakLst[a].Reason,Model.BreakLst[a].Reasonlst, new { @id = "txtReason" +a, @class = "form-control _select" , style = "width: 180px; "  })</td>

                                                                                                                <td>
                                                                                                                    @Html.HiddenFor(o => o.BreakLst[a].Isvalid, new { @id = "BreakIsvalid" + a})
                                                                                                                    <img onclick="removeBreakRow(@(a));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                                                </td>


                                                                                                            </tr>

                                                                        a = a + 1;
                                                                    }
                                                                }

                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                <div class="col-lg-11"></div>
                                                <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnBreak" onclick="insertbreakdetails()">Submit</button>

                                                <!--    Panel 4 End  -->
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="headingFive">
                                            <h4 class="panel-title">
                                                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                                                    Log Details
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseFive" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFive">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddLogRow()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">

                                                        <table class="table table-striped table-hover" id="dataTableLog">

                                                            <thead>
                                                                <tr>

                                                                    <th> Start Date </th>
                                                                    <th> Start Time </th>
                                                                    <th> End Date </th>
                                                                    <th> End Time </th>
                                                                    <th>Total Hrs </th>

                                                                    <th>Reason </th>

                                                                </tr>
                                                            </thead>
                                                            <tbody id="tbBooksLog">
                                                                @{

                                                                    int x = 0;
                                                                    foreach (var item in Model.LogLst.ToList())
                                                                    {
                                                                                                            <tr id="trBookLog@(k)" class="chkLogitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">



                                                                                                                <td>
                                                                                                                    <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                                                                                        @Html.TextBoxFor(o => o.LogLst[x].StartDate, new { @id = "txtLStartDate" + x, @class = "form-control", style = "width: 130px;",@readonly="readonly"})<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                                                                    </div>
                                                                                                                    @Html.HiddenFor(o => o.LogLst[x].APID, new { @id = "txtAPID" + x, @class = "form-control", style = "width: 100px;"})
                                                                                                                </td>

                                                                                                                <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh.ii">
                                                                                                @Html.TextBoxFor(o => o.LogLst[x].StartTime, new { @id = "txtLStartTime" + x, @class = "form-control", style = "width: 120px;",@readonly=true})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                                                                            <td>
                                                                                                                                                <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                                                                                                                                    @Html.TextBoxFor(o => o.LogLst[x].EndDate, new { @id = "txtLEndDate" + x, @class = "form-control",  style = "width: 130px;" ,@readonly="readonly"})<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                                                                                                                                </div>
                                                                                                                                            </td>
                                                                                                                                            <td><div class="input-group date form_time col-md-5" data-date="" data-date-format="hh.ii" data-link-field="dtp_input3" data-link-format="hh.ii">
                                                                                                @Html.TextBoxFor(o => o.LogLst[x].EndTime, new { @id = "txtLEndTime" + x, @class = "form-control" , style = "width: 120px; ",@readonly=true , @onchange = "changeloghrs(" + x + ")"})
                                                                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span></span>
                                                                                            </div>
                                                                                            <input type="hidden" id="dtp_input3" value="" /></td>
                                                                                            <td>@Html.TextBoxFor(o => o.LogLst[x].tothrs, new { @id = "txtTotalHrs" + x, @class = "form-control" , style = "width: 100px;" })</td>
                                                                                                                                            <td>@Html.DropDownListFor(o => o.LogLst[x].Reason,Model.LogLst[x].Reasonlst, new { @id = "txtLReason" + x, @class = "form-control _select" , style = "width: 180px;" })</td>

                                                                                                                <td>
                                                                                                                    @Html.HiddenFor(o => o.LogLst[x].Isvalid, new { @id = "Isvalid" + x })
                                                                                                                    <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" />
                                                                                                                </td>



                                                                                                            </tr>

                                                                        k = k + 1;
                                                                    }
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                <div class="col-lg-11"></div>
                                                <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnLog" onclick="insertlogdetails()">Submit</button>
                                            </div>
                                        </div>
                                    </div>





                                    <div class="panel panel-default">
                                        <div class="panel-heading" role="tab" id="headingSix">
                                            <h4 class="panel-title">
                                                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseSix" aria-expanded="false" aria-controls="collapseSix">
                                                    Bunker Balance
                                                </a>
                                            </h4>
                                        </div>
                                        <div id="collapseSix" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingSix">
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="btn-group">
                                                            <input type="button" value="Add Row" onclick="AddEmpRow()" class="btn sbold green" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:200px;">

                                                        @{
                                                            int n = 0;
                                                            foreach (var item in Model.BunkLst.ToList())
                                                            {
                                                                                                    <div class="row">

                                                                                                        <div class="col-lg-3"></div>
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">
                                                                                                                <h4> <span style="color:blue;"><label for="inputName3" class="col-sm-4 control-label">Bin Details </label></span></h4>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>

                                                                                                    <div class="row">
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">Op.Bin Bal<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">


                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].OPBin, new { @id = "txtOPBin", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                       

                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">Powder I/P<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">
                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].PIP, new { @id = "txtPIP", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                    <div class="row">

                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label"> Grease I/P<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].GIP, new { @id = "txtGIP", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label"> Total I/P<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].TIP, new { @id = "txtTIP", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                    </div>
                                                                                                    <div class="row">
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">Total Production<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">
                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].TOP, new { @id = "txtTOP", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label"> Excess Qty Reduced <label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].OXD, new { @id = "txtOXD", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                    <div class="row">
                                                                                                       
                                                                                                    <div class="col-md-6">
                                                                                            <div class="form-group">


                                                                                            <label for="inputName3" class="col-sm-4 control-label">Total RM Charged<label class="Mandatory"></label></label>
                                                                                            <div class="col-sm-8">
                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].TRM, new { @id = "txtTRM", @class = "form-control", @TabIndex = 1,onkeydown = "return isNumeric2(event.keyCode,this.value)" })<br />


                                                                                            </div>
                                                                                            </div>
                                                                                             </div>
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">CI.Bin Bal<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].CLBin, new { @id = "txtCLBin", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>

                                                                                                    <div class="row">

                                                                                                        <div class="col-lg-3"></div>
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">
                                                                                                                <h4> <span style="color:blue;"><label for="inputName3" class="col-sm-4 control-label">Mill Load Details </label></span></h4>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                    <div class="row">
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">M.L.OP.Bal<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">
                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].MLOP, new { @id = "txtMLOP", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label"> M.L Addition<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].MLAdd, new { @id = "txtMLAdd", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                    <div class="row">
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">M.L Deduction<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                    @Html.TextBoxFor(C => C.BunkLst[n].MLDed, new { @id = "txtMLDed", @class = "form-control", @TabIndex = 1 ,onkeydown = "return isNumeric2(event.keyCode,this.value)"})<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                        <div class="col-md-6">
                                                                                                            <div class="form-group">

                                                                                                                <label for="inputName3" class="col-sm-4 control-label">M.L CI.Bal<label class="Mandatory"></label></label>
                                                                                                                <div class="col-sm-8">

                                                                                                                @Html.TextBoxFor(C => C.BunkLst[n].MLCL, new { @id = "txtMLCL", @class = "form-control", @TabIndex = 1,onkeydown = "return isNumeric2(event.keyCode,this.value)" })<br />

                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>

                                                                n = n + 1;
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="col-lg-11"></div>
                                                <button type="button" class="btn aqua m-t-xs bottom15-xs" id="btnLog" onclick="insertBunkdetails()">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>



                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <label for="inputName3" class="col-sm-4 control-label">Is Complete<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            <div class="input-group">
                                                @Html.CheckBoxFor(model => model.Complete,new{value="Yes",onchange = "changeentry(this.value)",@id="chkcmp"})
                                                @*  @Html.RadioButtonFor(C => C.Complete, "Yes", new { @TabIndex = 2 ,onchange = "changeentry(this.value)"})
                                            <label id="mt-radio">Yes</label>
                                            @Html.RadioButtonFor(C => C.Complete, "No", new { @TabIndex = 3,onchange = "changeentry(this.value)" ,@checked="checked"})
                                            <label id="mt-radio">No</label>*@


                                            </div>
                                        </div>

                                    </div>
                                </div>

                            </div>
                            <div class="col-lg-10" hidden id="go">
                                <div class="col-lg-10"></div>
                                <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                               @* <button type="button" href="@Url.Action("PyroProdApprove", "PyroProduction", new { id = Model.APID })" class="btn aqua fancybox" data-fancybox-type='iframe' id="btnSave" onClick="window.parent.jQuery.fancybox.close();">Submit</button>*@
                                <button class="btn btn-danger" type="button" causesvalidation="false" id="btnCansel" onclick="location.href='@Url.Action("ListPyroProduction", "PyroProduction")'">Cancel</button>
                                @*@* <button class="btn btn-danger" type="button" causesvalidation="false" id="btnCansel" onclick="location.href='@Url.Action("PyroProduction", "PyroProduction")'">Cancel</button>*@
                                @*</div>*@
                            </div>
                        </form>
                    }

                </div>
            </div>`

        </div>
    </div>

</div>
<script>
   @* $(document).ready(function () {
        var id = "@pid";
        if(id==""){
            document.getElementById("divonload").style.display="block";
            document.getElementById("divonsub").style.display = "none";
        }
        else{
            document.getElementById("divonload").style.display="none";
            document.getElementById("divonsub").style.display = "block";
        }
    });*@

   
     
      function getoccupied(item,i) {
          var occ= document.getElementById("occ" + i).innerHTML;
              var cap= document.getElementById("cap" + i).innerHTML ;
              var tot=0;
          $.ajax({
            url: 'Getshedocc',
            data: { "item": item },
            type: "GET",
            success: function (result) {
                if(occ="")
                {
                    tot=result.shed+1;
                   @* alert(tot);*@
                }
                else
                {
                    tot=result.shed+occ;
                       alert(tot);
                }
               document.getElementById("occ" + i).innerHTML=tot ;
               document.getElementById("cap" + i).innerHTML=result.cap ;

                
                
                 if(item!="")
                 {
 document.getElementById("SHED" +i).style.display = "block";
 
                 }
                 else
                 {
                      document.getElementById("SHED" +i).style.display = "none";
                 } 
            },
            error: function () {
                alert("Data Not Found");
            }
        });


    }
   

    $(function () {
        $('._select').select2();
        var shift = '@ViewBag.shift';
        changeshift(shift);

    });

    function changeshed(status, i) {
 
              var shedno= document.getElementById("ddlShedNo" +i).value;
                  if(status=="COMPLETED")
                 {
 document.getElementById("Curing" +i).style.display = "block";
 
                 }
                 else
                 {
                      document.getElementById("Curing" +i).style.display = "none";
                 } 
                 getoccupied(shedno,i);
 
    }

   
     function AddOEmpRow(){
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetEmpJSON',
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendOEmpRow(opt);
            }
        })
    }
    function AppendOEmpRow(opt) {
        var index = $("#tbBooksoutsour").children("tr").length;

        var noemp = "<td><input class='form-control'  id='txtNoOfEmp" + index + "' name='SourcingLst[" + index + "].NoOfEmp' style='width: 120px;'   value=''></td>"
        var startdate = "<td><div class='input-group date form_date col-sm-8'  data-date-format='dd-M-yyyy'><input class='form-control'  id='txtSStartDate" + index + "' name='SourcingLst[" + index + "].StartDate' style='width: 100px;' type='text' value=''readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";
        var starttime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtSStartTime" + index + "' name='SourcingLst[" + index + "].StartTime' style='width: 110px;'   value='' readonly='True' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var enddate = "<td><div class='input-group date form_date col-sm-8'  data-date-format='dd-M-yyyy'><input class='form-control'  id='txtSEndDate" + index + "' name='SourcingLst[" + index + "].EndDate' style='width: 100px;' type='text' value='' readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";
        var endtime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtSEndTime" + index + "' name='SourcingLst[" + index + "].EndTime' style='width: 110px;'   value='' readonly='readonly' onchange = 'changehrs(this.value," + index + ")'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var othrs = "<td><input class='form-control'  id='txWorkHrs" + index + "' name='SourcingLst[" + index + "].WorkHrs' style='width: 110px;' type='text' onkeydown = 'return isNumeric2(event.keyCode,this.value)' readonly='readonly' ></td>";
        var ethrs = "<td><input class='form-control'  id='txtEmpCost" + index + "' name='SourcingLst[" + index + "].EmpCost' style='width: 110px;'   value='' onkeydown = 'return isNumeric2(event.keyCode,this.value)' onkeyup = 'changeexpence(this," + index + ")'></td>";
        var nhr = "<td><input class='form-control'  id='txtExpence" + index + "' name='SourcingLst[" + index + "].Expence' style='width: 110px;'   value=''></td>";
        var now = "<td><input class='form-control'  id='txtNOFW" + index + "' name='SourcingLst[" + index + "].NOW' style='width: 110px;'   value=''></td>";

        var removeCell = "<td><input id='OutsIsvalid" + index + "' name='SourcingLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeEmpRow(" + index + ");'  style='cursor:pointer' /><input name='SourcingLst.Index' type='hidden' value='" + index + "'  /></td>";
        var newRow = "<tr class='chkOutsitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBookOuts" + index + "'>" + noemp + startdate + starttime + enddate + endtime + othrs + ethrs + nhr + now + removeCell + "</tr>";
        $("#tbBooksoutsour").append(newRow);


        $(function () {
            $('._select').select2();
        });

        $('.form_date').datetimepicker({
            //   language:  'fr',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });

             $('.form_time').datetimepicker({
            weekStart: 1,
            todayBtn:  1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 1,
        minView: 0,
        maxView: 1,
        forceParse: 0
        });
    }
     $('.form_time').datetimepicker({
       // language:  'fr',
        weekStart: 1,
        todayBtn:  1,
    autoclose: 1,
    todayHighlight: 1,
    startView: 1,
    minView: 0,
    maxView: 1,
    forceParse: 0
    });
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    $(function () {
        $('._select').select2();
        var shift = '@ViewBag.shift';
        changeshift(shift);
    });
    function changeshift(Shiftid) {
        @*alert(Shiftid);*@
        $.ajax({
            url: 'GetshiftDetail',
            data: { "Shiftid": Shiftid },
            type: "GET",
            success: function (result) {
                document.getElementById("shiftdetails").innerHTML = result.fromtime + " to " + result.totime + "  Total Hours : " + result.tothrs;
                //document.getElementById("shiftdetails1").innerHTML = result.fromtime + " to " + result.totime + "  Total Hours : " + result.tothrs;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeshift1(Shiftid) {
        var wcid = document.getElementById("ddlLocation").value;
        $.ajax({
            url: 'GetWcRec',
            data: { "wcid": wcid, "shift": Shiftid },
            type: "POST",
            success: function (result) {
                if (result.res == "No") {
                    window.location.href = "PyroProduction?tag=" + wcid + "&shift=" + Shiftid;
                }
                else {
                    window.location.href = "PyroProduction?id=" + result.url;
                }

            },
            error: function () {

            }
        });

    }
    function changeMachineItem(ItemId, i) {
        $.ajax({
            url: 'GetMachineDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtMachineDes" + i).value = result.name;

                document.getElementById("txtMType" + i).value = result.type;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeItem(ItemId, i) {
        var loc = document.getElementById("locid"  ).value;
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtBinId" + i).value = result.bin;
                document.getElementById("txtBin" + i).value = result.binid;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
        $.ajax({
            url: "GetDrumnoJSON",
            type: "post",
            data: { 'itemid': ItemId,'loc':loc },
            cache: false,
            success: function (response) {
                var newlist;
                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                PopulateDropDown("#ddlInpdrumno" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select Item ");
            }
        });
    }
       function GetBatch(ItemId, i) {
      var loc = document.getElementById("locid").value;
       var item=document.getElementById("ddlItem" +i).value ;
          $.ajax({
            url: "GetStockDrumBatchJSON",
            type: "post",
            data: { 'ItemId': ItemId ,'loc':loc,'item':item},
            cache: false,
            success: function (response) {
                var newlist;
              
                newlist = response.Ilst;
                  
                $('tr.chkitemlst').each(function () {
                    if ($(this).css('display') !== 'none') {
                        PopulateDropDown("#ddlbatchno" + i, response);
                        
                    }
                });
            },
            error: function () {
                debugger;
                alert("Please Select From Drum No");
            }
        });
    }
      function GetBatchqty(ItemId, i) {
       
        
        $.ajax({
            url: 'GetBatchqty',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtStockAvailable" + i).value = result.stk;
                document.getElementById("txtIssueQty" + i).value = result.stk;
                document.getElementById("hditemrate" + i).value = result.rate;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeStock(ItemId, i) {
        var item = document.getElementById("ddlItem" + i).value;

        $.ajax({
            url: 'GetStockDetail',
            data: { "ItemId": ItemId, 'item': item },
            type: "GET",
            success: function (result) {

                document.getElementById("txtStockAvailable" + i).value = result.stock;
                document.getElementById("txtIssueQty" + i).value = result.stock;


            },
            error: function () {
                alert("Data Not Found");
            }
        });

    }
    function outputsave(i) {

        var id = document.getElementById("hdapid").value;
        var ItemId = document.getElementById("ddlOutItem" + i).value;
        var drum = document.getElementById("ddldrumno" + i).value;
        var time = document.getElementById("txtFromTime" + i).value;
        var qty = document.getElementById("txtOutputQty" + i).value;
        var totime = document.getElementById("txtToTime" + i).value;
        $.ajax({
            url: 'SaveOutDetail',
            data: { "id": id, "ItemId": ItemId, "drum": drum, "time": time, "qty": qty, "totime": totime },
            type: "POST",
            success: function (result) {

            },
            error: function () {

            }
        });
    }


    function changeOutItem(ItemId, i) {
        $.ajax({
            url: 'GetOutItemDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtOutBinId" + i).value = result.bin;
                document.getElementById("txtOutBin" + i).value = result.binid;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeconsItem(ItemId, i) {
          var loc = document.getElementById("locid").value;
        $.ajax({
            url: 'GetConItemDetail',
            data: { "ItemId": ItemId ,"loc":loc},
            type: "GET",
            success: function (result) {

                document.getElementById("txtConsBinId" + i).value = result.bin;
                document.getElementById("txtConsBin" + i).value = result.binid;
                document.getElementById("txtconsunit" + i).value = result.unit;
                document.getElementById("txtconsunitid" + i).value = result.unitid;
                document.getElementById("hdconsrate" + i).value = result.rate;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function AddRow() {
        var opt = "";
        var remopt = "";
        var lot = "";
          var id= document.getElementById("Schedule").value;
        $.ajax({
            type: "POST",
            url: 'GetItemJSON',
            data: { 'id': id  },
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });

                $.ajax({
                    type: "POST",
                    url: 'GetDrumnoJSON',
                    success: function (data) {
                        $.each(data, function () {
                            remopt += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                               $.ajax({
                    type: "POST",
                    url: 'GetStockDrumBatchJSON',
                    success: function (data) {
                        $.each(data, function () {
                            lot += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                        AppendRow(opt,remopt,lot);
                   
                    }
                }) 
                    }
                })

            }
        })
    }
    function AddConsRow() {
        var opt = "";

                  var id= document.getElementById("locid").value;

        $.ajax({
            type: "POST",
            url: 'GetconsItemJSON',
              data: { 'id': id  },
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });


                AppendConsRow(opt);


            }
        })
    }
    function AddOutRow() {
      
        var opt = "";
        var remopt = "";
        var shed = "";
        var id= document.getElementById("Schedule").value;
               var index = $("#tbBooksout").children("tr").length;
               
               index=index-1;
               var newindex=index;
               for(var i=index; i>=0; i--)
               {
                    if(document.getElementById("trBookout"+i).style.display=="none")
                    {
                        newindex=i-1;
                        
                    }
                    else{
                        break;
                    }
               }
               
                      var shedno= document.getElementById("ddlShedNo" +newindex).value;
                      
                      var occ= document.getElementById("occ" + newindex).innerHTML;
              var cap= document.getElementById("cap" + newindex).innerHTML ;
             
        $.ajax({
            type: "POST",
            url: 'GetOutItemJSON',
             data: { 'id': id  },
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });

                $.ajax({
                    type: "POST",
                    url: 'GetDrumJSON',
                    success: function (data) {
                        $.each(data, function () {
                            remopt += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                         $.ajax({
                    type: "POST",
                    url: 'GetShedJSON',
                  
                    success: function (data) {
                        $.each(data, function () {
                            var oldshed = this.value;

                                if(oldshed==shedno && occ != cap){
                                    
                                    shed += "<option value=" + this.value + " selected='true'>" + this.text + "</option>";
                                   
                                }
                                else{
                                     
                                    shed += "<option value=" + this.value + ">" + this.text + "</option>";
                                }
                            
                        });
                        AppendOutRow(opt, remopt,shed);
                    }
                })  
                }
                })

            }
        })
    }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AppendRow(opt, remopt,lot) {
        var index = $("#tbBooks").children("tr").length;

        var itemid = "<td><select style = 'width: 170px;' class='form-control _select newcss' id='ddlItem" + index + "' name='inputlst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";
        var binid = "<td><input class='form-control'  id='txtBinId" + index + "' name='inputlst[" + index + "].BinId' style='width: 100px;' type='text' value='' readonly='true'></td>";
        var drum = "<td><select style = 'width: 170px;' class='form-control _select newcss' id='ddlInpdrumno" + index + "' name='inputlst[" + index + "].drumno' onchange = 'GetBatch(this.value," + index + ")'><option value=''>Please select</option>" + remopt + "</select></td>";

               var batchno = "<td>  <select style = 'width: 170px;' class='form-control _select newcss' id='ddlbatchno" + index + "' name='inputlst[" + index + "].batchno' onchange = 'GetBatchqty(this.value," + index + ")'><option value=''>Please select</option>" + lot + "</select></td>";
        var time = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtITime" + index + "' name='inputlst[" + index + "].Time' style='width: 70px;' type='text' readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";

        var stock = "<td><input class='form-control'  id='txtStockAvailable" + index + "' name='inputlst[" + index + "].StockAvailable' style='width: 80px; text-align:right' type='text' readonly='true' value='' onkeydown = 'return isNumeric2(event.keyCode,this.value)'></td>";
        var issueqty = "<td><input class='form-control'  id='txtIssueQty" + index + "' name='inputlst[" + index + "].IssueQty'  type='text' value='' style = 'width: 100px;text-align:right' onkeydown = 'return isNumeric2(event.keyCode,this.value)' readonly='true' ><input id='hditemrate" + index + "' name='inputlst[" + index + "].rate' type='hidden'><input id='hditemamt" + index + "' name='inputlst[" + index + "].amount' type='hidden'></td>";
        var removeCell = "<td><input id='Isvalid" + index + "' name='inputlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='inputlst.Index' type='hidden' value='" + index + "'  /></td>";
        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + itemid + binid + drum + batchno + time + stock + issueqty + removeCell + "</tr>";
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
         $('.form_time').datetimepicker({
        weekStart: 1,
        todayBtn:  1,
    autoclose: 1,
    todayHighlight: 1,
    startView: 1,
    minView: 0,
    maxView: 1,
    forceParse: 0
    });
    }
    function AppendOutRow(opt, remopt,shed) {
        var index = $("#tbBooksout").children("tr").length;

        var itemid = "<td><select style = 'width: 170px;' class='form-control _select newcss' id='ddlOutItem" + index + "' name='outlst[" + index + "].ItemId' onchange = 'changeOutItem(this.value," + index + ")' ><option value=''>Please select</option>" + opt + "</select></td>";
        var drum = "<td><select style = 'width: 170px;' class='form-control _select newcss' id='ddldrumno" + index + "' name='outlst[" + index + "].drumno' ><option value=''>Please select</option>" + remopt + "</select></td>";
        var bin = "<td><input class='form-control'  id='txtOutBinId" + index + "' name='outlst[" + index + "].BinId' style='width: 100px;' type='text' value='' readonly='true'><input type='hidden' id='txtOutBin" + index + "' name='outlst[" + index + "].OutBin'></td>";
        var time = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtFromTime" + index + "' name='outlst[" + index + "].FromTime' style='width: 70px;' type='text' value='' readonly='readonly' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
         var totime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtToTime" + index + "' name='outlst[" + index + "].ToTime' style='width: 70px;' type='text' value='' readonly='readonly' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
       var stock = "<td><input class='form-control'  id='txtStockQty" + index + "' name='outlst[" + index + "].Stock'  type='text' value='' style = 'width: 80px;text-align:right' onkeydown = 'return isNumeric2(event.keyCode,this.value)' readonly='true' ></td>";
        var qty = "<td><input class='form-control'  id='txtOutputQty" + index + "' name='outlst[" + index + "].OutputQty'  type='text' value='' style = 'width: 100px;text-align:right' onkeydown = 'return isNumeric2(event.keyCode,this.value)' ></td>";
        var excess = "<td><input class='form-control'  id='txtExcessQty" + index + "' name='outlst[" + index + "].ExcessQty'  type='text' value='' style = 'width: 80px;text-align:right' onkeydown = 'return isNumeric2(event.keyCode,this.value)' readonly='true' ></td>";
               var stat="<td><select class='form-control _select newcss' id='ddlstatus" + index + "' name='outlst[" + index + "].StID' style='width: 120px;' onchange = 'changeshed(this.value," + index + ")'><option value=''>Please select</option><option value='COMPLETED'>COMPLETED</option><option value='PENDING'>PENDING</option></select></td>";
                       var shed = "<td><div id='Curing"+ index +"' hidden><select style = 'width: 150px;' class='form-control _select newcss' id='ddlShedNo" + index + "' name='outlst[" + index + "].ShedNo' onchange = 'getoccupied(this.value," + index + ")' ><option value=''>Please select</option>" + shed + "</select></div></td>";
        var occcapp = "<td><div id='SHED" + index + "' hidden> <div style='width:100px'> <label>OCC:</label><label id='occ"+ index +"' style='color:red'></label><label>CAP:</label><label id='cap"+index+"' style='color:red'></label></div></div></td>";
        var qc = "<td> <button type='button' class='btn aqua m - t - xs bottom15 - xs' id='Save' onclick='insertoutputdetails(" + index + ")'>Save </button></td>";
        var test = "<td><input class='form-control'  id='txtResult" + index + "' name='outlst[" + index + "].Result'  type='text' value='' style = 'width: 100px;text-align:right' onkeydown = 'return isNumeric2(event.keyCode,this.value)' readonly='true'></td>";
        var removeCell = "<td><input id='Isoutvalid" + index + "' name='outlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeOutRow(" + index + ");'  style='cursor:pointer' /><input name='outlst.Index' type='hidden' value='" + index + "'  /></td>";
        var newRow = "<tr class='chkitemlstout'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBookout" + index + "'>" + itemid + drum + bin + time + totime +stock + qty + excess + stat + shed + occcapp + qc + removeCell + "</tr>";
        $("#tbBooksout").append(newRow);

        $(function () {
            $('._select').select2();
        });
         $('.form_time').datetimepicker({
        weekStart: 1,
        todayBtn:  1,
    autoclose: 1,
    todayHighlight: 1,
    startView: 1,
    minView: 0,
    maxView: 1,
    forceParse: 0
    });
    }
    function AppendConsRow(opt) {
        var index = $("#tbBooksinc").children("tr").length;
        var itemid = "<td><select style = 'width: 170px;' class='form-control _select newcss' id='ddlConsItem" + index + "' name='Binconslst[" + index + "].ItemId' onchange = 'changeconsItem(this.value," + index + ")' ><option value=''>Please select</option>" + opt + "</select></td>";
        var unit = "<td><input class='form-control'  id='txtconsunit" + index + "' name='Binconslst[" + index + "].consunit' readonly='True' style='width: 100px;' type='text'><input class='form-control' id='txtconsunitid" + index + "' name='Binconslst[" + index + "].unitid' style='width: 100px;' type='hidden' ></td>";
        var bin = "<td><input class='form-control'  id='txtConsBinId" + index + "' name='Binconslst[" + index + "].BinId' readonly='True' style='width: 100px;' type='text' ><input class='form-control'  id='txtConsBin" + index + "' name='Binconslst[" + index + "].consBin' style='width: 100px;' type='hidden'></td>";
        var stock = "<td><input class='form-control' id='txtConsStock" + index + "' name='Binconslst[" + index + "].ConsStock' onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value='0' readonly='true'></td>";
        var qty = "<td><input class='form-control' id='txtconsQty" + index + "' name='Binconslst[" + index + "].consQty' onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 100px;text-align:right' type='text' value='0'></td>";
        var consqty = "<td><input class='form-control'  id='txtQty" + index + "' name='Binconslst[" + index + "].Qty' onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 100px;text-align:right' type='text' value='0'><input  id='hdconsrate" + index + "' name='Binconslst[" + index + "].rate' type='hidden'></td>";
        var removeCell = "<td> <input  id='IsConsvalid" + index + "' name='Binconslst[" + index + "].Isvalid' type='hidden' value='Y'> <img onclick='removeConsRow(" + index + ");' src='../Images/delete.png' style='cursor:pointer'></td>"
        var newRow = "<tr class='chkitemlstinc'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBookinc" + index + "'>" + itemid + unit + bin + stock + qty + consqty + removeCell + "</tr>";
        $("#tbBooksinc").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
    @*  $(document).ready(function () {

        $("#Save").click(function () {
        var i = 0;
        var id = document.getElementById("txtOutAPID" + i).value;
        var ItemId = document.getElementById("ddlOutItem" + i).value;
        var drum = document.getElementById("ddldrumno" + i).value;
        var time = document.getElementById("txtTime" + i).value;
        var qty = document.getElementById("txtOutputQty" + i).value;

        $.ajax({
        url: 'SaveOutDetail',
        data: { "id": id, "ItemId": ItemId, "drum": drum, "time": time, "qty": qty },
        type: "POST",
        success: function (result) {



        },
        error: function () {

        }
        });
        });

        });*@
        function AddEmpRow() {
            var opt = "";
            $.ajax({
                type: "POST",
                url: 'GetEmpJSON',
                success: function (data) {
                    $.each(data, function () {
                        opt += "<option value=" + this.value + ">" + this.text + "</option>";
                    });
                    AppendEmpRow(opt);
                }
            })
        }
    function changeEmployeeItem(ItemId, i) {
        $.ajax({
            url: 'GetEmployeeDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtEmpCode" + i).value = result.code;

                 document.getElementById("txtDepart" + i).value = result.dept;
                document.getElementById("hdempcost" + i).value = result.empcost;
                document.getElementById("hdotcost" + i).value = result.othrs;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function AddBreakRow() {
        var opt = "";
        var remopt = "";
        var breakopt = "";
        $.ajax({
            type: "POST",
            url: 'GetBreakJSON',
            success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                $.ajax({
                    type: "POST",
                    url: 'GetBreakEmpJSON',
                    success: function (data) {
                        $.each(data, function () {
                            remopt += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                        $.ajax({
                    type: "POST",
                    url: 'GetReasonJSON',
                    success: function (data) {
                        $.each(data, function () {
                            breakopt += "<option value=" + this.value + ">" + this.text + "</option>";
                        });
                        AppendBreakRow(opt, remopt,breakopt);
                        
                    }
                })
                  }
                })
            }
        })
    }
    function AppendEmpRow(opt) {
        var index = $("#tbBooksEmp").children("tr").length;
        var empname = "<td><select style = 'width: 170px;' class='form-control _select newcss' id='ddlEmployee" + index + "' name='EmpLst[" + index + "].Employee' onchange = 'changeEmployeeItem(this.value," + index + ")' ><option value=''>Please select</option>" + opt + "</select></td>";

        var code = "<td><input class='form-control'  id='txtEmpCode" + index + "' name='EmpLst[" + index + "].EmpCode' style='width: 100px;'   value=''  readonly='True'><input class='form-control'  id='txtEAPID" + index + "' name='EmpLst[" + index + "].APID' style='width: 100px;'   value='' type='hidden'></td>";

        var Department = "<td><input class='form-control'  id='txtDepart" + index + "' name='EmpLst[" + index + "].Depart' style='width: 120px;'   value=''  readonly='True'></td>";

        var startdate = "<td><div class='input-group date form_date col-sm-8'  data-date-format='dd-M-yyyy'><input class='form-control'  id='txtStartDate" + index + "' name='EmpLst[" + index + "].StartDate' style='width: 100px;' type='text' value=''readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";
        var starttime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtStartTime" + index + "' name='EmpLst[" + index + "].StartTime' style='width: 70px;'   value='' readonly='True' onchange = 'changeehrs(" + index + ")' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var enddate = "<td><div class='input-group date form_date col-sm-8'  data-date-format='dd-M-yyyy'><input class='form-control'  id='txtEndDate" + index + "' name='EmpLst[" + index + "].EndDate' style='width: 100px;' type='text' value='' readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";
        var endtime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtEndTime" + index + "' name='EmpLst[" + index + "].EndTime' style='width: 70px;'   value='' readonly='readonly' onchange = 'changeehrs(" + index + ")' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var othrs = "<td><input class='form-control'  id='txtOTHrs" + index + "' name='EmpLst[" + index + "].OTHrs' style='width: 80px;' type='text' value=''></td>";
        var ethrs = "<td><input class='form-control'  id='txtETOther" + index + "' name='EmpLst[" + index + "].ETOther' style='width: 80px;'   value=''  readonly='True'></td>";
        var nhr = "<td><input class='form-control'  id='txtNormal" + index + "' name='EmpLst[" + index + "].Normal' style='width: 70px;'   value=''  readonly='True'></td>";
        var now = "<td><input class='form-control'  id='txtNow" + index + "' name='EmpLst[" + index + "].Reason' style='width: 120px;'   value=''></td>";

        var removeCell = "<td><input id='IsEmpvalid" + index + "' name='EmpLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeEmpRow(" + index + ");'  style='cursor:pointer' /><input name='inputlst.Index' type='hidden' value='" + index + "'  /></td>";
        var newRow = "<tr class='chkEmpitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBookEmp" + index + "'>" + empname + code + Department + startdate + starttime + enddate + endtime + othrs + ethrs + nhr + now + removeCell + "</tr>";
        $("#tbBooksEmp").append(newRow);


        $(function () {
            $('._select').select2();
        });

        $('.form_date').datetimepicker({
            //   language:  'fr',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });
          $('.form_time').datetimepicker({
        weekStart: 1,
        todayBtn:  1,
    autoclose: 1,
    todayHighlight: 1,
    startView: 1,
    minView: 0,
    maxView: 1,
    forceParse: 0
    });
    }
    
    function AppendBreakRow(opt, remopt,breakopt) {
        var index = $("#tbBooksBreak").children("tr").length;

        var Code = "<td><select style = 'width: 120px;' class='form-control _select newcss' id='ddlMachineId" + index + "' name='BreakLst[" + index + "].MachineId' onchange = 'changeMachineItem(this.value," + index + ")' ><option value=''>Please select</option>" + opt + "</select></td>";
        var Des = "<td><input class='form-control'  id='txtMachineDes" + index + "' name='BreakLst[" + index + "].MachineDes' style='width: 180px;'   value=''></td>";
        var Dtype = "<td><input class='form-control'  id='txtDType" + index + "' name='BreakLst[" + index + "].DType' style='width: 120px;'   value=''></td>";
        var MType = "<td><input class='form-control'  id='txtMType" + index + "' name='BreakLst[" + index + "].MType' style='width: 120px;' type='text' value=''></td>";
       var starttime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtBStartTime" + index + "' name='BreakLst[" + index + "].StartTime' style='width: 70px;'   value='' readonly='readonly' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var endtime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtBEndTime" + index + "' name='BreakLst[" + index + "].EndTime' style='width: 70px;'   value='' readonly='readonly' ><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var PB = "<td><input class='form-control'  id='txtPB" + index + "' name='BreakLst[" + index + "].PB' style='width: 80px;' type='text' value=''></td>";
        var Enterd = "<td><select style = 'width: 140px;' class='form-control _select newcss' id='ddlAlloted" + index + "' name='BreakLst[" + index + "].Alloted' ><option value=''>Please select</option>" + remopt + "</select> </td>";

        var Reason = "<td><select style = 'width: 180px;' class='form-control _select newcss' id='txtReason" + index + "' name='BreakLst[" + index + "].Reason' ><option value=''>Please select</option>" + breakopt + "</select> </td>";
        var removeCell = "<td><input id='IsBreakvalid" + index + "' name='BreakLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeBreakRow(" + index + ");'  style='cursor:pointer' /><input name='inputlst.Index' type='hidden' value='" + index + "'  /></td>";
        var newRow = "<tr class='chkBreakitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBookBreak" + index + "'>" + Code + Des + Dtype + MType + starttime + endtime + PB + Enterd + Reason + removeCell + "</tr>";
        $("#tbBooksBreak").append(newRow);


        $(function () {
            $('._select').select2();
        });
          $('.form_time').datetimepicker({
                weekStart: 1,
                todayBtn:  1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 1,
            minView: 0,
            maxView: 1,
            forceParse: 0
            });

    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }

    @* var i = 0;
            var qty = 0;
            var tot = 0;
            $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
            qty = $(this).find('#txtIssueQty' + i.toString()).val();
            if (qty == "")
            qty = 0;

            tot += eval(qty);
            }
            i += 1;
            });
            document.getElementById("txttotalinqty").value = tot.toFixed(2);*@

                }
    function removeOutRow(id) {
        var table = document.getElementById("dataTableout");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBookout' + id);
        var j = 0;
        $('tr.chkitemlstout').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isoutvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }



    }
    function removeConsRow(id) {
        var table = document.getElementById("dataTableinc");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBookinc' + id);
        var j = 0;
        $('tr.chkitemlstinc').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('IsConsvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }



    }
    function removeEmpRow(id) {
        var table = document.getElementById("dataTableEmp");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBookEmp' + id);
        var j = 0;
        $('tr.chkEmpitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('EmpIsvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function removeBreakRow(id) {
        var table = document.getElementById("dataTableBreak");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBookBreak' + id);
        var j = 0;
        $('tr.chkBreakitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('BreakIsvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    @*  function Stk_Change(wcid) {
        $.ajax({
        url: 'GetStkItem',
        data: { 'wcid': wcid },
        type: "post",
        success: function (result) {
        var newlist;
        newlist = result.Itemlst;
        var j = 0;
        $('tr.chkitemlst').each(function () {
        if ($(this).css('display') !== 'none') {
        PopulateDropDown("#ddlItem" + j, result);
        }
        j += 1;
        });
        },
        error: function () {
        debugger;
        alert("Please Select State");
        }
        });
        }*@
        function changeentry(typeid) {
            if ($('#chkcmp').prop('checked') == true) {
                document.getElementById("go").style.display = "block";
            }
            else {
                document.getElementById("go").style.display = "none";
            }
        }
    function insertinputdetails() {
        var j = 0;
        var i = 0;
        var stk = document.getElementById("txtStockAvailable" + j).value;
        var isValid = true;

        if (stk == 0 ) {
            alert("Stock Qty is Empty So Change the item");
            return false;
        }
        else {
            var ProInput = new Array();
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var order = {};

                    order.ItemId = document.getElementById("ddlItem" + j).value;
                    order.drumno = document.getElementById("ddlInpdrumno" + j).value;
                    order.BinId = document.getElementById("txtBinId" + j).value;
                    order.batchno = document.getElementById("ddlbatchno" + j).value;
                    order.IssueQty = document.getElementById("txtIssueQty" + j).value;
                    order.Time = document.getElementById("txtITime" + j).value;
                    order.APID = document.getElementById("hdapid").value;
                    order.StockAvailable = document.getElementById("txtStockAvailable" + j).value;
                    order.rate = document.getElementById("hditemrate" + j).value;
                    ProInput.push(order);
                   
                }
                 j += 1;
            });

           
            $.ajax({
                type: "POST",
                url: "InsertProInput",
                data: JSON.stringify(ProInput),
                contentType: "application/json",
                dataType: "json",
                success: function (r) {
                    //alert(r + " record(s) inserted.");
                }
            });

           
        }
    }
     function insertinputconsdetails() {
        var j = 0;
        var i = 0;

        var constk = document.getElementById("txtConsStock" + j).value;
        var isValid = true;

        if (constk == 0) {
            alert("Stock Qty is Empty So Change the item");
            return false;
        }
        else {
            var APProInCons = new Array();
            $('tr.chkitemlstinc').each(function () {
                if ($(this).css('display') !== 'none') {
                    var proincons = {};
                    proincons.ItemId = document.getElementById("ddlConsItem" + i).value;
                    proincons.BinId = document.getElementById("txtConsBinId" + i).value;
                    proincons.Qty = document.getElementById("txtQty" + i).value;
                    proincons.consunit = document.getElementById("txtconsunit" + i).value;
                    proincons.consQty = document.getElementById("txtconsQty" + i).value;
                    proincons.APID = document.getElementById("hdapid").value;
                    proincons.ConsStock = document.getElementById("txtConsStock" + i).value;
                    proincons.rate = document.getElementById("hdconsrate" + i).value;
                    APProInCons.push(proincons);

                }
                i += 1;
            });




            $.ajax({
                type: "POST",
                url: "InsertConsInput",
                data: JSON.stringify(APProInCons),
                contentType: "application/json",
                dataType: "json",
                success: function (r) {
                    alert(r);
                    location.reload();
                }
            });

        }
     }
    function insertoutputdetails(e) {
       
                var ItemId = document.getElementById("ddlOutItem" + e).value;
                var drum = document.getElementById("ddldrumno" + e).value;
                var id = document.getElementById("hdapid").value;
               // var BinId = document.getElementById("txtOutBinId" + e).value;
                var time = document.getElementById("txtFromTime" + e).value;
                var totime = document.getElementById("txtToTime" + e).value;
               var qty = document.getElementById("txtOutputQty" + e).value;
                var exqty = document.getElementById("txtExcessQty" + e).value;
                var stat = document.getElementById("ddlstatus" + e).value;
                var ShedNo = document.getElementById("ddlShedNo" + e).value;
                var stock = document.getElementById("txtStockQty" + e).value;

                 
               $.ajax({
                        url: 'InsertProOut',
            data: { "id": id, "ItemId": ItemId, "drum": drum, "time": time, "qty": qty, "totime": totime, "exqty": exqty, "stat": stat,"stock" :stock,"ShedNo": ShedNo },
                        type: "POST",
                        success: function (result) {
document.getElementById("occ" + i).innerHTML= result.occ;
               document.getElementById("cap" + i).innerHTML = result.cap;
                        },
                        error: function () {

                        }
                    });
            }
           

      
    function insertempdetails() {
        var e = 0;

        var EmpDetails = new Array();
        $('tr.chkEmpitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                var emp = {};
                emp.Employee = document.getElementById("ddlEmployee" + e).value;
                emp.EmpCode = document.getElementById("txtEmpCode" + e).value;
                emp.Depart = document.getElementById("txtDepart" + e).value;
                emp.StartDate = document.getElementById("txtStartDate" + e).value;
                emp.StartTime = document.getElementById("txtStartTime" + e).value;
                emp.APID = document.getElementById("hdapid").value;
                emp.EndDate = document.getElementById("txtEndDate" + e).value;
                emp.EndTime = document.getElementById("txtEndTime" + e).value;
                emp.OTHrs = document.getElementById("txtOTHrs" + e).value;
                emp.ETOther = document.getElementById("txtETOther" + e).value;
                emp.Normal = document.getElementById("txtNormal" + e).value;
                emp.NOW = document.getElementById("txtNOW" + e).value;
                emp.OTcost = document.getElementById("hdotcost" + e).value;
                emp.Empcost = document.getElementById("hdempcost" + e).value;
                EmpDetails.push(emp);
                
            }
            e += 1;
        });


        $.ajax({
            type: "POST",
            url: "InsertProEmp",
            data: JSON.stringify(EmpDetails),
            contentType: "application/json",
            dataType: "json",
            success: function (r) {
                //alert(r + " record(s) inserted.");
            }
        });


    }
    function insertbreakdetails() {
        var e = 0;

        var BreakDet = new Array();
        $('tr.chkBreakitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                var brakdet = {};
                brakdet.MachineId = document.getElementById("ddlMachineId" + e).value;
                brakdet.MachineDes = document.getElementById("txtMachineDes" + e).value;


                brakdet.StartTime = document.getElementById("txtBStartTime" + e).value;
                brakdet.APID = document.getElementById("hdapid").value;
                brakdet.PB = document.getElementById("txtPB" + e).value;
                brakdet.EndTime = document.getElementById("txtBEndTime" + e).value;
                brakdet.DType = document.getElementById("txtDType" + e).value;
                brakdet.MType = document.getElementById("txtMType" + e).value;
                brakdet.Reason = document.getElementById("txtReason" + e).value;
                brakdet.Alloted = document.getElementById("ddlAlloted" + e).value;
                BreakDet.push(brakdet);
            
            }
                e += 1;
        });


        $.ajax({
            type: "POST",
            url: "InsertProBreak",
            data: JSON.stringify(BreakDet),
            contentType: "application/json",
            dataType: "json",
            success: function (r) {
                //alert(r + " record(s) inserted.");
            }
        });


    }
    function insertlogdetails() {
        var e = 0;

        var LogDetails = new Array();
        $('tr.chkLogitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                var log = {};
                log.StartDate = document.getElementById("txtLStartDate" + e).value;
                log.EndDate = document.getElementById("txtLEndDate" + e).value;


                log.StartTime = document.getElementById("txtLStartTime" + e).value;
                log.APID = document.getElementById("hdapid").value;

                log.EndTime = document.getElementById("txtLEndTime" + e).value;
                log.tothrs = document.getElementById("txtTotalHrs" + e).value;
                log.Reason = document.getElementById("txtLReason" + e).value;

                LogDetails.push(log);
            
            }
                e += 1;
        });



        $.ajax({
            type: "POST",
            url: "InsertProLog ",
            data: JSON.stringify(LogDetails),
            contentType: "application/json",
            dataType: "json",
            success: function (r) {
                //alert(r + " record(s) inserted.");
            }
        });


    }
    
        function insertBunkdetails() {
       
                var opbin = document.getElementById("txtOPBin").value;
                var powder = document.getElementById("txtPIP").value;
                var id = document.getElementById("hdapid").value;
              
                var grase = document.getElementById("txtGIP").value;
                var totip = document.getElementById("txtTIP").value;
               var top = document.getElementById("txtTOP").value;
                var oxd = document.getElementById("txtOXD").value;
                var trm = document.getElementById("txtTRM").value;
                var clbin = document.getElementById("txtCLBin").value;
                var mlop = document.getElementById("txtMLOP").value;
                var mladd = document.getElementById("txtMLAdd").value;
                var mlded = document.getElementById("txtMLDed").value;
                var mlcl = document.getElementById("txtMLCL").value;

                 
               $.ajax({
                        url: 'InsertProBunk',
            data: { "id": id, "opbin": opbin, "powder": powder, "grase": grase, "totip": totip, "top": top, "oxd": oxd, "trm": trm,"clbin" :clbin,"mlop": mlop ,"mladd":mladd,"mlded":mlded,"mlcl":mlcl},
                        type: "POST",
                        success: function (result) {
             
                        },
                        error: function () {

                        }
                    });
            }
    function refreshrow(i) {

        var id = document.getElementById("txtOutAPID" + i).value;
        var ItemId = document.getElementById("ddlOutItem" + i).value;
        var drum = document.getElementById("ddldrumno" + i).value;

        $.ajax({
            url: 'GetQCResult',
            data: { "id": id, "ItemId": ItemId, "drum": drum },
            type: "POST",
            success: function (result) {
                if (result.res == "No") {
                    alert("QC Not Completed");
                } else {
                    document.getElementById("txtResult" + i).value = result.resdetail;
                    alert("QC Result Updated Successfully");
                }
            },
            error: function () {

            }
        });

    }
     function insertoutsourdetails() {
        var e = 0;

        var SourceDetail = new Array();
        $('tr.chkOutsitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                var emp = {};
                emp.NoOfEmp = document.getElementById("txtNoOfEmp" + e).value;
                emp.StartDate = document.getElementById("txtSStartDate" + e).value;
                emp.StartTime = document.getElementById("txtSStartTime" + e).value;
                emp.APID = document.getElementById("hdapid").value;
                emp.EndDate = document.getElementById("txtSEndDate" + e).value;
                emp.EndTime = document.getElementById("txtSEndTime" + e).value;
                emp.WorkHrs = document.getElementById("txWorkHrs" + e).value;
                emp.EmpCost = document.getElementById("txtEmpCost" + e).value;
               
               
                emp.Expence = document.getElementById("txtExpence" + e).value;
              
                emp.NOW = document.getElementById("txtNOFW" + e).value;
                SourceDetail.push(emp);
               
            }
             e += 1;
        });


        $.ajax({
            type: "POST",
            url: "InsertProOutsource",
            data: JSON.stringify(SourceDetail),
            contentType: "application/json",
            dataType: "json",
            success: function (r) {
                //alert(r + " record(s) inserted.");
            }
        });


    }
     function AddLogRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetReasonJSON',
           success: function (data) {
                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendLogRow(opt);
             }
        })
    }
    
    function AppendLogRow(opt) {
        var index = $("#tbBooksLog").children("tr").length;


        var startdate = "<td><div class='input-group date form_date col-sm-8'  data-date-format='dd-M-yyyy'><input class='form-control'  id='txtLStartDate" + index + "' name='LogLst[" + index + "].StartDate' style='width: 130px;' type='text' value=''readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";
        var starttime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtLStartTime" + index + "' name='LogLst[" + index + "].StartTime' style='width: 120px;'  value='' readonly='True' onchange = 'changeloghrs(" + index + ")'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var enddate = "<td><div class='input-group date form_date col-sm-8'  data-date-format='dd-M-yyyy'><input class='form-control'  id='txtLEndDate" + index + "' name='LogLst[" + index + "].EndDate' style='width: 130px;' type='text' value='' readonly='readonly'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-calendar'></span></span></div></td>";
        var endtime = "<td><div class='input-group date form_time col-md-5' data-date='' data-date-format='hh.ii' data-link-field='dtp_input3' data-link-format='hh.ii'><input class='form-control'  id='txtLEndTime" + index + "' name='LogLst[" + index + "].EndTime' style='width: 120px;'  value='' readonly='True' onchange = 'changeloghrs(" + index + ")'><span class='input-group-addon'><span class='glyphicon glyphicon-remove'></span></span> <span class='input-group-addon'><span class='glyphicon glyphicon-time'></span></span></div></td>";
        var total = "<td><input class='form-control'  id='txtTotalHrs" + index + "' name='LogLst[" + index + "].tothrs' style='width: 100px;' type='text' value=''></td>";
        var reason = "<td><select style = 'width: 180px;' class='form-control _select newcss' id='txtLReason" + index + "' name='LogLst[" + index + "].Reason' ><option value=''>Please select</option>" + opt + "</select> </td>";


        var removeCell = "<td><input id='LogIsvalid" + index + "' name='LogLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeLogRow(" + index + ");'  style='cursor:pointer' /><input name='LogLst.Index' type='hidden' value='" + index + "'  /></td>";
        var newRow = "<tr class='chkLogitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBookLog" + index + "'>" + startdate + starttime + enddate + endtime + total + reason + removeCell + "</tr>";
        $("#tbBooksLog").append(newRow);


        $(function () {
            $('._select').select2();
        });

        $('.form_date').datetimepicker({
            //   language:  'fr',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0
        });

          $('.form_time').datetimepicker({
            weekStart: 1,
            todayBtn:  1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 1,
        minView: 0,
        maxView: 1,
        forceParse: 0
        });
    }
      function changeehrs(i){
         var frtime = document.getElementById("txtStartTime"+i).value;
       var entime = document.getElementById("txtEndTime"+i).value;
       
       if (frtime == "")
                        frtime = 0;

        if (entime == "")
                        entime = 0;
        
            var tothrs=eval(entime)-eval(frtime);
           
            var rohrs = Math.ceil(tothrs);
            document.getElementById("txtETOther" +i).value=rohrs;
    }
        function changehrs(tohr, i) {
       var frtime = document.getElementById("txtSStartTime"+i).value;
       var entime = document.getElementById("txtSEndTime"+i).value;

        
            var tothrs=eval(tohr)-eval(frtime);
            var rohrs = Math.ceil(tothrs);
            document.getElementById("txWorkHrs" +i).value=rohrs ;

        var cost = document.getElementById("txtEmpCost" + i).value;
        var noemp = document.getElementById("txtNoOfEmp"+i).value;

         if (cost == "")
                        cost = 0;

        if (noemp == "")
                        noemp = 0;

        var totexp = eval(rohrs) * eval(cost) *eval(noemp);
        document.getElementById("txtExpence" + i).value = totexp;
    }
    function changeloghrs(i){
         var frtime = document.getElementById("txtLStartTime"+i).value;
       var entime = document.getElementById("txtLEndTime"+i).value;
        if (frtime == "")
                        frtime = 0;

        if (entime == "")
                        entime = 0;
       @* alert(eval(entime));
        alert(eval(frtime));*@
            var tothrs=eval(entime)-eval(frtime);
            var rohrs = Math.ceil(tothrs);
            document.getElementById("txtTotalHrs" +i).value=rohrs ;
    }
      function changeexpence(_this, i) {
        var workhrs = document.getElementById("txWorkHrs" + i).value;
        var cost = document.getElementById("txtEmpCost" + i).value;
         var noemp = document.getElementById("txtNoOfEmp"+i).value;
         if (cost == "")
                        cost = 0;

        if (workhrs == "")
                        workhrs = 0;

                         if (noemp == "")
                        noemp = 0;

        var expence = eval(workhrs) * eval(cost) *eval(noemp);

        document.getElementById("txtExpence" + i).value = expence;
    }
     function chempexpence(_this, i) {
        var othrs = document.getElementById("txtOTHrs" + i).value;
        var tothrs = document.getElementById("txtETOther" + i).value;
         
         if (othrs == "")
                        othrs = 0;

        if (tothrs == "")
                        tothrs = 0;


        var nrhr = eval(tothrs) - eval(othrs);

            document.getElementById("txtNormal" + i).value = nrhr;
    }
     function removeOutsRow(id) {
       var table = document.getElementById("dataTableOuts");
      var rowCount = table.rows.length;
       var row = document.getElementById('trBookOuts' + id);
       var j = 0;
       $('tr.chkOutsitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
       if (j > 1) {
           row.style.display = "none";
         document.getElementById('OutsIsvalid' + id).value = "N";
     }
       else {
            alert("Cannot delete all the rows.")
        }
    }
    function removeLogRow(id) {
        var table = document.getElementById("dataTableLog");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBookLog' + id);
        var j = 0;
        $('tr.chkLogitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('LogIsvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }

    }
    function changewc(wcid) {
    @*var url = '@Url.Action("GetWcRec", "PyroProduction")?wcid=' + wcid;
            window.location.href = url;*@
                var shift = document.getElementById("ddlShift").value;
        $.ajax({
            url: 'GetWcRec',
            data: { "wcid": wcid, "shift": shift },
            type: "POST",
            success: function (result) {
                if (result.res == "No") {
                    window.location.href = "PyroProduction?tag=" + wcid + "&shift=" + shift;
                }
                else {
                    window.location.href = "PyroProduction?id=" + result.url;
                }

            },
            error: function () {

            }
        });
    }
</script>
<a class="fancybox1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<a class="fancyboxe1" rel="group" data-fancybox-type="iframe" href="#" style="display: none; width: 760px;"></a>
<link rel="stylesheet" href="@Url.Content("~/css/jquery.fancybox.css?v=2.1.5")" type="text/css" media="screen" />
<script type="text/javascript" src="@Url.Content("~/css/jquery.fancybox.pack.js?v=2.1.5")"></script>
<script type="text/javascript">
    var fancybox123;
    jQuery(document).ready(function ($) {
        $(".fancybox").fancybox({
            width: '80%',
            height: '10%',
            arrows: false,
            afterClose: function () {
                location.href = "/PyroProduction/ListPyroProduction";
            }
        });
        fancybox123 = $.fancybox;
    });
    function close_popup() {
        fancybox123.close();
        $(".fancybox1").fancybox({
            width: '100%',
            height: '100%',
            arrows: false,
        });
        $(".fancybox1").eq(0).trigger('click');
    }
</script>

