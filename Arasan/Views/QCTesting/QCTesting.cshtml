@model Arasan.Models.QCTesting
@{
    ViewData["Title"] = "QC Testing";
}
<style>
    
    .mandatory{
	color: red;
	position:relative;
	top:2px;
	left:5px;
}
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Quality Control</a> </li>
            <li class="active"> <strong>  QC Testing </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px"> QC Testing</h5>
                    <hr>
                    @using (Html.BeginForm("QCTesting", "QCTesting", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                    <form>
                        <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">GRN<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.HiddenFor(C => C.APID)
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.temp)
                                            @Html.HiddenFor(C => C.detid)
                                            @Html.TextBoxFor(C => C.GRNNo, new { @id = "GRNNo", @class = "form-control", @TabIndex = 2,@readonly="readonly" })
                                            
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /><label for="inputName3" class="col-sm-4 control-label">GRN Date<label class="mandatory">*</label></label>

                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.GRNDate, new { @id = "GRNDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                        <input type="hidden" id="dtp_input2" value="" readonly />

                                    </div>
                                </div>
                        </div>
                             <div class="row">
                                <div class="col-md-6">
                                  <div class="form-group">
                                    <label for="inputName3" class="col-sm-4 control-label">Party <label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Party, new { @id = "Party", @class = "form-control", @TabIndex = 2,@readonly="readonly" })<br />
                                            @Html.HiddenFor(C => C.Partyid)
                                    </div>
                                </div>
                                </div>

                             </div>

                        <div class="row">
                               <div class="col-md-6">
                                <div class="form-group">
                                    <label for="inputName3" class="col-sm-4 control-label">Doc Id<label class="mandatory">*</label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocId, new { @id = "DocId", @class = "form-control", @TabIndex = 2,@readonly="readonly" })
                                            @Html.HiddenFor(C => C.ID)
                                    </div>
                                </div>
                            </div>
                         
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Doc Date<label class="mandatory">*</label></label>


                                    <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                        @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    </div>
                                    <input type="hidden" id="dtp_input2" value="" readonly />
                                   
                                </div>
                            </div>
                        </div>

                       @* <div style="height:30px;"></div>*@
                       
                     
									 <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Item <label class="mandatory">*</label></label>
                                                <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ItemId, new { @id = "ItemId", @class = "form-control", @TabIndex = 2,@readonly="readonly" })<br />
                                            @Html.HiddenFor(C => C.Item)
                                                </div>
                                            </div>
                                        </div>
                                 <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">SI No<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(C => C.SNo, new { @id = "SNo", @class = "form-control", @TabIndex = 2})<br />
                                    </div>
                                </div>
                            </div>
                            </div>
                            <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="inputName3" class="col-sm-4 control-label">Class Code<label class="Mandatory"></label></label>

                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(C => C.ClassCode, new { @id = "ClassCode", @class = "form-control", @TabIndex = 2,@maxlength = 1})<br />
                                    </div>

                                </div>
                            </div>
                      
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Lot No<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(C => C.LotNo, new { @id = "LotNo", @class = "form-control", @TabIndex = 2})<br />
                                    </div>
                                </div>
                            </div>
                            </div>
                            <div class="row">
                              <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">GRN/Prod.Qty<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.GRNProd, new { @id = "txtGRN", @class = "form-control", @TabIndex = 2})<br />
                                        </div>
                                </div>
                            </div>
                        
                            <div class="col-md-6">
                                            <div class="form-group">
                                            
                                                <label for="inputName3" class="col-sm-4 control-label">Test Procedure<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                        @Html.TextBoxFor(C => C.Procedure, new { @id = "ClassCode", @class = "form-control", @TabIndex = 2})<br />
                                                </div>
                                            </div>
                                        </div>

                        </div>
                     

                            <div style="height:30px;"></div>
                          @*  <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>*@


                            <div class="col-lg-12">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">


                                    <!-- / ibox-title -->
                                   
                                                <table class="table table-striped table-hover" id="dataTable">
                                                    <thead>
                                                        <tr>
                                                <th>Description</th>
                                                <th> Value Or Manual </th>
                                                <th> Unit </th>
                                                <th> Start Value </th>
                                                <th> End Value</th>
                                                <th> Test Value </th>
                                                <th> Manual Value </th>
                                                <th> Actual TestValue </th>
                                                <th> Test Result </th>
                                                        </tr>
                                                    </thead>
                                        <tbody id="tbBooks">

                                            @{

                                                int i = 0;

                                                foreach (var item in Model.QCGRNLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">

                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].description, new { @id = "txtDescription" + i, @class = "form-control", style = "width: 90px;",@readonly="readonly"})
                                                            @Html.HiddenFor(o => o.QCGRNLst[i].apid, new { @id = "txtAPID" + i, @class = "form-control", style = "width: 100px;"})
                                                            @Html.HiddenFor(o => o.QCGRNLst[i].testid, new { @id = "txttestid" + i, @class = "form-control", style = "width: 100px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].value, new { @id = "txtValue" + i, @class = "form-control", style = "width: 90px;",@readonly="readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 90px;",@readonly="readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].startvalue, new { @id = "txtStartvalue" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].endvalue, new { @id = "txtEndvalue" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].test, new { @id = "txtTeste" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].manual, new { @id = "txtManual" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].actual, new { @id = "txtActual" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QCGRNLst[i].testresult, new { @id = "txtTestResult" + i, @class = "form-control", style = "width: 90px;"})
                                                        </td>


                                                        <td>
                                                            @Html.HiddenFor(o => o.QCGRNLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="QCGRNLst.Index" type="hidden" value="@(i)" />
                                                        </td>

                                                    </tr>

                                                    i = i + 1;

                                                }
                                            }

                                        </tbody>
                                                </table>
                                 </div>
                             </div> 
                        <div style="height:30px;"></div>
                        <div class="row">
                            <div class="col-md-6"> 
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Test Result<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(C => C.TestResult, new { @id = "TestResult", @class = "form-control", @TabIndex = 2})
                                    </div>
                                </div>
                            </div>
                          
                             <div class="col-md-6">
                                <div class="form-group">
                                    <label for="inputName3" class="col-sm-4 control-label">Tested By<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.TestBy, new { @id = "txtTestBy", @class = "form-control", @TabIndex = 2})<br />
                                            
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div style="height:30px;"></div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-2 control-label">Remarks<label class="Mandatory"></label></label>
                                    <div class="col-sm-10">
                              @Html.TextAreaFor(C => C.Remarks, new { @id = "Remarks", @class = "form-control", @TabIndex = 2})

                                    </div>
                                </div>
                            </div>

                        </div>
                       
                        <div style="height:30px;"></div>
                        <div class="col-lg-10"></div>
                      <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                        <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListQCTesting", "QCTesting")'">Cancel</button>
 
                    </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>
<script>
  
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("ddlGRNNo").value == "" || document.getElementById("ddlGRNNo").value == 0) {
                isValid = false;
                $(ddlGRNNo_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select GRN or PO");
                return false;
            }
            else {
                $(ddlGRNNo_chzn).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("GRNDate").value == "") {
                isValid = false;
                $(GRNDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select GRN Date");
                return false;
            }
            else {
                $(GRNDate).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("DocId").value == "") {
                isValid = false;
                $(DocId).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Doc Id");
                return false;
            }
            else {
                $(DocId).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("DocDate").value == "") {
                isValid = false;
                $(DocDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Doc Date");
                return false;
            }
            else {
                $(DocDate).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlParty").value == "" || document.getElementById("ddlParty").value == 0) {
                isValid = false;
                $(ddlParty_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Party");
                return false;
            }
            else {
                $(ddlParty_chzn).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlItemId").value == "" || document.getElementById("ddlItemId").value == 0) {
                isValid = false;
                $(ddlItemId_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Item");
                return false;
            }
            else {
                $(ddlItemId_chzn).css({
                    "border": "",
                    "background": ""
                });
            }
        });

    });

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    @*  function changeType(id) {
        $.ajax({
            url: "GetTypeJSON",
            type: "post",
            data: { 'GPID': id },
            cache: false,
            success: function (response) {
                var newlist;
                newlist = response.Typlst;
                PopulateDropDown("#ddlGRNNo", response);
            },
            error: function () {
                debugger;
                alert("Please Select Type");
            }
        });
      }*@
    function changeItem(ItemId) {
         
        $.ajax({
            url: 'GetGRNDetail',
            data: { "ItemId": ItemId  },
            type: "GET",
            success: function (result) {

                document.getElementById("GRNDate").value = result.grndate;
              
            },
            error: function () {
                alert("Data Not Found");
            }
        });
  
          $.ajax({
            url: "GetGRNItemJSON",
            type: "post",
                data: { 'supid': ItemId },
            cache: false,
            success: function (response) {
                var newlist;
                    newlist = response.Itemlst;
                PopulateDropDown("#ddlItemId", response);
            },
            error: function () {
                debugger;
                alert("Please Select GRN ID");
            }
        }); 
          

          $.ajax({
            url: "GetGRNSuppJSON",
            type: "post",
                data: { 'suppid': ItemId },
            cache: false,
            success: function (response) {
                var newlist;
                    newlist = response.Itemlst;
                PopulateDropDown("#ddlParty", response);
            },
            error: function () {
                debugger;
                alert("Please Select GRN ID");
            }
        });
    
    }
   function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    $(function () {
        $('._select').select2();
    });
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
  }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;


        var Description = "<td><input class='form-control' id='txtDescription" + index + "' name='QCGRNLst[" + index + "].description'  style='width: 90px;' type='text'   /></td>"

        var Value = "<td><input class='form-control' id='txtValue" + index + "' name='QCGRNLst[" + index + "].Value'  style='width: 90px;' type='text'   /></td>"

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='QCGRNLst[" + index + "].Unit'  style='width: 90px;' type='text'   /></td>"

        var Startvalue = "<td><input class='form-control' id='txtStartvalue" + index + "' name='QCGRNLst[" + index + "].Startvalue'  style='width: 90px;' type='text'   /></td>"

        var Endvalue = "<td><input class='form-control' id='txtEndvalue" + index + "' name='QCGRNLst[" + index + "].Endvalue'  style='width: 90px;' type='text'   /></td>"

        var Test = "<td><input class='form-control' id='txtTest" + index + "' name='QCGRNLst[" + index + "].Test'  style='width: 90px;' type='text'   /></td>"

        var Manual = "<td><input class='form-control' id='txtManual" + index + "' name='QCGRNLst[" + index + "].Manual'  style='width: 90px;' type='text'   /></td>"

        var Actual = "<td><input class='form-control' id='txtActual" + index + "' name='QCGRNLst[" + index + "].Actual'  style='width: 90px;' type='text'   /></td>"

        var TestResult = "<td><input class='form-control' id='txtTestResult" + index + "' name='QCGRNLst[" + index + "].TestResult'  style='width: 90px;' type='text'   /></td>"


        var removeCell = "<td><input id='Isvalid" + index + "' name='QCGRNLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='QCGRNLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Description + Value + Unit + Startvalue + Endvalue + Test + Manual + Actual + TestResult + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }
    $(function () {
        var Item = '@ViewBag.ItemId';
        changeItem(Item);
    });
    function changeItem(Item) {
        document.getElementById("tbBooks").innerHTML = "";
        $.ajax({
            url: 'GetItemDetails1',
            type: "post",
            data: { "id": Item },
            cache: false,

            success: function (list) {
                //if (list != null && list.length > 0) {
                list.forEach((item) => {

                    var index = $("#tbBooks").children("tr").length;
                    //alert(item.batch);
                    var Description = "<td><input class='form-control' id='txtDescription" + index + "' name='QCGRNLst[" + index + "].description'  style='width: 90px;' type='text' readonly='readonly' value=" + item.description + "   /><input class='form-control' id='txttestid" + index + "' name='QCGRNLst[" + index + "].testid'  style='width: 90px;' type='hidden' readonly='readonly' value=" + item.testid + "   /></td>"

                    var Value = "<td><input class='form-control' id='txtValue" + index + "' name='QCGRNLst[" + index + "].value'  style='width: 90px;' type='text' readonly='readonly' value=" + item.value + "  /></td>"

                    var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='QCGRNLst[" + index + "].unit'  style='width: 90px;' type='text' readonly='readonly'  value=" + item.unit + " /></td>"

                    var Startvalue = "<td><input class='form-control' id='txtStartvalue" + index + "' name='QCGRNLst[" + index + "].startvalue'  style='width: 90px;' type='text' readonly='readonly'  value=" + item.startvalue + " /></td>"

                    var Endvalue = "<td><input class='form-control' id='txtEndvalue" + index + "' name='QCGRNLst[" + index + "].endvalue'  style='width: 90px;' type='text' readonly='readonly' value=" + item.endvalue + " /></td>"

                    var Test = "<td><input class='form-control' id='txtTest" + index + "' name='QCGRNLst[" + index + "].test'  style='width: 90px;' type='text'   /></td>"

                    var Manual = "<td><input class='form-control' id='txtManual" + index + "' name='QCGRNLst[" + index + "].manual'  style='width: 90px;' type='text'   /></td>"

                    var Actual = "<td><input class='form-control' id='txtActual" + index + "' name='QCGRNLst[" + index + "].actual'  style='width: 90px;' type='text'   /></td>"

                    var TestResult = "<td><input class='form-control' id='txtTestResult" + index + "' name='QCGRNLst[" + index + "].testresult'  style='width: 90px;' type='text'   /></td>"


                    var removeCell = "<td><input id='Isvalid" + index + "' name='QCGRNLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='QCGRNLst.Index' type='hidden' value='" + index + "'  /></td>";

                    var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + Description + Value + Unit + Startvalue + Endvalue + Test + Manual + Actual + TestResult + removeCell + "</tr>";

                    $("#tbBooks").append(newRow);
                });
                //}
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }

</script>