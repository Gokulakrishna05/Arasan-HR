@model Arasan.Models.QcTemplate

@{
    ViewData["Title"] = "QC Template";
}
<style>
    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>

<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a href="@Url.Action("ListQCTemplate", "QCTemplate")">QC Template</a> </li>
            <li class="active"> <strong> QC Template  </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">

                    <hr>
                    @using (Html.BeginForm("QcTemplate", "QcTemplate", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <form>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Qc Template<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Qc, new { @id = "txtQc", @class = "form-control", @TabIndex = 2})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Test Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Test, new { @id = "txtTest", @class = "form-control", @TabIndex = 2})
                                            @Html.HiddenFor(C => C.ID)
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Set By<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Set , Model.assignList,"---Please Select---",  new { @id = "ddlSet", @Class = "form-control _select", @TabIndex = 1 })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Template Description<label class="mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Description, new { @id = "txtDescription", @class = "form-control", @TabIndex = 2})
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                               @* <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Qc Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Type, new { @id = "txtType", @class = "form-control", @TabIndex = 2})
                                        </div>

                                    </div>
                                </div>*@
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Test Procedure<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Procedure, new { @id = "txtProcedure", @class = "form-control", @TabIndex = 2})
                                            
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Sampling %<label class="mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Samplingper, new { @id = "txtSamplingper", @class = "form-control", @TabIndex = 2 })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">I Level<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.Level, new { @id = "txtLevel", @class = "form-control", @TabIndex = 2 })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                <th>Test Desc</th>
                                                <th>Unit</th>
                                                <th>Value Or Manual </th>
                                                <th>Start Value</th>
                                                <th>End Value</th>


                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">

                                            @{

                                                int i = 0;

                                                foreach (var item in Model.QcLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        <td>
                                                            @Html.DropDownListFor(o => o.QcLst[i].ItemDesc, Model.QcLst[i].Desclst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItemDesc" + i, style = "width: 200px;", onchange = "changeItem(this.value," + i + ")"})

                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QcLst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 120px;" ,@readonly="readonly"})
                                                            @Html.HiddenFor(o => o.QcLst[i].Un, new { @id = "txtUn" + i })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QcLst[i].Value, new { @id = "txtValue" + i, @class = "form-control", style = "width: 120px;" ,@readonly="readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QcLst[i].Start, new { @id = "txtStart" + i, @class = "form-control", style = "width: 120px;"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QcLst[i].End, new { @id = "txtEnd" + i, @class = "form-control", style = "width: 120px;"})
                                                        </td>
                                                      

                                                        <td>
                                                            @Html.HiddenFor(o => o.QcLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="EnqLst.Index" type="hidden" value="@(i)" />
                                                        </td>
                                                    </tr>
                                                    i = i + 1;


                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>


                            </div>


                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" name="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave" value="Save" tabindex="18">Save</button>
                            <a button class="btn btn-danger" type="submit" href="@Url.Action("ListQcTemplate", "QcTemplate")">Cancel</a>

                        </form>
                    }
                </div>

            </div>

        </div>

    </div>

</div>
<script>

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
</script>

<script>

    $(function () {
        $('._select').select2();
    });
    function changeItem(ItemId, i) {
        $.ajax({
            url: 'GetQCTestDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;
                document.getElementById("txtValue" + i).value = result.value;
                document.getElementById("txtUn" + i).value = result.un;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function PopulateDropDown(dropDownId, list) 
    {
        //alert(list);
        $(dropDownId).empty().append();
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetQcItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    function AppendRow(opt)
    {
        var index = $("#tbBooks").children("tr").length;

        var ItemDesc = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItemDesc" + index + "' name='QcLst[" + index + "].ItemDesc' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='QcLst[" + index + "].Unit'  style='width: 120px;' type='text' ReadOnly='readonly'  /></td>";

        var Value = "<td><input class='form-control' id='txtValue" + index + "' name='QcLst[" + index + "].Value'  style='width: 120px;' type='text' ReadOnly='readonly'  /></td>";

        var Start = "<td><input class='form-control' id='txtStart" + index + "' name='QcLst[" + index + "].Start'  style='width: 120px;' type='text'  /></td>";

        var End = "<td><input class='form-control' id='txtEnd" + index + "' name='QcLst[" + index + "].End'  style='width: 120px;' type='text'  /></td>";

        var removeCell = "<td><input id='Isvalid" + index + "' name='QcLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='BatchLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + ItemDesc + Unit + Value + Start + End + removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);
        $(function () {
            $('._select').select2();
        });
    }
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    $(".chosen-select").chosen();
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("txtQc").value == "") {
                isValid = false;
                $(txtQc).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Qc Template");
                return false;
            }
            else {
                $(txtQc).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtTest").value == "") {
                isValid = false;
                $(txtTest).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Test Type");
                return false;
            }
            else {
                $(txtTest).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("ddlSet").value == "") {
                isValid = false;
                $(ddlSet).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Set By ");
                return false;
            }
            else {
                $(ddlSet).css({
                    "border": "",
                    "background": ""
                });
            }
            if (document.getElementById("txtType").value == "") {
                isValid = false;
                $(txtType).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Qc Type");
                return false;
            }
            else {
                $(txtType).css({
                    "border": "",
                    "background": ""
                });
            }
           

        });

    });
</script>