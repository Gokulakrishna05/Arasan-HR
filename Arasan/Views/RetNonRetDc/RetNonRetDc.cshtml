@model Arasan.Models.RetNonRetDc
@{
    ViewData["Title"] = "Returnable NonReturnable Dc";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<style>
    .newwidth {
        width: 120px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Store Management</a> </li>
            <li class="active"> <strong> Returnable NonReturnable Dc </strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Returnable NonReturnable Dc</h5>
                    <hr>
                    @using (Html.BeginForm("RetNonRetDc", "RetNonRetDc", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <form>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Stock Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Stock, Model.Stocklst,"--Please select--", new { @id = "ddlStock", @Class = "form-control  _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /><label for="inputName3" class="col-sm-4 control-label">Location<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Location, Model.Loclst,"--Please select--", new { @id = "ddlLocation", @Class = "form-control  _select", @TabIndex = 1 ,@onchange="changeItemDet(this.value)"})


                                            @Html.HiddenFor(C => C.Branch,new{@id="branch"})

                                            @Html.HiddenFor(C => C.Entered)
                                            @Html.HiddenFor(C => C.Part)
                                            @Html.HiddenFor(C => C.Branch)

                                            @Html.HiddenFor(C => C.ID)
                                        </div>
                                    </div>
                                </div>
                                </div>
                                <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">D.C Type<label class="mandatory">*</label></label>


                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.DcType, Model.typelst,"--Please select--", new { @id = "ddlDcType", @Class = "form-control  _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Document ID<label class="mandatory">*</label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Did, new { @id = "txtDid", @class = "form-control", @TabIndex = 1 })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Document Date<label class="mandatory">*</label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.DDate, new { @id = "DDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Party ID<label class="mandatory">*</label></label>

                                       <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Party, Model.Partylst,"--Please select--", new { @id = "ddlParty", @Class = "form-control  _select", @TabIndex = 1 , @onchange = "changeItem(this.value);" })

                                       </div>

                                    </div>
                                </div>

                                
                            </div>
                            <div class="row">
                                 <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Address 1<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Add1, new { @id = "txtAdd1", @class = "form-control", @TabIndex = 2 /*,@readonly=true*/ })

                                        </div>

                                    </div>
                                </div>
                                 <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Address 2<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Add2, new { @id = "txtAdd2", @class = "form-control", @TabIndex = 2/*,@readonly=true*/ })

                                        </div>
                                    </div>
                                </div>
                                
                               
                                
                            </div>
                              <div class="row">
                               
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">City<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.City, new { @id = "txtCity", @class = "form-control", @TabIndex = 2/*,@readonly=true*/ })

                                        </div> 

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Through<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Through, new { @id = "txtThrough", @class = "form-control", @TabIndex = 1 })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Ref No<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Ref, new { @id = "txtRef", @class = "form-control", @TabIndex = 1 })
                                        </div>

                                    </div>
                                </div>
                                 <div class="col-md-6">
                                    <div class="form-group">

                                        <br />     <label for="inputName3" class="col-sm-4 control-label">Ref Date<label class="Mandatory"></label></label>
                                        <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.RefDate, new { @id = "RefDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                           
                          
                            <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Delivery Date<label class="Mandatory"></label></label>
                                   <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.Delivery, new { @id = "Delivery", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                        </div>
                                </div>
                            </div>
                           </div>

                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                   
                                    <table class="table table-striped table-hover" id="dataTable">
                                        <thead>
                                            <tr>

                                                
                                               @* <th> Sub Group </th>*@
                                                <th> Item </th>
                                                <th> Unit </th>
                                                <th> Current Stock </th>
                                                <th> Qty </th>
                                                
                                                <th> Pur Rate </th>
                                                <th> Rate </th>
                                                <th> Amount </th>
                                                <th> Transaction Purpose </th>

                                            </tr>
                                        </thead>
                                        <tbody id="tbBooks">

                                            @{

                                                int i = 0;
                                                int j = 1;
                                                foreach (var item in Model.RetLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">


                                                       @*  <td>
                                                            @Html.DropDownListFor(o => o.RetLst[i].subgrp, Model.RetLst[i].Sublst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlsubgrp" + i, style = "width: 200px;", onchange = "Grup_Change(this.value," + i + ")"})
                                                            @Html.HiddenFor(o => o.RetLst[i].saveItemId)
                                                        </td>*@
                                                        <td>
                                                            @Html.DropDownListFor(o => o.RetLst[i].item, Model.RetLst[i].Itemlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeRetItem(this.value," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.RetLst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;" ,@readonly="readonly"})
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.RetLst[i].Current, new { @id = "txtCurrent" + i, @class = "form-control", style = "width: 80px;",@readonly="readonly" })
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.RetLst[i].Qty, new { @id = "txtQty" + i, @class = "form-control", style = "width: 80px;" , @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                         
                                                         <td>
                                                            @Html.TextBoxFor(o => o.RetLst[i].PurRate, new { @id = "txtPurRate" + i, @class = "form-control", style = "width: 80px;"})
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.RetLst[i].Rate, new { @id = "txtRate" + i, @class = "form-control", style = "width: 80px;"  , @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                         <td>
                                                            @Html.TextBoxFor(o => o.RetLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control", style = "width: 80px;"  })
                                                        </td>
                                                        <td>

                                                            @Html.TextBoxFor(o => o.RetLst[i].Transaction, new { @id = "txtTransaction" + i, @class = "form-control", style = "width: 130px;" })

                                                           

                                                        </td>
                                                       

                                                        <td>
                                                            @Html.HiddenFor(o => o.RetLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Partylst.Index" type="hidden" value="@(i)" />
                                                        </td>

                                                    </tr>

                                                    i = i + 1;
                                                    j = j + 1;
                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div> 

                           

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-2 control-label">Narration<label class="Mandatory"></label></label>
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(C => C.Narration, new { @id = "txtNarration", @class = "form-control", @TabIndex = 1  })

                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Approved By<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Approved, Model.applst,"--Please select--", new { @id = "ddlApproved", @Class = "form-control  _select", @TabIndex = 1 })

                                        </div>
                                    </div>
                                </div>
                                
                              
                                 <div class="col-md-6">
                                  <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Approval 2 <label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Approval2, Model.apprlst,"--Please select--", new { @id = "ddlApproval2", @Class = "form-control  _select", @TabIndex = 1 })

                                        </div>
                                   </div>
                                 </div>
                            </div>


                            <div style="height:30px;"></div>
                            <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListRetNonRetDc", "RetNonRetDc")'">Cancel</button>

                        </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>


 <script>

    $(function () {
        $('._select').select2();
    });
    function PopulateDropDown(dropDownId, list)
    {
       @* alert(list);*@
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option> </option>").val(this['value']).html(this['text']));
            });
        }
        
        $(dropDownId).trigger("liszt:updated");
    }
  
    $(function () {
        $('._select').select2();
    });
    function changeItemDet(ItemId) {
              var type = document.getElementById("ddlStock").value;

        $.ajax({
            url: "GetStockItemJSON",
            type: "post",
            data: { 'ItemId': ItemId,'type':type },
            cache: false,
            success: function (response) {
                var newlist;
                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                var i = 0;
                $('tr.chkitemlst').each(function () {
                    if ($(this).css('display') !== 'none') {
                        PopulateDropDownn("#ddlItem" + i, response);
                        i += 1;
                    }
                });
            },
            error: function () {
                debugger;
                alert("Please Select Location");
            }
        });
    }
    $(".chosen-select").chosen();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
   

    function AddRow() {
        var opt = "";
          var ItemId = document.getElementById("ddlLocation" ).value;
           var type = document.getElementById("ddlStock" ).value;
        $.ajax({
            type: "POST",
            url: 'GetStockItemJSON',
             data: { 'ItemId': ItemId,'type':type },
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }

    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }

    //function changeGroup(ItemId) {

    //    $.ajax({
    //        url: 'GetLedgerJSON',
    //        data: { "ItemId": ItemId },
    //        type: "post",
    //        success: function (response) {
    //            var newlist;
    //            newlist = response.Itemlst;
    //            PopulateDropDown("#ddlLedger", response);
    //        },
    //        error: function () {
    //            debugger;
    //            alert("Please Select Ledger");
    //        }
    //    });
    //}


    function Grup_Change(itemid, i) {
        //alert(itemid);
        //debugger;
        $.ajax({
            url: "GetItemJSON",
            type: "post",
            data: { 'itemid': itemid },
            cache: false,
            success: function (response) {
                var newlist;
                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                PopulateDropDown("#ddlItem" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select Item Group");
            }
        });
    }


    function changeItem(ItemId) {
        $.ajax({
            url: 'GetPartyDetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtAdd1").value = result.add;
                document.getElementById("txtAdd2").value = result.address;
                document.getElementById("txtCity").value = result.city;

            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
     function PopulateDropDownn(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
     function changeRetItem(ItemId, i) {
         var loc = document.getElementById("ddlLocation" ).value;
        var branch = document.getElementById("branch").value;
        var type = document.getElementById("ddlStock").value;
         $.ajax({
            url: 'GetRetItemDetail',
            data: { "ItemId": ItemId, "loc": loc, "branch": branch, "type": type },
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;
                document.getElementById("txtPurRate" + i).value = result.purrate;
                document.getElementById("txtCurrent" + i).value = result.totalstock;
                
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }

        $('.form_date').datetimepicker({
            //   language:  'fr',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0

        });

    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length; 

        var SubGrp = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlSubGrp" + index + "' name='RetLst[" + index + "].subgrp' onchange = 'Grup_Change(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";


        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='Itemlst[" + index + "].item' onchange = 'changeRetItem(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='RetLst[" + index + "].Unit'  style='width: 80px;' type='text'  readonly='True' /></td>";
        var Current = "<td><input class='form-control' id='txtCurrent" + index + "' name='RetLst[" + index + "].Current'    style='width: 80px;' type='text'  readonly='True' /></td>";
        var Qty = "<td><input class='form-control' id='txtQty" + index + "' name='RetLst[" + index + "].Qty'  style='width: 80px;' type='text' onkeyup = 'changeQty(this," + index + ")' /></td>";
        var Trans = "<td><input class='form-control' id='txtTrans" + index + "' name='RetLst[" + index + "].Transaction'   style='width: 80px;' type='text'  /></td>";
        var Purrate = "<td><input class='form-control' id='txtPurRate" + index + "' name='RetLst[" + index + "].PurRate'   style='width: 80px;' type='text'  /></td>";
        var rate = "<td><input class='form-control' id='txtRate" + index + "' name='RetLst[" + index + "].Rate'   style='width: 80px;' type='text' onkeyup = 'changeQty(this," + index + ")'  /></td>";
        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='RetLst[" + index + "].Amount'   style='width: 80px;' type='text'  /></td>";
        var purpose = "<td><input class='form-control' id='txtTransaction" + index + "' name='RetLst[" + index + "].Transaction'   style='width: 130px;' type='text'  /></td>";


        var removeCell = "<td><input id='Isvalid" + index + "' name='RetLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='RetLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>"  + Item + Unit + Current + Qty  + Purrate + rate + Amount + purpose+ removeCell + "</tr>";

        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(function () {
            $('._select').select2();
        });
    }



    function changeQty(_this, i) {
        try {
            var qty = document.getElementById("txtQty" + i).value;
            var pur = document.getElementById("txtRate" + i).value;
        
            var cl = document.getElementById("txtCurrent" + i).value;
            //alert(qty);
            //alert(pur);

            if (qty == "")
                qty = 0;

            if (pur == "")
                pur = 0;


            var tot = eval(qty) * eval(pur);
          

            if (eval(qty) > eval(cl)) {
                document.getElementById("txtQty" + i).value = "0";
                alert("Qty is Greaterthen Stock");
                qty = 0;
            }
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);

        }
        catch (ex) {
            alert(ex.message);
        }
    }

</script>



<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;


            if (document.getElementById("ddlLocation").value == "" || document.getElementById("ddlLocation").value == 0) {
                isValid = false;
                $(ddlLocation).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Location");
                return false;
            }
            else {
                $(ddlLocation).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("txtDid").value == "") {
                isValid = false;
                $(txtDid).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Doc ID");
                return false;
            }
            else {
                $(txtDid).css({
                    "border": "",
                    "background": ""
                });
            }
           

            if (document.getElementById("ddlDcType").value == "" || document.getElementById("ddlDcType").value == 0) {
                isValid = false;
                $(ddlDcType).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Dc Type");
                return false;
            }
            else {
                $(ddlDcType).css({
                    "border": "",
                    "background": ""
                });
            }
            
             if (document.getElementById("txtThrough").value == "") {
                isValid = false;
                $(txtThrough).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Through");
                return false;
            }
            else {
                $(txtThrough).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("ddlParty").value == "" || document.getElementById("ddlParty").value == 0) {
                isValid = false;
                $(ddlParty).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Party");
                return false;
            }
            else {
                $(ddlParty).css({
                    "border": "",
                    "background": ""
                });
            }

            if (document.getElementById("ddlStock").value == "" || document.getElementById("ddlStock").value == 0) {
                isValid = false;
                $(ddlCustomer_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Stock");
                return false;
            }
            else {
                $(ddlStock).css({
                    "border": "",
                    "background": ""
                });
            } 
            if (document.getElementById("txtRef").value == "") {
                isValid = false;
                $(txtRef).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Enter Ref No");
                return false;
            }
            else {
                $(txtRef).css({
                    "border": "",
                    "background": ""
                });
            }
           

            if (document.getElementById("ddlApproved").value == "" || document.getElementById("ddlApproved").value == 0) {
                isValid = false;
                $(ddlPro).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Approved By");
                return false;
            }
            else {
                $(ddlApproved).css({
                    "border": "",
                    "background": ""
                });
            }
             if (document.getElementById("ddlApproval2").value == "" || document.getElementById("ddlApproval2").value == 0) {
                isValid = false;
                $(ddlPro).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Approval2");
                return false;
            }
            else {
                $(ddlApproval2).css({
                    "border": "",
                    "background": ""
                });
            }
            


            
            if (isValid == false)
                e.preventDefault();
        });

    });
</script>