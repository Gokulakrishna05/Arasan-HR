@model Arasan.Models.SalesQuotation
@{
    ViewData["Title"] = "Sales Quotation";
}
<style>

    .mandatory {
        color: red;
        position: relative;
        top: 2px;
        left: 5px;
    }
</style>
<style>
    .newwidth {
        width: 120px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
      <div class="col-lg-12">

        <ol class="breadcrumb">
          <li> <a href="#">Home</a> </li>
          <li> <a>Sales</a> </li>
          <li class="active"> <strong> Sales Quotation </strong> </li>
        </ol>
      </div>
    </div>
     <div class="wrapper-content ">
        <div class="row">
         <div class="col-lg-12">
          <div class="ibox float-e-margins">
            <div class="widgets-container">
              <h5 style="font-size:14px">Sales Quotation</h5>
              <hr>
               @using (Html.BeginForm("SalesQuotation", "SalesQuotation", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

              <form>

                   <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <br />  <label for="inputName3" class="col-sm-4 control-label">New / Existing Quote <label class="mandatory">*</label></label>
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(C => C.QuoteFormatId, Model.QuoteFormatList,"--Please select--",new { @id = "ddlQuoteFormat", @Class = "form-control  _select", @TabIndex = 1, @onchange = "QuoteFormat(this.value);" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group" id="EnquiryQuote" style="display:none;">
                                                    <br />  <label for="inputName3" class="col-sm-4 control-label">From Enquiry <label class="mandatory">*</label></label>
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(C => C.EnquiryId, Model.EnquiryList, " -- Select -- ", new { @id = "ddlEnquiry", @Class = "form-control  _select", @style = "width:350px;" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
              <div class="row">
                                      
                                <div class="col-md-6">
                                    <div class="form-group">

                                       <br /> <label for="inputName3" class="col-sm-4 control-label">Quotation Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.EnqType, Model.Enqlst, new { @id = "ddlEnqType", @Class = "form-control  _select", @TabIndex = 1 })
                                            @Html.HiddenFor(C => C.ID)
                                            @Html.HiddenFor(C => C.QuoId)
                                            @Html.HiddenFor(C => C.Branch)
                                        </div>
                                    </div>
                                </div>


                                    <div class="col-md-6">
                                            <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">Quotation Date<label class="mandatory">*</label></label>


                                                      <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.QuoDate, new { @id = "QuoDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    </div>

                                   


                                            </div>
                                        </div>
                                    </div>
               <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br /> <label for="inputName3" class="col-sm-4 control-label">Currency<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Currency, Model.Curlst, new { @id = "ddlCurrency", @Class = "form-control  _select", @TabIndex = 1 })

                                                </div>
                                            </div>
                                        </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                         <br /> <label for="inputName3" class="col-sm-4 control-label">Customer Type<label class="mandatory">*</label></label>
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.CustomerType, Model.Typelst, new { @id = "ddlCustomerType", @Class = "form-control  _select", @TabIndex = 1 })
                                            @Html.HiddenFor(C => C.ID)

                                        </div>
                                    </div>
                                </div>
                                    </div>
                                     <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <br /> <label for="inputName3" class="col-sm-4 control-label">Customer Name<label class="mandatory">*</label></label>
                                                <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Customer, Model.Suplst,"--Please Select--" ,new { @id = "ddlCustomer", @Class = "form-control _select", @TabIndex = 1,onchange = "changeItem(this.value)" })
                                              @Html.HiddenFor(C => C.ID)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <br />  <label for="inputName3" class="col-sm-4 control-label">Address<label class="Mandatory"></label></label>

                                                      <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Address, new { @id = "txtAddress", @class = "form-control", @TabIndex = 1,@readonly=true })

                                        </div>

                                            </div>
                                        </div>
                                    </div>
                                     <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                 <br /><label for="inputName3" class="col-sm-4 control-label">Mobile No<label class="mandatory">*</label></label>
                                                <div class="col-sm-8">
                                                     @Html.TextBoxFor(C => C.Mobile, new { @id = "txtMobile", @class = "form-control", @TabIndex = 1 })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                 <br /> <label for="inputName3" class="col-sm-4 control-label">Email Id<label class="Mandatory"></label></label>

                                                      <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Gmail, new { @id = "txtGmail", @class = "form-control", @TabIndex = 1 })
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                           
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">

                                     <br />     <label for="inputName3" class="col-sm-4 control-label">PinCode<label class="Mandatory"></label></label>
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.PinCode, new { @id = "txtPinCode", @class = "form-control", @TabIndex = 2,@readonly=true})
                                        </div>
                                    </div>
                                </div>
                                  <div class="col-md-6">
                                    <div class="form-group">
                                        <br /> <label for="inputName3" class="col-sm-4 control-label">City<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.City, new { @id = "txtCity", @class = "form-control", @TabIndex = 2,@readonly=true })

                                        </div>

                                    </div>
                                </div>
                                
                            </div>
                                    
                                    
                                     <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                 <br /> <label for="inputName3" class="col-sm-4 control-label">Country Of Shipment<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Country, Model.cuntylst,"--Please Select--", new { @id = "ddlCountry", @Class = "form-control _select", @TabIndex = 1 })

                                                </div>
                                            </div>
                                        </div>
                                     <div class="col-md-6">
                                         <div class="form-group">
                                         <br /> <label for="inputName3" class="col-sm-4 control-label">Priority<label class="Mandatory"></label></label>

                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Pro, Model.Prilst, new { @id = "ddlPro", @Class = "form-control  _select", @TabIndex = 1 })

                                        </div>

                                           </div>
                                     </div>
                                    </div>

                                    
                                 <div style="height:30px;"></div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="btn-group">
                                            <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                        </div>
                                    </div>
                                </div>


                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    @* <div class="ibox float-e-margins">*@

                                    <!-- / ibox-title -->
                                    @* <div id="demo3" class="ibox-content collapse in">
                                <div class="borderedTable">
                                <div class="table-scrollable">*@
                                    <table class="table table-striped table-hover" id="dataTable">
                      <thead>
                        <tr>
                          
                          <th>Item Group</th>
                          <th>Item Id </th>
                          <th>Unit</th>
                          <th> Conv.Factor</th>
                          <th> Quantity </th>
                          <th>Description</th>
                           <th> Rate </th>
                          <th> Amount </th>
                          <th> Disc %</th>
                                                <th>Disc amount</th>
                                                <th>Frieght charges</th>
                                                <th>CGSTP</th>
                                                <th>SGSTP</th>
                                                <th>IGSTP</th>
                                                <th>CGST</th>
                                                <th>SGST</th>
                                                <th>IGST</th>
                                                <th>Total Amount</th>





                                            </tr>
                      </thead>
                                        <tbody id="tbBooks">
                                            @{

                                                int i = 0;
                                                int j = 1;
                                                foreach (var item in Model.QuoLst.ToList())
                                                {
                                                    <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">
                                                        <td>
                                                            @Html.DropDownListFor(o => o.QuoLst[i].ItemGroupId, Model.QuoLst[i].ItemGrouplst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItemGrp" + i, style = "width: 200px;", onchange = "Grup_Change(this.value," + i + ")"})

                                                        </td>

                                                        <td>
                                                            @Html.DropDownListFor(o => o.QuoLst[i].ItemId, Model.QuoLst[i].Itlst, "Please Select", new { @class = "form-control _select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItemDetail(this.value," + i + ")" })
                                                            @Html.HiddenFor(o => o.QuoLst[i].saveItemId)
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].Unit,  new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].ConFac, new { @id = "txtConFac" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                            </td>
                                                        @*<td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].Desc, new { @id = "txtDesc" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @readonly = "readonly" })
                                                        </td>*@
                                                        @* <td>
                                            @Html.TextBoxFor(o => o.Itlst[i]. Batch, new { @id = "txtBatch" + i, @class = "form-control", style = "width: 90px;"})
                                            </td>
                                            <td>
                                            @Html.TextBoxFor(o => o.Itlst[i]. serial, new { @id = "txtserial" + i, @class = "form-control", style = "width: 90px;"})
                                            </td>
                                            <td>
                                            @Html.TextBoxFor(o => o.Itlst[i]. Expiry, new { @id = "txtExpiry" + i, @class = "form-control", style = "width: 90px;"})
                                            </td>*@
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].Quantity, new { @id = "txtQuantity" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].Des, new { @id = "txtDes" + i, @class = "form-control", style = "width:220px;" , @readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].Rate, new { @id = "txtRate" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" ,@readonly = "readonly"})
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(o => o.QuoLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            @Html.TextBoxFor(o => o.QuoLst[i]. Amount, new { @id = "txtAmount" + i , @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" ,@readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].Disc, new { @id = "txtDisc" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].DiscAmount, new { @id = "txtDiscAmount" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].FrigCharge, new { @id = "txtFrigCharge" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;", @onkeyup = "changeQty(this," + i + ")" })
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].CGSTP, new { @id = "txtCGSTP" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].SGSTP, new { @id = "txtSGSTP" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].IGSTP, new { @id = "txtIGSTP" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].CGST, new { @id = "txtCGST" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].SGST, new { @id = "txtSGST" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].IGST, new { @id = "txtIGST" + i, @class = "form-control", style = "width: 80px;",onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly", @onkeyup = "changeQty(this," + i + ")"})
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(o => o.QuoLst[i].TotalAmount, new { @id = "txtTotalAmount" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                        </td>




                                                        <td>
                                                            @Html.HiddenFor(o => o.QuoLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="Suplst.Index" type="hidden" value="@(i)" />
                                                        </td>

                                                    </tr>

                                                    i = i + 1;
                                                    j = j + 1;
                                                }
                                            }
                      </tbody>
                    </table>
                  </div>
                </div>
              
            
         
       




                                     <div style="height:30px;"></div>
                                     <div class="row">
                                        @*<div class="col-md-6">
                                            <div class="form-group">

                                        <br />  <label for="inputName3" class="col-sm-4 control-label">Recieved By<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                          @Html.DropDownListFor(C => C.Recieved, Model.RecList, new { @id = "ddlRecieved", @Class = "form-control  _select", @TabIndex = 1 })
                                        
                                                </div>
                                            </div>
                                        </div>*@
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <br />  <label for="inputName3" class="col-sm-4 control-label">Assign To<label class="Mandatory"></label></label>

                                                      <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Emp, Model.assignList, new { @id = "ddlEmp", @Class = "form-control  _select", @TabIndex = 1 })

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                        @*<div style="height:30px;"></div>*@
                        @* <div class="row">
                                        <div class="col-md-6">
                                             <div class="form-group">
                                                <label for="inputName3" class="col-sm-4 control-label">Followup Date<label class="Mandatory"></label></label>


													<div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2"
														data-link-format="yyyy-mm-dd">
														<input class="form-control" size="32" type="text" value="" readonly>
														<span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
													</div>
													<input type="hidden" id="dtp_input2" value="" />
													<br/>


                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="inputName3" class="col-sm-4 control-label">Time<label class="Mandatory"></label></label>

                                                      <div class="col-sm-8">
												  <input class="form-control" id="inputEmail3" placeholder="" type="text">
												</div>

                                            </div>
                                        </div>
                                    </div>
                                    <div style="height:30px;"></div>
									 <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">

                                                <label for="inputName3" class="col-sm-2 control-label">Followup Details<label class="Mandatory"></label></label>
                                                <div class="col-sm-10">
                                                    <textarea class="form-control" id="inputEmail3" type="text" rows="3"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                      </div>*@
                                       @*  <div style="height:30px;"></div>
                                     <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">

                                                <label for="inputName3" class="col-sm-4 control-label">Desp. Through<label class="Mandatory"></label></label>
                                                <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.Through, Model.Categorylst, new { @id = "ddlThrough", @Class = "form-control chosen-select", @TabIndex = 1 })

                                                </div>
                                            </div>
                                        </div>

                                    </div>*@
                                   
                                     <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">

                                        <br /> <label for="inputName3" class="col-sm-2 control-label">Narration<label class="Mandatory"></label></label>
                                                <div class="col-sm-10">
                                                    <textarea class="form-control" id="inputEmail3" type="text" rows="3"></textarea>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                 <div style="height:30px;"></div>
                                 <div class="col-lg-10"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs" id="btnSave">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListSalesQuotation", "SalesQuotation")'">Cancel</button>
 
              </form>
              }
            </div>
          </div>
        </div>

        </div>
     </div>
<script>
    $(function () {
        $('._select').select2();
    });
    function PopulateDropDown(dropDownId, list)
    {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
  $('._select').select2();
    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
 $('._select').select2();
    function removeRow(id)
    {
        
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function Grup_Change(itemid, i) {
        //alert(itemid);
        //debugger;
        $.ajax({
            url: "GetItemJSON",
            type: "post",
            data: { 'itemid': itemid },
            cache: false,
            success: function (response) {
                var newlist;
                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                PopulateDropDown("#ddlItem" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select Item Group");
            }
        });
    }
    $('._select').select2();
    function changeItemDetail(ItemId, i) {
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;
                document.getElementById("txtDes" + i).value = result.desc;
                document.getElementById("txtConFac" + i).value = result.cf;
                document.getElementById("txtRate" + i).value = result.price;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {
            var GTot = 0;
            var j = 0;
            var qty = 0;
            var tot = 0;
            var totfrieght = 0;
            var totamt = 0;
            var totamount = 0;
            var qty = document.getElementById("txtQuantity" + i).value;
            var up = document.getElementById("txtRate" + i).value;
            var CF = document.getElementById("txtConFac" + i).value;
            var frieght = document.getElementById("txtFrigCharge" + i).value;
            var IGST = document.getElementById("txtIGSTP" + i).value;
            var CGST = document.getElementById("txtCGSTP" + i).value;
            var SGST = document.getElementById("txtSGSTP" + i).value;
            var Disc = document.getElementById("txtDisc" + i).value;
            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

            if (CF == "")
                CF = 1;

            if (IGST == "")
                IGST = 0;


            if (CGST == "")
                CGST = 0;


            if (SGST == "")
                SGST = 0;

            if (Disc == "")
                 Disc = 0;

            if (frieght == "")
                 frieght = 0;

            var tot = eval(qty) * eval(up) * eval(CF);
            document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            var igstperc = (eval(tot) / 100) * eval(IGST);
            var cgstperc = (eval(tot) / 100) * eval(CGST);
            var sgstperc = (eval(tot) / 100) * eval(SGST);
            var Discperc = (eval(tot) / 100) * eval(Disc);

            document.getElementById("txtCGST" + i).value = cgstperc.toFixed(2);
            document.getElementById("txtSGST" + i).value = sgstperc.toFixed(2);
            document.getElementById("txtIGST" + i).value = igstperc.toFixed(2);
            document.getElementById("txtDiscAmount" + i).value = Discperc.toFixed(2);

            var tottax = eval(tot) + eval(igstperc) + eval(cgstperc) + eval(sgstperc) + eval(frieght);
            var totdisc = eval(tottax) - eval(Discperc);
          

            document.getElementById("txtTotalAmount" + i).value = totdisc.toFixed(2);

            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    frieght = $(this).find('#txtFrigCharge' + j.toString()).val();
                    if (frieght == "")
                        frieght = 0;
                    var amt = $(this).find('#txtAmount' + j.toString()).val();
                    if (amt == "")
                        amt = 0;

                    totamt += eval(amt);
                     totfrieght += eval(frieght);
                    var tamt = $(this).find('#txtTotalAmount' + j.toString()).val();
                            if (tamt == "")
                        tamt = 0;

                        totamount += eval(tamt);

                }
                   j += 1;
            });

            document.getElementById("txtFrig").value = totfrieght.toFixed(2);
           @* document.getElementById("gross").value = totamt.toFixed(2);
            document.getElementById("net").value = totamount.toFixed(2);*@
            document.getElementById("hidnet").value = totamount.toFixed(2);

        }
        catch (ex) {
            alert(ex.message);
        }
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    @*function changeItem(ItemId) {
        $.ajax({
            url: 'GetCustomerDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtAddress").value = result.address;
                document.getElementById("txtMobile").value = result.contact;
                document.getElementById("txtCity").value = result.city;
                document.getElementById("txtPinCode").value = result.pin;
            },
            error: function () {
                alert("Data Not Found");
            }
        });

    }*@

    function changeItem(ItemId) {
        $.ajax({
            url: 'GetEnqDetails',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtAddress").value = result.address;
                document.getElementById("txtMobile").value = result.contact;
                document.getElementById("txtCity").value = result.city;
                document.getElementById("txtPinCode").value = result.pin;
            },
            error: function () {
                alert("Data Not Found");
            }
        });

    }

    $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var ItemGrp = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItemGrp" + index + "' name='QuoLst[" + index + "].ItemGroupId' onchange = 'Grup_Change(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";

        var Item = "<td><select style = 'width: 200px;' class='form-control _select newcss' id='ddlItem" + index + "' name='QuoLst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option></select></td>";

        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='QuoLst[" + index + "].Unit'  style='width: 80px;' type='text'onkeydown='return isNumeric2(event.keyCode,this.value)'  onchange = 'changeQty(this.value," + index + ")'  readonly='True' /></td>";

        var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='QuoLst[" + index + "].ConFac'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text'readonly='True'  /></td>";

        
          var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='QuoLst[" + index + "].Quantity'  style='width: 90px;' type='text'/></td>"
          
          var Des = "<td><input class='form-control' id='txtConFac" + index + "' name='QuoLst[" + index + "].Des'  style='width: 220px;' type='text' readonly='True'  /></td>";


           var Rate = "<td><input class='form-control' id='txtRate" + index + "' name='QuoLst[" + index + "].Rate'  style='width: 80px;' type='text'onkeydown='return isNumeric2(event.keyCode,this.value)'  onchange = 'changeQty(this.value," + index + ")'  readonly='True' /></td>";

            var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='QuoLst[" + index + "].Amount'  style='width: 80px;' type='text'onkeydown='return isNumeric2(event.keyCode,this.value)'  onchange = 'changeQty(this.value," + index + ")'  readonly='True' /></td>";
       
              var Disc = "<td><input class='form-control' id='txtDisc" + index + "' name='QuoLst[" + index + "].Disc'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'    /></td>";
        
        var DiscAmount = "<td><input class='form-control' id='txtDiscAmount" + index + "' name='QuoLst[" + index + "].DiscAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' readonly='True'   /></td>";
        
        var FrigCharge = "<td><input class='form-control' id='txtFrigCharge" + index + "' name='QuoLst[" + index + "].FrigCharge'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'    /></td>";
        
      
        var CGSTP = "<td><input class='form-control' id='txtCGSTP" + index + "' name='QuoLst[" + index + "].CGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'  /></td>";
        
        var SGSTP = "<td><input class='form-control' id='txtSGSTP" + index + "' name='QuoLst[" + index + "].SGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'    /></td>";
        
        var IGSTP = "<td><input class='form-control' id='txtIGSTP" + index + "' name='QuoLst[" + index + "].IGSTP'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'    /></td>";
        
        var CGST = "<td><input class='form-control' id='txtCGST" + index + "' name='QuoLst[" + index + "].CGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' readonly='True'    /></td>";
        
        var SGST = "<td><input class='form-control' id='txtSGST" + index + "' name='QuoLst[" + index + "].SGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' readonly='True'    /></td>";
        
        var IGST = "<td><input class='form-control' id='txtIGST" + index + "' name='QuoLst[" + index + "].IGST'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text' readonly='True'    /></td>";
        
        var TotalAmount = "<td><input class='form-control' id='txtTotalAmount" + index + "' name='DirLst[" + index + "].TotalAmount'  style='width: 80px;' onkeydown='return isNumeric2(event.keyCode,this.value)' type='text'    /></td>";



        var removeCell = "<td><input id='Isvalid" + index + "' name='QuoLst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='QuoLst.Index' type='hidden' value='" + index + "'  /></td>";

        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + ItemGrp + Item + Unit + ConFac  + Quantity + Des + Rate + Amount + Disc + DiscAmount + FrigCharge  + CGSTP + SGSTP + IGSTP + CGST + SGST + IGST + TotalAmount +  removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);
        $(function() {
            $('._select').select2();
        })
    }
</script>
<script>
    <a class="fancybox1" rel = "group" data - fancybox - type="iframe" href = "#" style = "display: none; width: 760px;" > </a>
        < a class="fancyboxe1" rel = "group" data - fancybox - type="iframe" href = "#" style = "display: none; width: 760px;" > </a>
            < link rel = "stylesheet" href = "@Url.Content("~/css/jquery.fancybox.css?v=2.1.5")" type = "text/css" media = "screen" />
                <script type="text/javascript" src = "@Url.Content("~/css/jquery.fancybox.pack.js?v=2.1.5")" ></script>
<script type="text/javascript">
        var fancybox123;
    jQuery(document).ready(function ($) {
        $(".fancybox").fancybox({
            width: '80%',
            height: '10%',
            arrows: false,
            afterClose: function () {
                location.reload();
                return;
            }
        });
        fancybox123 = $.fancybox;
    });

    function close_popup() {
        fancybox123.close();
        $(".fancybox1").fancybox({
            width: '100%',
            height: '100%',
            arrows: false,
        });
        $(".fancybox1").eq(0).trigger('click');
    }
</script>
<script>
    $(document).ready(function () {
        $('#btnSave').click(function (e) {
            var isValid = true;
            if (document.getElementById("EnDate").value == "") {
                isValid = false;
                $(EnqDate).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Enq Date");
                return false;
            }
            else {
                $(F).css({
                    "border": "",
                    "background": ""
                });
            }
            @*if (document.getElementById("txtMobile").value == "") {
                isValid = false;
                $(txtMobile).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Phone Number");
                return false;
            }
            else {
                $(txtMobile).css({
                    "border": "",
                    "background": ""
                });
            }*@


            if (document.getElementById("ddlCustomerType").value == "" || document.getElementById("ddlCustomerType").value == 0) {
                isValid = false;
                $(ddlCustomerType_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Customer Type");
                return false;
            }
            else {
                $(ddlCustomerType_chzn).css({
                    "border": "",
                    "background": ""
                });
            }
            @*if (document.getElementById("ddlCustomer").value == "" || document.getElementById("ddlCustomer").value == 0) {
                isValid = false;
                $(ddlCustomer_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Customer Name");
                return false;
            }
            else {
                $(ddlCustomer_chzn).css({
                    "border": "",
                    "background": ""
                });
            }*@
            if (document.getElementById("ddlEnqType").value == "" || document.getElementById("ddlEnqType").value == 0) {
                isValid = false;
                $(ddlEnqType_chzn).css({
                    "border": "1px solid red",
                    "background": "#FFCECE"
                });

                alert("Please Select Enq Type");
                return false;
            }
            else {
                $(ddlEnqType_chzn).css({
                    "border": "",
                    "background": ""
                });
            }
            if (isValid == false)
                e.preventDefault();
        });

    });
    function QuoteFormat(value) {
                if (value == "new") {
                    $('#EnquiryQuote').css('display', 'none');
                }
                if (value == "existing") {
                    $('#EnquiryQuote').css('display', 'block');
                }
            }
</script>