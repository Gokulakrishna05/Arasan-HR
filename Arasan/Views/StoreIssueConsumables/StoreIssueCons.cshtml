@model Arasan.Models.StoreIssueConsumables

@{
    ViewData["Title"] = "Stores Issuse Consumbables";
}
<style>
    .newwidth {
        width: 120px;
    }
</style>
<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">

        <ol class="breadcrumb">
            <li> <a href="#">Home</a> </li>
            <li> <a>Stores Management</a> </li>
            <li class="active"> <strong>Stores Issuse Consumbables</strong> </li>
        </ol>
    </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="widgets-container">
                    <h5 style="font-size:14px">Stores Issuse Consumbables</h5>
                    <hr>
                    @using (Html.BeginForm("StoreIssueConsumables", "StoreIssueConsumables", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                    <form>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Branch <label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(C => C.Branch, Model.Brlst, new { @id = "ddlBranch", @Class = "form-control chosen-select", @TabIndex = 1 })

                                    </div>
                                </div>
                                </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Location<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">

                                        @Html.DropDownListFor(C => C.Location, Model.Loclst, new { @id = "ddllocation", @Class = "form-control chosen-select", @TabIndex = 4 })

                                    </div>
                                </div>
                            </div>
                            </div><br />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Document ID<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.DocNo, new { @id = "txtDocNo", @class = "form-control", @TabIndex = 2 })<br />
                                            @Html.HiddenFor(C => C.ID)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Document Date<label class="Mandatory"></label></label>

                                    <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                        @Html.TextBoxFor(C => C.DocDate, new { @id = "DocDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    </div>
                                    <input type="hidden" id="dtp_input2" value="" />
                                    <br />

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Req No<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.ReqNo, new { @id = "txtReqNo", @class = "form-control", @TabIndex = 2 })<br />
                                        </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Req Date<label class="Mandatory"></label></label>

                                    <div class="input-group date form_date col-sm-8" data-date="" data-date-format="dd-M-yyyy">
                                            @Html.TextBoxFor(C => C.ReqDate, new { @id = "ReqDate", @class = "form-control", @TabIndex = 2,@size="31",@readonly=true })
                                        <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span> <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    </div>
                                    <input type="hidden" id="dtp_input2" value="" />
                                    <br />

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Work Center<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Work, new { @id = "txtWork", @class = "form-control", @TabIndex = 2 })<br />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Process<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Process, new { @id = "txtProcess", @class = "form-control", @TabIndex = 2 })<br />
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">M/C ID<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.MCNo, new { @id = "txtMCNo", @class = "form-control", @TabIndex = 2 })<br />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">M/C Name<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">

                                            @Html.TextBoxFor(C => C.MCNa, new { @id = "txtMCNa", @class = "form-control", @TabIndex = 2 })<br />

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <label for="inputName3" class="col-sm-4 control-label">Location Cunsumed<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.LocCon, new { @id = "txtLocCon", @class = "form-control", @TabIndex = 2 })
                                        </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                    <br /><br />   <label for="inputName3" class="col-sm-4 control-label">User ID<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.DropDownListFor(C => C.User, Model.EnqassignList, new { @id = "ddlUser", @Class = "form-control chosen-select", @TabIndex = 1 })
                                        </div>
                                </div>
                            </div>
                        </div>
                            <div style="height:30px;"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="btn-group">
                                        <p style="float:right;"> <input type="button" value="Add Row" onclick="AddRow()" class="btn sbold green" /></p>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12" style="overflow-x:scroll; min-width:300px; min-height:300px;">

                                    @* <div class="ibox float-e-margins">*@

                                    <!-- / ibox-title -->
                                    @* <div id="demo3" class="ibox-content collapse in">
                                <div class="borderedTable">
                                <div class="table-scrollable">*@
                                    <table class="table table-striped table-hover" id="dataTable">
                                                    <thead>
                                                        <tr>
                                                               <th> Item Group </th>
                                                            <th> Item </th>
                                                            <th>Unit</th>
                                                            <th> CF</th>
                                                           @* <th> From Bin</th>*@
                                                         @*   <th> Batch?</th>*@
                                                <th>  Quantity </th>
                                                           @* <th> Drum?</th>
                                                            <th> Serial </th>*@
                                                          @*  <th> Old Qty</th>*@
                                                            <th> Pend Qty </th>
                                                            <th> Req Qty </th>
                                                           @* <th> Recorder </th>*@
                                                          @*  <th> Current Stock </th>*@
                                                           
                                                            <th> Indp </th>
                                                            <th>Rate</th>
                                                            <th>Amount</th>




                                                        </tr>

                                                    </thead>
                                                    <tbody id="tbBooks">
                          @{

                                                            int i = 0;
                                                int j = 1;

                                                foreach (var item in Model.SICLst.ToList())
                                                            {

                                <tr id="trBook@(i)" class="chkitemlst" style="height: 30px;border-bottom: 1px dashed #ddd;">



                                                            <td>
                                                                @Html.DropDownListFor(o => o.SICLst[i].ItemGroupId, Model.SICLst[i].ItemGrouplst, "Please Select", new { @class = "form-control chosen-select newcss", @id = "ddlItemGrp" + i, style = "width: 200px;", onchange = "Grup_Change(this.value," + i + ")"})
                                                            </td>
                                                            <td>
                                                                @Html.DropDownListFor(o => o.SICLst[i].ItemId, Model.SICLst[i].Itemlst, "Please Select", new { @class = "form-control chosen-select newcss", @id = "ddlItem" + i, style = "width: 200px;", onchange = "changeItem(this.value," + i + ")" })
                                                            @Html.HiddenFor(o => o.SICLst[i].saveItemId)
                                                            </td>
                                                            <td>
                                                            @Html.TextBoxFor(o => o.SICLst[i].Unit, new { @id = "txtUnit" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                            </td>
                                                             <td>
                                                            @Html.TextBoxFor(o => o.SICLst[i].ConFac, new { @id = "txtConFac" + i, @class = "form-control", style = "width: 80px;" ,onkeydown = "return isNumeric2(event.keyCode,this.value)", @readonly = "readonly"})
                                                            </td>
                                                          @*  <td>
                                                                @Html.TextBoxFor(o => o.SICLst[i].FromBin, new { @id = "txtFromBin" + i, @class = "form-control", style = "width: 80px;" })
                                                            </td>*@
                                                            <td>
                                                            @Html.TextBoxFor(o => o.SICLst[i].Quantity, new { @id = "txtQuantity" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" })
                                                            </td>
                                                         @*   <td>
                                                            @Html.DropDownListFor(o => o.SICLst[i].Drum, Model.SICLst[i].DRLst, "Please Select", new { @class = "form-control chosen-select newcss", @id = "ddlDrum" + i, style = "width: 170px;"})
                                                                                                                                                                                                 </td>
                                                            <td>
                                                            @Html.DropDownListFor(o => o.SICLst[i].Serial, Model.SICLst[i].SRLst, "Please Select", new { @class = "form-control chosen-select newcss", @id = "ddlSerial" + i, style = "width: 170px;"})
                                                        </td>*@
                                                            <td>
                                                            @Html.TextBoxFor(o => o.SICLst[i].PendQty, new { @id = "txtPendQty" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" })
                                                            </td>
                                                            <td>
                                                                @Html.TextBoxFor(o => o.SICLst[i].ReqQty, new { @id = "txtReqQty" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" })
                                                            </td>
                                                            <td>
                                                            @Html.TextBoxFor(o => o.SICLst[i].Indp, new { @id = "txtIndp" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" })
                                                            </td>
                                                              @*  <td>
                                                                @Html.TextBoxFor(o => o.SICLst[i].IndCtr, new { @id = "txtIndCtr" + i, @class = "form-control", style = "width: 80px;" })
                                                            </td>  *@
                                                        <td>
                                                            @Html.TextBoxFor(o => o.SICLst[i].rate, new { @id = "txtrate" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", @onkeyup = "changeQty(this," + i + ")", style = "width: 80px;" ,@readonly = "readonly"})
                                                        </td>
                                                            <td>
                                                            @Html.HiddenFor(o => o.SICLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                            @Html.TextBoxFor(o => o.SICLst[i].Amount, new { @id = "txtAmount" + i, @class = "form-control",onkeydown = "return isNumeric2(event.keyCode,this.value)", style = "width: 80px;" ,@readonly = "readonly" })
                                                            </td>
                                                            <td>
                                                                @Html.HiddenFor(o => o.SICLst[i].Isvalid, new { @id = "Isvalid" + i })
                                                                <img onclick="removeRow(@(i));" src="../Images/delete.png" style="cursor:pointer" /> <input name="EnqLst.Index" type="hidden" value="@(i)" />
                                                            </td>


                                                                </tr>
                                                    i = i + 1;
                                                    j = j + 1;
                                                }
                                                        }
                                                    </tbody>




                                                </table>
                                            </div>
                                        </div>
                                    
                              

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">

                                   <br/> <label for="inputName3" class="col-sm-4 control-label">Narration<label class="Mandatory"></label></label>
                                    <div class="col-sm-8">
                                            @Html.TextBoxFor(C => C.Narr, new { @id = "Narr", @class = "form-control", @TabIndex = 2 })
                                        </div>
                                </div>
                            </div>

                        </div>

                        <div style="height:30px;"></div>
                            <button type="submit" class="btn aqua m-t-xs bottom15-xs">Submit</button>
                            <button class="btn btn-danger" type="button" causesvalidation="false" onclick="location.href='@Url.Action("ListStoreIssueCons", "StoreIssueConsumables")'">Cancel</button>

                    </form>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    $(".chosen-select").chosen();
     $('.form_date').datetimepicker({
        //   language:  'fr',
        weekStart: 1,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });
    function Grup_Change(itemid, i) {
        //alert(itemid);
        //debugger;
        $.ajax({
            url: "GetItemJSON",
            type: "post",
            data: { 'itemid': itemid },
            cache: false,
            success: function (response) {
                var newlist;
                //alert(JSON.stringify(response));
                newlist = response.Ilst;
                PopulateDropDown("#ddlItem" + i, response);
            },
            error: function () {
                debugger;
                alert("Please Select Item Group");
            }
        });
    }
    function PopulateDropDown(dropDownId, list) {
        //alert(list);
        $(dropDownId).empty().append('<option selected="selected" value="0">Please select</option>');
        if (list != null && list.length > 0) {
            $(dropDownId).removeAttr("disabled");
            $.each(list, function () {
                $(dropDownId).append($("<option></option>").val(this['value']).html(this['text']));
            });
        }
        $(dropDownId).trigger("liszt:updated");
    }
    
   
    $(".chosen-select").chosen();
    function removeRow(id) {
        var table = document.getElementById("dataTable");
        var rowCount = table.rows.length;
        var row = document.getElementById('trBook' + id);
        var j = 0;
        $('tr.chkitemlst').each(function () {
            if ($(this).css('display') !== 'none') {
                j += 1;
            }
        });
        if (j > 1) {
            row.style.display = "none";
            document.getElementById('Isvalid' + id).value = "N";
        }
        else {
            alert("Cannot delete all the rows.")
        }
    }
    function AddRow() {
        var opt = "";
        $.ajax({
            type: "POST",
            url: 'GetItemGrpJSON',
            success: function (data) {

                $.each(data, function () {
                    opt += "<option value=" + this.value + ">" + this.text + "</option>";
                });
                AppendRow(opt);
            }
        })
    }
    function AppendRow(opt) {
        var index = $("#tbBooks").children("tr").length;

        var ItemGrp = "<td><select style = 'width: 200px;' class='form-control chosen-select newcss' id='ddlItemGrp" + index + "' name='SICLst[" + index + "].ItemGroupId' onchange = 'Grup_Change(this.value," + index + ")'><option value=''>Please select</option>" + opt + "</select></td>";


        var Item = "<td><select style = 'width: 200px;' class='form-control chosen-select newcss' id='ddlItem" + index + "' name='Itemlst[" + index + "].ItemId' onchange = 'changeItem(this.value," + index + ")'><option value=''>Please select</option></select></td>";
        var Unit = "<td><input class='form-control' id='txtUnit" + index + "' name='SICLst[" + index + "].Unit'  style='width: 80px;' type='text'onkeydown='return isNumeric2(event.keyCode,this.value)'  onchange = 'changeQty(this.value," + index + ")'  readonly='True' /></td>";
        var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='SICLst[" + index + "].ConFac'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text'readonly='True'  /></td>";

        @*var ConFac = "<td><input class='form-control' id='txtConFac" + index + "' name='DirLst[" + index + "].ConFac'  style='width: 80px;' type='text'  /></td>";*@

       @* var FromBin = "<td><input class='form-control' id='txtFromBin" + index + "' name='SICLst[" + index + "].FromBin'  style='width: 80px;' type='text'   /></td>";*@

        var Quantity = "<td><input class='form-control' id='txtQuantity" + index + "' name='SICLst[" + index + "].Quantity'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value='0' onchange = 'changeQty(this.value," + index + ")' /></td>";

      @*  var Drum = "<td><input class='form-control' id='txtDrum" + index + "' name='SICLst[" + index + "].Drum'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 170px;text-align:right' type='text' value='0' readonly='True' /></td>";


            var Serial = "<td><input class='form-control' id='txtSerial" + index + "' name='SICLst[" + index + "].Serial'  style='width: 170px;' type='text'    /></td>";*@

        var PendQty = "<td><input class='form-control' id='txtPendQty" + index + "' name='SICLst[" + index + "].PendQty'  style='width: 80px;' type='text'   /></td>";

        var ReqQty = "<td><input class='form-control' id='txtReqQty" + index + "' name='SICLst[" + index + "].ReqQty'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)'  type='text'    /></td>";
        var Indp = "<td><input class='form-control' id='txtIndp" + index + "' name='SICLst[" + index + "].Indp'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)'  type='text'  /></td>";
        var rate = "<td><input class='form-control' id='txtrate" + index + "' name='SICLst[" + index + "].rate'  style='width: 80px;'onkeydown='return isNumeric2(event.keyCode,this.value)'  type='text' readonly='True'    /></td>";
        var Amount = "<td><input class='form-control' id='txtAmount" + index + "' name='SICLst[" + index + "].Amount'  onkeydown='return isNumeric2(event.keyCode,this.value)' style='width: 80px;text-align:right' type='text' value='0' readonly='True' /></td>";

      @*  var TariffId = "<td><input class='form-control' id='txtTariffId" + index + "' name='DirLst[" + index + "].TariffId'  style='width: 80px;' type='text'  /></td>";

        var CGSTP = "<td><input class='form-control' id='txtCGSTP" + index + "' name='DirLst[" + index + "].CGSTP'  style='width: 80px;' type='text'  /></td>";

        var SGSTP = "<td><input class='form-control' id='txtSGSTP" + index + "' name='DirLst[" + index + "].SGSTP'  style='width: 80px;' type='text'    /></td>";

        var IGSTP = "<td><input class='form-control' id='txtIGSTP" + index + "' name='DirLst[" + index + "].IGSTP'  style='width: 80px;' type='text'    /></td>";

        var CGST = "<td><input class='form-control' id='txtCGST" + index + "' name='DirLst[" + index + "].CGST'  style='width: 80px;' type='text'    /></td>";

        var SGST = "<td><input class='form-control' id='txtSGST" + index + "' name='DirLst[" + index + "].SGST'  style='width: 80px;' type='text'    /></td>";

        var IGST = "<td><input class='form-control' id='txtIGST" + index + "' name='DirLst[" + index + "].IGST'  style='width: 80px;' type='text'    /></td>";

        var TotalAmount = "<td><input class='form-control' id='txtTotalAmount" + index + "' name='DirLst[" + index + "].TotalAmount'  style='width: 80px;' type='text'    /></td>";
*@


        var removeCell = "<td><input id='Isvalid" + index + "' name='Itemlst[" + index + "].Isvalid' type='hidden' value='Y'><img  src='../Images/delete.png' onclick='removeRow(" + index + ");'  style='cursor:pointer' /><input name='DirLst.Index' type='hidden' value='" + index + "'  /></td>";


        var newRow = "<tr class='chkitemlst'  style='height: 30px;border-bottom: 1px dashed #ddd;'  id='trBook" + index + "'>" + ItemGrp + Item + Unit  + Quantity + PendQty + ReqQty + Indp + rate + Amount +  removeCell + "</tr>";
        //alert(Packing);
        $("#tbBooks").append(newRow);

        $(".chosen-select").chosen();
    }
</script>
<script>
    function changeItem(ItemId, i) {
        $.ajax({
            url: 'GetItemDetail',
            data: { "ItemId": ItemId },
            type: "GET",
            success: function (result) {

                document.getElementById("txtUnit" + i).value = result.unit;

                document.getElementById("txtConFac" + i).value = result.cf;
                document.getElementById("txtrate" + i).value = result.price;
            },
            error: function () {
                alert("Data Not Found");
            }
        });
    }
    function changeQty(_this, i) {
        try {
            var qty = document.getElementById("txtQuantity" + i).value;
            var up = document.getElementById("txtrate" + i).value;
            var CF = document.getElementById("txtConFac" + i).value;
            if (qty == "")
                qty = 0;

            if (up == "")
                up = 0;

            if (CF == "")
                CF = 0;

            if (up > 0) {
                var tot = eval(qty) * eval(up) * eval(CF);
                document.getElementById("txtAmount" + i).value = tot.toFixed(2);
            } else {
                document.getElementById("txtAmount" + i).value = 0;
            }



            var GTot = 0;
            var j = 0;
            $('tr.chkitemlst').each(function () {
                if ($(this).css('display') !== 'none') {
                    var unit = $(this).find('#txtQuantity' + j.toString()).val();
                    var qtys = $(this).find('#txtrate' + j.toString()).val();
                    var CFs = $(this).find('#txtConFac' + j.toString()).val();
                    if (CFs == "")
                        CFs = 0;

                    var tots = eval(qtys) * eval(unit) * eval(CFs);
                    GTot = eval(tots) + eval(GTot);
                }
                j += 1;
            });

            //document.getElementById("gross").value = GTot;
            //document.getElementById("net").value = GTot;
            // document.getElementById('words').value = inWords(GTot);


        }
        catch (ex) {
            alert(ex.message);
        }
    }
</script>